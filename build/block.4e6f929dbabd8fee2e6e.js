/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@wordpress/icons/build-module/library/arrow-down.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/arrow-down.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

var arrowDown = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "-2 -2 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M9 2h2v12l4-4 2 1-7 7-7-7 2-1 4 4V2z"
}));
/* harmony default export */ __webpack_exports__["default"] = (arrowDown);
//# sourceMappingURL=arrow-down.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/arrow-up.js":
/*!************************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/arrow-up.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

var arrowUp = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "-2 -2 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M11 18H9V6l-4 4-2-1 7-7 7 7-2 1-4-4v12z"
}));
/* harmony default export */ __webpack_exports__["default"] = (arrowUp);
//# sourceMappingURL=arrow-up.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/pencil.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/pencil.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

var pencil = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M20.1 5.1L16.9 2 6.2 12.7l-1.3 4.4 4.5-1.3L20.1 5.1zM4 20.8h8v-1.5H4v1.5z"
}));
/* harmony default export */ __webpack_exports__["default"] = (pencil);
//# sourceMappingURL=pencil.js.map

/***/ }),

/***/ "./src/accordion/block.js":
/*!********************************!*\
  !*** ./src/accordion/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  InnerBlocks
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add content'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/accordion', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Accordion'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 43.01 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "Arrows-alt-v",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "cls-2",
    d: "M70.12,81.82,53.31,98.63a4.68,4.68,0,0,1-6.62,0L29.88,81.82a4.68,4.68,0,0,1,3.31-8h9V26.18h-9a4.68,4.68,0,0,1-3.31-8L46.69,1.37a4.68,4.68,0,0,1,6.62,0L70.12,18.18a4.68,4.68,0,0,1-3.31,8h-9V73.82h9A4.68,4.68,0,0,1,70.12,81.82Z",
    transform: "translate(-28.49)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    title: {
      type: 'string',
      source: 'html',
      selector: '.accordion-title'
    },
    titleLevel: {
      type: 'string',
      default: 'p'
    },
    id: {
      type: 'string',
      default: ''
    },
    inputId: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false
  },
  // Block description in side panel
  description: __('Create a single accordion.'),
  edit: props => {
    const id = props.clientId;
    props.setAttributes({
      id: id
    });
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Heading level of the title",
      value: props.attributes.titleLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.inputId,
      onChange: inputId => props.setAttributes({
        inputId
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "accordion-editor"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
      tagName: props.setAttributes.titleLevel,
      value: props.attributes.title,
      className: 'accordion-title',
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add Title",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "accordion-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    })))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const returned = props.attributes.inputId ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "accordion",
      id: props.attributes.inputId
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText.Content, {
      id: `title-${props.attributes.id}`,
      className: 'accordion-title',
      tagName: props.attributes.titleLevel,
      value: props.attributes.title,
      "aria-controls": `content-${props.attributes.id}`,
      "aria-expanded": 'false',
      role: 'button'
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      id: `content-${props.attributes.id}`,
      className: 'accordion-content'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks.Content, null))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "accordion"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText.Content, {
      id: `title-${props.attributes.id}`,
      className: 'accordion-title',
      tagName: props.attributes.titleLevel,
      value: props.attributes.title,
      "aria-controls": `content-${props.attributes.id}`,
      "aria-expanded": 'false',
      role: 'button'
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      id: `content-${props.attributes.id}`,
      className: 'accordion-content'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks.Content, null)));
    return returned;
  }
});

/***/ }),

/***/ "./src/ad-banner/block.js":
/*!********************************!*\
  !*** ./src/ad-banner/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  Button
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/ad-banner', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Banner'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "fas",
    "data-icon": "ad",
    className: "svg-inline--fa fa-ad fa-w-16",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M157.52 272h36.96L176 218.78 157.52 272zM352 256c-13.23 0-24 10.77-24 24s10.77 24 24 24 24-10.77 24-24-10.77-24-24-24zM464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM250.58 352h-16.94c-6.81 0-12.88-4.32-15.12-10.75L211.15 320h-70.29l-7.38 21.25A16 16 0 0 1 118.36 352h-16.94c-11.01 0-18.73-10.85-15.12-21.25L140 176.12A23.995 23.995 0 0 1 162.67 160h26.66A23.99 23.99 0 0 1 212 176.13l53.69 154.62c3.61 10.4-4.11 21.25-15.11 21.25zM424 336c0 8.84-7.16 16-16 16h-16c-4.85 0-9.04-2.27-11.98-5.68-8.62 3.66-18.09 5.68-28.02 5.68-39.7 0-72-32.3-72-72s32.3-72 72-72c8.46 0 16.46 1.73 24 4.42V176c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v160z"
  })),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    heading: {
      type: 'string',
      default: ''
    },
    link: {
      type: 'string',
      default: ''
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Create an ad banner.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'blocks-editor-banner'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Block Heading",
      value: props.attributes.heading,
      onChange: heading => props.setAttributes({
        heading
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose an image."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      allowedTypes: ['image'],
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.imgUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-link-card__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-link-card__button',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-link-card__button',
          onClick: removeMedia
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-link-card__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-link-card__description'
        }, "Pick an image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-link-card__button',
          onClick: open
        }, "Open Media Library"));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add the link."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.link !== '' ? props.attributes.link : '',
      className: "input",
      type: "text",
      placeholder: "Paste permalink or url...",
      onChange: e => {
        props.setAttributes({
          link: e.target.value
        });
      }
    })))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: 'banner ad-banner'
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.heading)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.link,
      className: 'banner__ad',
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
      className: "image"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    }))));
    return returned;
  }
});

/***/ }),

/***/ "./src/alert-banner/block.js":
/*!***********************************!*\
  !*** ./src/alert-banner/block.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  RadioControl,
  SelectControl,
  CheckboxControl,
  TextareaControl,
  TextControl,
  Button
} = wp.components;
const {
  InspectorControls,
  RichText,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/alert-banner', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Alert Banner'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "a8ae3902-6091-40f1-ba15-728f5bf1f742",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100.0008 88.88934"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "e2c1153f-a3b0-433f-9633-3fec02e357e5",
    "data-name": "Exclamation-triangle",
    class: "a7b4a3b0-640a-46e0-a18c-acb6750103c6"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "a7b4a3b0-640a-46e0-a18c-acb6750103c6"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M91.65678,94.44467H8.34279A8.33857,8.33857,0,0,1,1.124,81.94631L42.78228,9.72008a8.33709,8.33709,0,0,1,14.43588,0L98.87472,81.94631A8.33821,8.33821,0,0,1,91.65678,94.44467ZM42.01405,75.00008a7.98617,7.98617,0,1,0,7.98617-7.98617A7.98564,7.98564,0,0,0,42.01405,75.00008Zm1.69185-13.0817a2.083,2.083,0,0,0,2.07988,1.97051h8.42888a2.083,2.083,0,0,0,2.07988-1.97051l1.2882-23.61128A2.08352,2.08352,0,0,0,55.502,36.1109H44.49844a2.08352,2.08352,0,0,0-2.08074,2.1962Z",
    transform: "translate(0.0004 -5.55533)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    content: {
      type: 'string',
      default: ''
    },
    link: {
      type: 'string',
      default: ''
    },
    linkText: {
      type: 'string',
      default: ''
    },
    type: {
      type: 'string',
      default: 'notice'
    },
    noticeColor: {
      type: 'string',
      default: 'gray'
    },
    alertColor: {
      type: 'string',
      default: 'green'
    },
    external: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Create a notice or alert banner with a link.'),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, {
      className: `blocks-editor-alert--recommendations`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, "Text Recommendations"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "The recommended maximum character count for the alert content is 90 characters."))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Banner type",
      selected: props.attributes.type,
      options: [{
        label: 'Notice',
        value: 'notice'
      }, {
        label: 'Alert',
        value: 'alert'
      }],
      onChange: option => {
        props.setAttributes({
          type: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, props.attributes.type === 'notice' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Notice Color",
      help: "Select the color for your notice banner.",
      value: props.attributes.noticeColor,
      options: [{
        value: "gray",
        label: "Default (Gray)"
      }, {
        value: "green",
        label: "Success (Green)"
      }, {
        value: "blue",
        label: "Info (Blue)"
      }, {
        value: "gold",
        label: "Message (Gold)"
      }, {
        value: "orange",
        label: "Error (Orange)"
      }],
      onChange: noticeColor => {
        props.setAttributes({
          noticeColor
        });
      }
    })) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Alert Color",
      help: "Select the color for your alert banner.",
      value: props.attributes.alertColor,
      options: [{
        value: "green",
        label: "All Clear (Green)"
      }, {
        value: "blue",
        label: "Minor Alert (Blue)"
      }, {
        value: "gold",
        label: "Moderate Alert (Gold)"
      }, {
        value: "orange",
        label: "Severe Alert (Orange)"
      }, {
        value: "red",
        label: "Extreme Alert (Red)"
      }],
      onChange: alertColor => {
        props.setAttributes({
          alertColor
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `blocks-editor-alert blocks-editor-alert--${props.attributes.type} ${props.attributes.type}--${props.attributes.type === 'notice' ? props.attributes.noticeColor : props.attributes.alertColor}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.content,
      className: "editor-alert-content",
      onChange: text => {
        props.setAttributes({
          content: text
        });
      },
      placeholder: "Alert content...",
      allowedFormats: []
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "alert-link"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "div",
      value: props.attributes.linkText,
      className: "editor-link-content",
      onChange: linkText => {
        props.setAttributes({
          linkText
        });
      },
      placeholder: "Alert Link (optional)"
    })))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `alert-banner alert-banner--${props.attributes.type} ${props.attributes.type}--${props.attributes.type === 'notice' ? props.attributes.noticeColor : props.attributes.alertColor}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'container'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "alert-banner--content",
      tagName: 'p',
      value: props.attributes.content
    }), props.attributes.linkText !== "" && props.attributes.linkText !== undefined ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "alert-banner--link link-effect",
      tagName: 'div',
      value: props.attributes.linkText
    }) : ''));
    return returned;
  }
});

/***/ }),

/***/ "./src/anchor-link-navigation/block.js":
/*!*********************************************!*\
  !*** ./src/anchor-link-navigation/block.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/anchor-link-navigation', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Right Column - Anchor Link Navigation'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
    width: "100",
    height: "100",
    rx: "8.55"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Arrow-right",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-fff",
    d: "M47.85,9.91a4.54,4.54,0,0,1,6.43,0L91.16,46.77a4.53,4.53,0,0,1,0,6.44L54.28,90.09a4.54,4.54,0,0,1-6.43,0l-4.21-4.22a4.55,4.55,0,0,1,.08-6.5L66.58,57.59H12.05A4.54,4.54,0,0,1,7.5,53V47a4.54,4.54,0,0,1,4.55-4.55H66.58L43.72,20.63a4.52,4.52,0,0,1-.08-6.5Z"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    accordion: {
      type: 'boolean',
      default: false
    },
    includeH2: {
      type: 'boolean',
      default: true
    },
    includeH3: {
      type: 'boolean',
      default: false
    },
    includeH4: {
      type: 'boolean',
      default: false
    },
    includeH5: {
      type: 'boolean',
      default: false
    },
    includeH6: {
      type: 'boolean',
      default: false
    },
    range: {
      type: 'string',
      default: "page"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Create a single level menu from the headers that have an HTML anchor.'),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Include Headings on accordion block?",
      checked: props.attributes.accordion,
      onChange: () => props.setAttributes({
        accordion: !props.attributes.accordion
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Pull H2 heading level only?",
      checked: props.attributes.includeH2,
      onChange: () => props.setAttributes({
        includeH2: !props.attributes.includeH2
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Pull H3 heading level only?",
      checked: props.attributes.includeH3,
      onChange: () => props.setAttributes({
        includeH3: !props.attributes.includeH3
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Pull H4 heading level only?",
      checked: props.attributes.includeH4,
      onChange: () => props.setAttributes({
        includeH4: !props.attributes.includeH4
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Pull H5 heading level only?",
      checked: props.attributes.includeH5,
      onChange: () => props.setAttributes({
        includeH5: !props.attributes.includeH5
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Pull H6 heading level only?",
      checked: props.attributes.includeH6,
      onChange: () => props.setAttributes({
        includeH6: !props.attributes.includeH6
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Where to pull the headings?",
      help: "The block needs to be placed in a columns block or content page layout block in order to use 'This Section' option.",
      selected: props.attributes.range,
      options: [{
        label: 'This Section',
        value: 'section'
      }, {
        label: 'Whole Page',
        value: 'page'
      }],
      onChange: option => {
        props.setAttributes({
          range: option
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "anchor-link-block-editor"
    }, "Preview/Publish the page to see the anchor link navigation menu.")];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "anchor-link-block"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: `anchor-link-block-links
        ${props.attributes.accordion ? " has-accordion" : ""}
        ${props.attributes.includeH2 ? "" : " no-H2"}
        ${props.attributes.includeH3 ? " has-H3" : ""}
        ${props.attributes.includeH4 ? " has-H4" : ""}
        ${props.attributes.includeH5 ? " has-H5" : ""}
        ${props.attributes.includeH6 ? " has-H6" : ""}
        ${props.attributes.range === "page" ? "" : " pull-from-section"}
        `
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      id: "to-top-sidebar",
      class: "to-top-sidebar"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Back To Top")));
    return returned;
  }
});

/***/ }),

/***/ "./src/card/block.js":
/*!***************************!*\
  !*** ./src/card/block.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/card', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Custom Card'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "clone",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-d9ab28",
    d: "M100,9.38V71.87a9.38,9.38,0,0,1-9.37,9.38H81.25v9.37A9.38,9.38,0,0,1,71.87,100H9.37A9.38,9.38,0,0,1,0,90.62V28.13a9.38,9.38,0,0,1,9.37-9.38h9.38V9.38A9.38,9.38,0,0,1,28.12,0H90.63A9.38,9.38,0,0,1,100,9.38ZM71.87,89.45v-8.2H28.12a9.38,9.38,0,0,1-9.37-9.38V28.13h-8.2A1.17,1.17,0,0,0,9.37,29.3V89.45a1.17,1.17,0,0,0,1.18,1.17H70.7A1.17,1.17,0,0,0,71.87,89.45ZM90.63,70.7V10.55a1.17,1.17,0,0,0-1.18-1.17H29.3a1.17,1.17,0,0,0-1.18,1.17V70.7a1.17,1.17,0,0,0,1.18,1.17H89.45A1.17,1.17,0,0,0,90.63,70.7Z",
    transform: "translate(0 0)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    hasLink: {
      type: 'boolean',
      default: false
    },
    title: {
      type: 'string',
      source: 'html',
      selector: 'p.title'
    },
    subText: {
      type: 'string',
      source: 'html',
      selector: 'p.content'
    },
    link: {
      type: 'string',
      default: ''
    },
    linkText: {
      type: 'string',
      default: ''
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    backgroundColor: {
      type: 'string',
      default: 'white'
    },
    borderColor: {
      type: 'string',
      default: 'gold'
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Create a card with an image and text. You can choose to add a link and a call to action button to the card.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Background Color",
      help: "Choose the background color of the card.",
      selected: props.attributes.backgroundColor,
      options: [{
        label: 'Gold',
        value: 'gold'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: option => {
        props.setAttributes({
          backgroundColor: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Border Color",
      help: "Choose the border color of the card.",
      selected: props.attributes.borderColor,
      options: [{
        label: 'Gold',
        value: 'gold'
      }, {
        label: 'Black',
        value: 'black'
      }],
      onChange: option => {
        props.setAttributes({
          borderColor: option
        });
      }
    })), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })) : "", props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: 'remove-image-button',
      onClick: removeMedia
    }, "Remove image")) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a link to this card?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.link,
      onChange: link => props.setAttributes({
        link
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `box square-card${props.attributes.backgroundColor === 'gold' ? ' background-gold' : ''}${props.attributes.borderColor === 'black' ? ' border-black' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'image',
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          onClick: open
        }, props.attributes.imgUrl !== '' ? 'Select a new image' : 'Select an image (optional)'));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "title"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.title,
      className: 'title',
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add Title (Optional)",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.subText,
      className: 'content',
      onChange: text => {
        props.setAttributes({
          subText: text
        });
      },
      placeholder: "Add Text (Optional)",
      allowedFormats: []
    }), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.linkText)) : ''))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = props.attributes.hasLink === true ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      className: `square-card${props.attributes.backgroundColor === 'gold' ? ' background-gold' : ''}${props.attributes.borderColor === 'black' ? ' border-black' : ''}`,
      rel: "noopener noreferrer"
    }), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
      className: "image"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    })) : '', props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'title',
      tagName: "p",
      value: props.attributes.title
    }) : '', props.attributes.subText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'content',
      tagName: "p",
      value: props.attributes.subText
    }) : '', props.attributes.linkText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.linkText)) : '') : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `square-card${props.attributes.backgroundColor === 'gold' ? ' background-gold' : ''}${props.attributes.borderColor === 'black' ? ' border-black' : ''}`
    }), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
      className: "image"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    })) : '', props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'title',
      tagName: "p",
      value: props.attributes.title
    }) : '', props.attributes.subText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'content',
      tagName: "p",
      value: props.attributes.subText
    }) : '');
    return returned;
  }
});

/***/ }),

/***/ "./src/columns-row/block.js":
/*!**********************************!*\
  !*** ./src/columns-row/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  RadioControl,
  SelectControl,
  Button,
  CheckboxControl
} = wp.components;
const {
  InnerBlocks,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  RichText,
  useBlockProps
} = wp.blockEditor;

const {
  select
} = wp.data;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/columns-row', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Row of Columns'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "ef9c2100-31be-4639-82c5-0ef6f30faf8a",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 71.42857"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "e07d924f-208c-4ad5-884f-434897ed4326",
    "data-name": "Grip-horizontal",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M28.57143,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14286,7.14285H7.14286A7.14374,7.14374,0,0,1,0,29.46429V15.17857A7.14375,7.14375,0,0,1,7.14286,8.03571H21.42857A7.14375,7.14375,0,0,1,28.57143,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14286,7.14286H7.14286A7.14375,7.14375,0,0,1,0,72.32143V58.03571a7.14374,7.14374,0,0,1,7.14286-7.14285H21.42857A7.14374,7.14374,0,0,1,28.57143,58.03571ZM64.28571,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14285,7.14285H42.85714a7.14374,7.14374,0,0,1-7.14285-7.14285V15.17857a7.14375,7.14375,0,0,1,7.14285-7.14286H57.14286A7.14375,7.14375,0,0,1,64.28571,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14285,7.14286H42.85714a7.14375,7.14375,0,0,1-7.14285-7.14286V58.03571a7.14374,7.14374,0,0,1,7.14285-7.14285H57.14286A7.14374,7.14374,0,0,1,64.28571,58.03571ZM100,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14286,7.14285H78.57143a7.14374,7.14374,0,0,1-7.14286-7.14285V15.17857a7.14375,7.14375,0,0,1,7.14286-7.14286H92.85714A7.14375,7.14375,0,0,1,100,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14286,7.14286H78.57143a7.14375,7.14375,0,0,1-7.14286-7.14286V58.03571a7.14374,7.14374,0,0,1,7.14286-7.14285H92.85714A7.14374,7.14374,0,0,1,100,58.03571Z",
    transform: "translate(0 -8.03571)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    sectionPadding: {
      type: 'string',
      default: 'small'
    },
    bgColor: {
      type: 'string',
      default: ''
    },
    title: {
      type: 'string',
      default: ''
    },
    titleLevel: {
      type: "string",
      default: "p"
    },
    headerColor: {
      type: "string",
      default: "black"
    },
    subText: {
      type: 'string',
      default: ''
    },
    subTextColor: {
      type: "string",
      default: "black"
    },
    titleAlign: {
      type: 'string',
      default: 'left'
    },
    subTextAlign: {
      type: 'string',
      default: 'left'
    },
    numColumns: {
      type: "number",
      default: 1
    },
    dividers: {
      type: "boolean",
      default: false
    },
    centerColumns: {
      type: "boolean",
      default: false
    },
    addBackground: {
      type: "boolean",
      default: false
    },
    backgroundImageType: {
      type: 'string',
      default: 'fabric'
    },
    backgroundImageUrl: {
      type: 'string',
      default: file_data.fabric_url
    },
    backgroundImageAlt: {
      type: 'string',
      default: ''
    },
    backgroundOverlay: {
      type: 'string',
      default: 'has-overlay-black'
    },
    rowType: {
      type: "string",
      default: 'regular'
    },
    addSpace: {
      type: "boolean",
      default: true
    },
    addSpaceMobile: {
      type: "boolean",
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add a row of columns to the page.'),
  edit: props => {
    if (props.attributes.numColumns === 1) {
      const id = props.clientId;
      const parentBlock = select('core/editor').getBlocksByClientId(id)[0];
      const column = parentBlock.innerBlocks[0] || null;

      if (column) {
        if (column.innerBlocks.length < 1) {
          updateColumns(props, 1, 1);
        }
      } else {
        updateColumns(props, 1, 1);
      }
    }

    if (props.attributes.backgroundImageType === 'fabric') {
      props.setAttributes({
        backgroundImageUrl: file_data.fabric_url
      });
      props.setAttributes({
        backgroundImageAlt: ''
      });
    } else if (props.attributes.backgroundImageType === 'concrete') {
      props.setAttributes({
        backgroundImageUrl: file_data.concrete_url
      });
      props.setAttributes({
        backgroundImageAlt: ''
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Add a row",
      selected: props.attributes.rowType,
      options: [{
        value: 'regular',
        label: 'Regular Row with content'
      }, {
        value: 'empty',
        label: 'Empty Row'
      }, {
        value: 'emptyLine',
        label: 'Empty Row With A Guide Line'
      }],
      onChange: rowType => {
        props.setAttributes({
          rowType
        });
      }
    })), props.attributes.rowType === "regular" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Padding Size",
      help: "Select the amount of spacing at the top and bottom of the section.",
      selected: props.attributes.sectionPadding,
      options: [{
        label: 'None',
        value: 'none'
      }, {
        label: 'Small',
        value: 'small'
      }, {
        label: 'Medium',
        value: 'is-medium'
      }, {
        label: 'Large',
        value: 'is-large'
      }],
      onChange: option => {
        props.setAttributes({
          sectionPadding: option
        });
      }
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add Background Image",
      checked: props.attributes.addBackground,
      onChange: addBackground => {
        props.setAttributes({
          addBackground
        });
        props.setAttributes({
          bgColor: ""
        });
      }
    })), props.attributes.addBackground ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Select Background Image",
      selected: props.attributes.backgroundImageType,
      options: [{
        value: 'fabric',
        label: 'Fabric'
      }, {
        value: 'concrete',
        label: 'Concrete'
      }, {
        value: 'own',
        label: 'Choose Your Own Image'
      }],
      onChange: backgroundImageType => {
        props.setAttributes({
          backgroundImageType
        });
      }
    })) : "", props.attributes.addBackground && props.attributes.backgroundImageType === "own" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          backgroundImageUrl: img.url,
          backgroundImageAlt: props.attributes.backgroundImageAlt !== '' ? props.attributes.backgroundImageAlt : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.backgroundImageUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'purdue-blocks-editor-news__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button has-margin-left',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'has-margin-bottom'
        }, "For best results, use an image with no people or text.")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'purdue-blocks-editor-news__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button has-margin-left',
          onClick: open
        }, "Open Media Library"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'has-margin-bottom'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", null, "For best results, use an image with no people or text.")));
      }
    }))) : "", props.attributes.addBackground && props.attributes.backgroundImageType !== "concrete" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Image Overlay Color",
      value: props.attributes.backgroundOverlay,
      options: [{
        value: '',
        label: 'None'
      }, {
        value: 'has-overlay-black',
        label: 'Black'
      }, {
        value: 'has-overlay-white',
        label: 'White'
      }, {
        value: 'has-overlay-steel',
        label: 'Steel Gray'
      }, {
        value: 'has-overlay-gold',
        label: 'Boilermaker Gold'
      }],
      onChange: backgroundOverlay => {
        props.setAttributes({
          backgroundOverlay
        });
      }
    })) : "", !props.attributes.addBackground ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Background Color",
      value: props.attributes.bgColor,
      options: [{
        value: '',
        label: 'None'
      }, {
        value: 'has-background-black',
        label: 'Black'
      }, {
        value: 'has-background-light-gray',
        label: 'Lightest Digital Gray'
      }, {
        value: 'has-background-grey-lighter',
        label: 'Medium Digital Gray'
      }, {
        value: 'has-background-black-ter',
        label: 'Steel(Dark) Gray'
      }, {
        value: 'has-background-boiler-gold',
        label: 'Boilermaker Gold'
      }],
      onChange: bgColor => {
        props.setAttributes({
          bgColor
        });
      }
    })) : ""), props.attributes.rowType === "regular" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Number of Columns",
      value: props.attributes.numColumns,
      options: [{
        value: 1,
        label: 'One Column'
      }, {
        value: 2,
        label: 'Two Columns'
      }, {
        value: 3,
        label: 'Three Columns'
      }, {
        value: 4,
        label: 'Four Columns'
      }],
      onChange: val => {
        let numColumns = parseInt(val);
        updateColumns(props, props.attributes.numColumns, numColumns);
        props.setAttributes({
          numColumns
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Include dividers between columns?",
      checked: props.attributes.dividers,
      onChange: checked => props.setAttributes({
        dividers: checked
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Center the columns?",
      checked: props.attributes.centerColumns,
      onChange: checked => props.setAttributes({
        centerColumns: checked
      })
    }))) : "", props.attributes.rowType === "regular" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading level of the title",
      value: props.attributes.titleLevel,
      options: [{
        label: "H1",
        value: "h1"
      }, {
        label: "H2",
        value: "h2"
      }, {
        label: "H3",
        value: "h3"
      }, {
        label: "H4",
        value: "h4"
      }, {
        label: "H5",
        value: "h5"
      }, {
        label: "H6",
        value: "h6"
      }, {
        label: "P",
        value: "p"
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading Color",
      value: props.attributes.headerColor,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Steel',
        value: 'steel'
      }, {
        label: 'Digital Gold',
        value: 'gold'
      }, {
        label: 'Aged Gold',
        value: 'aged'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: headerColor => {
        props.setAttributes({
          headerColor
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Subtext Color",
      value: props.attributes.subTextColor,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Steel',
        value: 'steel'
      }, {
        label: 'Digital Gold',
        value: 'gold'
      }, {
        label: 'Aged Gold',
        value: 'aged'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: subTextColor => {
        props.setAttributes({
          subTextColor
        });
      }
    }))) : "", props.attributes.rowType === "regular" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading alignment",
      value: props.attributes.titleAlign,
      options: [{
        label: "Left Aligned",
        value: "left"
      }, {
        label: "Centered",
        value: "center"
      }],
      onChange: titleAlign => {
        props.setAttributes({
          titleAlign
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Sub text alignment",
      value: props.attributes.subTextAlign,
      options: [{
        label: "Left Aligned",
        value: "left"
      }, {
        label: "Centered",
        value: "center"
      }],
      onChange: subTextAlign => {
        props.setAttributes({
          subTextAlign
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add space below subtext?",
      checked: props.attributes.addSpace,
      onChange: checked => props.setAttributes({
        addSpace: checked
      })
    }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add space at the bottom on mobile?",
      checked: props.attributes.addSpaceMobile,
      onChange: checked => props.setAttributes({
        addSpaceMobile: checked
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-columns-row pu-columns-row-editor section
        ${props.attributes.bgColor ? ` ${props.attributes.bgColor}` : ''}
        ${props.attributes.sectionPadding === 'none' ? "no-padding" : ""}
        ${props.attributes.sectionPadding !== 'small' && props.attributes.sectionPadding !== 'none' && props.attributes.rowType === "regular" ? ` ${props.attributes.sectionPadding}` : ''}
        ${props.attributes.addBackground && props.attributes.backgroundImageType !== 'concrete' ? ` ${props.attributes.backgroundOverlay}` : ''}
        ${props.attributes.addBackground && props.attributes.backgroundImageType === 'concrete' ? ` has-overlay-concrete` : ''}
        ${props.attributes.rowType === "empty" ? ` pu-columns-row--empty` : ''}
        ${props.attributes.rowType === "emptyLine" ? ` pu-columns-row--empty-line` : ''}
        ${props.attributes.addSpaceMobile ? ` pu-columns-row--space-mobile` : ''}
        `,
      style: {
        backgroundImage: `url(${props.attributes.addBackground ? props.attributes.backgroundImageUrl : ""})`
      },
      "aria-label": props.attributes.backgroundImageAlt
    }, props.attributes.rowType === "regular" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `content${props.attributes.sectionPadding !== 'none' ? " container" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `bulma-blocks-editor-columns`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "title"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: props.setAttributes.titleLevel,
      value: props.attributes.title,
      className: `title align--${props.attributes.titleAlign} title--${props.attributes.headerColor}`,
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add Heading",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `content${props.attributes.addSpace ? '' : ' content--no-margin'}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.subText,
      className: `align--${props.attributes.subTextAlign} content subtext--${props.attributes.subTextColor}`,
      onChange: text => {
        props.setAttributes({
          subText: text
        });
      },
      placeholder: "Add Sub-Text",
      allowedFormats: []
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      templateLock: "all"
    }))) : "")];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const url = `url(${props.attributes.backgroundImageUrl})`;
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-columns-row section
                      ${props.attributes.bgColor ? ` ${props.attributes.bgColor}` : ''}
                      ${props.attributes.sectionPadding === 'none' ? "no-padding" : ""}
                      ${props.attributes.sectionPadding !== 'small' && props.attributes.sectionPadding !== 'none' && props.attributes.rowType === "regular" ? ` ${props.attributes.sectionPadding}` : ''}
                      ${props.attributes.addBackground && props.attributes.backgroundImageType !== 'concrete' ? ` ${props.attributes.backgroundOverlay}` : ''}
                      ${props.attributes.addBackground && props.attributes.backgroundImageType === 'concrete' ? ` has-overlay-concrete` : ''}
                      ${props.attributes.rowType === "empty" ? ` pu-columns-row--empty` : ''}
                      ${props.attributes.rowType === "emptyLine" ? ` pu-columns-row--empty-line` : ''}
                      ${props.attributes.addSpaceMobile ? ` pu-columns-row--space-mobile` : ''}
                      `,
      style: {
        backgroundImage: `${props.attributes.addBackground ? url : "none"}`
      },
      "aria-label": props.attributes.backgroundImageAlt
    }), props.attributes.rowType === "regular" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `content${props.attributes.sectionPadding !== 'none' ? " container" : ""}`
    }, props.attributes.title !== '' && props.attributes.title || props.attributes.subText !== '' && props.attributes.subText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `content${props.attributes.addSpace ? '' : ' content--no-margin'}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns is-centered"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-8"
    }, props.attributes.title !== '' && props.attributes.title !== undefined ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `title align--${props.attributes.titleAlign} title--${props.attributes.headerColor}`,
      tagName: props.attributes.titleLevel,
      value: props.attributes.title
    }) : '', props.attributes.subText !== '' && props.attributes.subText !== undefined ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `align--${props.attributes.subTextAlign} subtext--${props.attributes.subTextColor}`,
      tagName: "p",
      value: props.attributes.subText
    }) : ''))) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `columns is-multiline ${props.attributes.dividers ? "has-dividers" : ""}${props.attributes.centerColumns ? " is-centered" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null))) : "");
    return returned;
  }
});

const updateColumns = (props, oldNum, newNum) => {
  const select = wp.data.select("core/block-editor");
  let innerBlocks = select.getBlock(props.clientId).innerBlocks;
  const adding = newNum > oldNum;
  const triedZero = newNum === 0;

  if (oldNum === 1 && oldNum === newNum) {
    const firstBlock = (0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.createBlock)("bulma-blocks/column");
    innerBlocks = [firstBlock];
    wp.data.dispatch("core/block-editor").replaceInnerBlocks(props.clientId, innerBlocks, false);
  } else if (adding && !triedZero) {
    const newToAdd = newNum - oldNum;

    for (let i = 0; i < newToAdd; i++) {
      const newColumn = (0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.createBlock)('bulma-blocks/column');
      innerBlocks.push(newColumn);
    }

    wp.data.dispatch("core/block-editor").replaceInnerBlocks(props.clientId, innerBlocks, false);
  } else if (!adding && !triedZero) {
    const removingNum = oldNum - newNum;

    for (let i = 0; i < removingNum; i++) {
      innerBlocks.pop();
    }

    wp.data.dispatch("core/block-editor").replaceInnerBlocks(props.clientId, innerBlocks, false);
  }
};

/***/ }),

/***/ "./src/contact-card/block.js":
/*!***********************************!*\
  !*** ./src/contact-card/block.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-down.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-up.js");



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  Placeholder,
  Button,
  FormFileUpload,
  SelectControl,
  IconButton,
  Panel,
  PanelBody,
  PanelRow,
  Toolbar,
  BaseControl,
  TextControl,
  RadioControl,
  TextareaControl,
  CheckboxControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  RichText,
  useBlockProps
} = wp.blockEditor;
const {
  Component,
  Fragment
} = wp.element;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add content'
}]];
registerBlockType('purdue-blocks/contact-card', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Contact Card'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    title: {
      type: 'string',
      source: 'html',
      selector: '.contact-card__title'
    },
    titleLevel: {
      type: 'string',
      default: 'p'
    },
    addMargin: {
      type: 'string',
      default: ''
    },
    contactGroup: {
      type: 'array',
      default: []
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add a contact card.'),
  edit: props => {
    if (props.attributes.contactGroup.length === 0) {
      props.setAttributes({
        contactGroup: [{
          icon: '',
          text: {
            type: 'string',
            source: 'html',
            selector: '.contact-card__text'
          }
        }]
      });
    }

    const handleAddContact = () => {
      let contactGroup = [...props.attributes.contactGroup];
      contactGroup.push({
        icon: '',
        text: {
          type: 'string',
          source: 'html',
          selector: '.contact-card__text'
        }
      });
      props.setAttributes({
        contactGroup
      });
    };

    const handleRemoveContact = index => {
      let contactGroup = [...props.attributes.contactGroup];
      contactGroup.splice(index, 1);
      props.setAttributes({
        contactGroup
      });
    };

    const handleChangeIcon = (icon, index) => {
      let contactGroup = [...props.attributes.contactGroup];
      contactGroup[index].icon = icon;
      props.setAttributes({
        contactGroup
      });
    };

    const handleChangeText = (text, index) => {
      let contactGroup = [...props.attributes.contactGroup];
      contactGroup[index].text = text;
      props.setAttributes({
        contactGroup
      });
    };

    const handleMoveUp = index => {
      let contactGroup = [...props.attributes.contactGroup];
      let tmp = contactGroup[index];
      contactGroup[index] = contactGroup[index + 1];
      contactGroup[index + 1] = tmp;
      props.setAttributes({
        contactGroup
      });
    };

    const handleMoveDown = index => {
      let contactGroup = [...props.attributes.contactGroup];
      let tmp = contactGroup[index];
      contactGroup[index] = contactGroup[index - 1];
      contactGroup[index - 1] = tmp;
      props.setAttributes({
        contactGroup
      });
    };

    let sidebarFields, editorFields;

    if (props.attributes.contactGroup.length > 0) {
      let num = props.attributes.contactGroup.length - 1;
      sidebarFields = props.attributes.contactGroup.map((contact, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Contact ${index + 1} Details`,
          initialOpen: true
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          label: "Icon",
          help: "Add a fontawesome icon in front of this piiece of contact info.",
          value: contact.icon,
          onChange: icon => handleChangeIcon(icon, index)
        })), props.attributes.contactGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null) : "", props.attributes.contactGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("b", null, "Reorder this piece of contact info:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__["default"]
        }) : "") : "", props.attributes.contactGroup.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null) : "", props.attributes.contactGroup.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveContact(index)
        }, "Remove This Contact Info")) : "");
      });
      editorFields = props.attributes.contactGroup.map((contact, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          key: index,
          className: 'columns'
        }, contact.icon ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "column non-flex"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          dangerouslySetInnerHTML: {
            __html: contact.icon
          }
        })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "column"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagName: "p",
          value: contact.text,
          className: 'contact-card__text',
          onChange: text => handleChangeText(text, index),
          placeholder: "Add Contact Info",
          keepPlaceholderOnFocus: true
        })));
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading level of the Header",
      value: props.attributes.titleLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add margin below?",
      checked: props.attributes.addMargin,
      onChange: () => props.setAttributes({
        addMargin: !props.attributes.addMargin
      })
    }))), sidebarFields, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: "remove-image-button add-quote",
      onClick: handleAddContact.bind(undefined)
    }, __('Add Another Contact Info')))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      key: "2",
      className: `pu-contact-card-editor pu-contact-card${props.attributes.addMargin ? " pu-contact-card--margin" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: props.setAttributes.titleLevel,
      value: props.attributes.title,
      className: 'contact-card__title',
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add Title",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `contact-card__content`
    }, editorFields))];
  },
  save: props => {
    const blockProps = useBlockProps.save();
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-contact-card${props.attributes.addMargin ? " pu-contact-card--margin" : ""}`
    }), props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'contact-card__title',
      tagName: props.attributes.titleLevel,
      value: props.attributes.title
    }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'contact-card__content'
    }, props.attributes.contactGroup.length > 0 ? props.attributes.contactGroup.map((contact, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        key: index,
        className: "columns"
      }, contact.icon ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "column non-flex"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        dangerouslySetInnerHTML: {
          __html: contact.icon
        }
      })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "column"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        className: 'contact-card__text',
        tagName: 'p',
        value: contact.text
      })));
    }) : ""));
  }
});

/***/ }),

/***/ "./src/content-page-layout/block.js":
/*!******************************************!*\
  !*** ./src/content-page-layout/block.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/content-page-layout', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Content Page Layout'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Columns",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-d9ab28",
    d: "M100,15.62V84.38a9.38,9.38,0,0,1-9.38,9.37H9.37A9.38,9.38,0,0,1,0,84.38V15.62A9.38,9.38,0,0,1,9.37,6.25H90.62A9.38,9.38,0,0,1,100,15.62ZM43.75,31.25H12.5v50H43.75Zm43.75,0H56.25v50H87.5Z",
    transform: "translate(0 -6.25)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    width: {
      type: 'string',
      default: 'narrow'
    },
    withSidebar: {
      type: "boolean",
      default: false
    },
    sidebarLocationDesktop: {
      type: 'string',
      default: 'right'
    },
    sidebarLocationMobile: {
      type: 'string',
      default: 'below'
    },
    contentLocation: {
      type: 'string',
      default: 'center'
    },
    bgColor: {
      type: 'string',
      default: ''
    },
    border: {
      type: "boolean",
      default: false
    },
    twoColumn: {
      type: "boolean",
      default: false
    },
    paddingTop: {
      type: 'string',
      default: ''
    },
    paddingBottom: {
      type: 'string',
      default: ''
    },
    stackReverseMobile: {
      type: "boolean",
      default: false
    },
    divider: {
      type: "boolean",
      default: false
    },
    verticalCenter: {
      type: "boolean",
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('A content page layout with a main content area with/without a sidebar area.'),
  edit: props => {
    const setChecked = () => {
      if (props.attributes.withSidebar) {
        props.setAttributes({
          withSidebar: false
        });
      } else {
        props.setAttributes({
          withSidebar: true
        });
      }
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Background Color",
      value: props.attributes.bgColor,
      options: [{
        value: '',
        label: 'None'
      }, {
        value: 'has-background-black',
        label: 'Black'
      }, {
        value: 'has-background-grey-lighter',
        label: 'Light Gray'
      }, {
        value: 'has-background-black-ter',
        label: 'Dark Gray'
      }, {
        value: 'has-background-boiler-gold',
        label: 'Boilermaker Gold'
      }],
      onChange: bgColor => {
        props.setAttributes({
          bgColor
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Padding at the top",
      value: props.attributes.paddingTop,
      options: [{
        value: 'has-padding-top-none',
        label: 'None'
      }, {
        value: 'has-padding-top-small',
        label: 'Small'
      }, {
        value: '',
        label: 'Medium'
      }, {
        value: 'has-padding-top-large',
        label: 'Large'
      }],
      onChange: paddingTop => {
        props.setAttributes({
          paddingTop
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Padding at the bottom",
      value: props.attributes.paddingBottom,
      options: [{
        value: 'has-padding-bottom-none',
        label: 'None'
      }, {
        value: 'has-padding-bottom-small',
        label: 'Small'
      }, {
        value: '',
        label: 'Medium'
      }, {
        value: 'has-padding-bottom-large',
        label: 'Large'
      }],
      onChange: paddingBottom => {
        props.setAttributes({
          paddingBottom
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a border at the bottom?",
      checked: props.attributes.border,
      onChange: () => {
        props.setAttributes({
          border: !props.attributes.border
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Main content aria width",
      selected: props.attributes.width,
      options: [{
        label: 'Narrow',
        value: 'narrow'
      }, {
        label: 'Wide',
        value: 'wide'
      }],
      onChange: width => {
        props.setAttributes({
          width
        });
      }
    })), props.attributes.width === "narrow" && !props.attributes.withSidebar ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Main content aria location",
      selected: props.attributes.contentLocation,
      options: [{
        label: 'Center',
        value: 'center'
      }, {
        label: 'Left',
        value: 'left'
      }],
      onChange: contentLocation => {
        props.setAttributes({
          contentLocation
        });
      }
    })) : "", props.attributes.width === "narrow" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add A Sidebar?",
      help: "Would you like to add sidebar to this page?",
      checked: props.attributes.withSidebar,
      onChange: setChecked
    })) : "", props.attributes.width === "narrow" && props.attributes.withSidebar ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Sidebar Location On Desktop",
      help: "Choose to place sidebar on the left/right side of the main content.",
      selected: props.attributes.sidebarLocationDesktop,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: option => {
        props.setAttributes({
          sidebarLocationDesktop: option
        });
      }
    })) : '', props.attributes.width === "narrow" && props.attributes.withSidebar ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Sidebar Location On Mobile",
      help: "Choose to place sidebar above/below the main content.",
      selected: props.attributes.sidebarLocationMobile,
      options: [{
        label: 'Above main content',
        value: 'above'
      }, {
        label: 'Below main content',
        value: 'below'
      }],
      onChange: option => {
        props.setAttributes({
          sidebarLocationMobile: option
        });
      }
    })) : '', props.attributes.width === "wide" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Put content in two columns?",
      checked: props.attributes.twoColumn,
      onChange: () => {
        props.setAttributes({
          twoColumn: !props.attributes.twoColumn
        });
      }
    })) : "", props.attributes.width === "wide" && props.attributes.twoColumn ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Center content vertically?",
      checked: props.attributes.verticalCenter,
      onChange: () => {
        props.setAttributes({
          verticalCenter: !props.attributes.verticalCenter
        });
      }
    })) : "", props.attributes.width === "wide" && props.attributes.twoColumn ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Reverse the stack order the columns on mobile?",
      checked: props.attributes.stackReverseMobile,
      onChange: () => {
        props.setAttributes({
          stackReverseMobile: !props.attributes.stackReverseMobile
        });
      }
    })) : "", props.attributes.width === "wide" && props.attributes.twoColumn ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a divider between columns?",
      checked: props.attributes.divider,
      onChange: () => {
        props.setAttributes({
          divider: !props.attributes.divider
        });
      }
    })) : "")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `section
                    ${props.attributes.withSidebar ? ' page-layout-with-sidebar' : ''}
                    ${props.attributes.bgColor ? ` ${props.attributes.bgColor}` : ''}
                    ${props.attributes.paddingTop ? ` ${props.attributes.paddingTop}` : ''}
                    ${props.attributes.paddingBottom ? ` ${props.attributes.paddingBottom}` : ''}
                    ${props.attributes.border ? ` has-border-bottom` : ''}
                    ${props.attributes.width === "narrow" && !props.attributes.withSidebar && props.attributes.contentLocation === "left" ? " align-left" : ""}
                    ${props.attributes.width === "wide" ? ` page-layout-wide` : ''}
                    ${props.attributes.width === "wide" && props.attributes.twoColumn ? ' page-layout-two-column' : ''}
                    ${props.attributes.width === "wide" && props.attributes.twoColumn && props.attributes.stackReverseMobile ? ' page-layout-two-column-reverser' : ''}
                    ${props.attributes.width === "wide" && props.attributes.twoColumn && props.attributes.divider ? ' page-layout-two-column-divider' : ''}
                    `
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `container${props.attributes.sidebarLocationDesktop === 'left' && props.attributes.width === "narrow" ? ' desktop-reverse' : ''}${props.attributes.width === "narrow" && props.attributes.sidebarLocationMobile === 'above' || props.attributes.width === "wide" && props.attributes.stackReverseMobile ? ' mobile-reverse' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: [['core/columns', {
        'className': 'page-layout-columns columns is-multiline'
      }, [['core/column', {
        'className': 'column is-two-thirds-desktop is-full-tablet is-full-mobile page-layout-main'
      }, [['core/paragraph', {
        'placeholder': 'Start typing to add content, or remove this default paragraph block and then add new blocks.'
      }]]], ['core/column', {
        'className': 'column is-one-quarter-desktop is-full-tablet is-full-mobile page-layout-sidebar'
      }, [['core/paragraph', {
        'placeholder': 'Start typing to add content, or remove this default paragraph block and then add new blocks.'
      }]]]]]],
      templateInsertUpdatesSelection: false
    })))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `section
                ${props.attributes.withSidebar ? ' page-layout-with-sidebar' : ''}
                ${props.attributes.bgColor ? ` ${props.attributes.bgColor}` : ''}
                ${props.attributes.paddingTop ? ` ${props.attributes.paddingTop}` : ''}
                ${props.attributes.paddingBottom ? ` ${props.attributes.paddingBottom}` : ''}
                ${props.attributes.border ? ` has-border-bottom` : ''}
                ${props.attributes.width === "narrow" && !props.attributes.withSidebar && props.attributes.contentLocation === "left" ? " align-left" : ""}
                ${props.attributes.width === "wide" ? ` page-layout-wide` : ''}
                ${props.attributes.width === "wide" && props.attributes.twoColumn ? ' page-layout-two-column' : ''}
                ${props.attributes.width === "wide" && props.attributes.twoColumn && props.attributes.stackReverseMobile ? ' page-layout-two-column-reverser' : ''}
                ${props.attributes.width === "wide" && props.attributes.twoColumn && props.attributes.divider ? ' page-layout-two-column-divider' : ''}
                ${props.attributes.width === "wide" && props.attributes.twoColumn && props.attributes.verticalCenter ? ' page-layout-two-column-verticalCenter' : ''}
                `
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `container${props.attributes.sidebarLocationDesktop === 'left' && props.attributes.width === "narrow" ? ' desktop-reverse' : ''}${props.attributes.width === "narrow" && props.attributes.sidebarLocationMobile === 'above' || props.attributes.width === "wide" && props.attributes.stackReverseMobile ? ' mobile-reverse' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null)));
    return returned;
  }
});

/***/ }),

/***/ "./src/cta-banner/block.js":
/*!*********************************!*\
  !*** ./src/cta-banner/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextareaControl,
  Button,
  RadioControl,
  CheckboxControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/cta-banner', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('CTA Banner'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Bookmark",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M87.5,9.37V100L50,78.12,12.5,100V9.37A9.38,9.38,0,0,1,21.87,0H78.13A9.38,9.38,0,0,1,87.5,9.37Zm-9.37,1.18A1.18,1.18,0,0,0,77,9.37H23.05a1.18,1.18,0,0,0-1.18,1.18V83.68L50,67.27,78.13,83.68Z",
    transform: "translate(-12.5 0)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    type: {
      type: 'string',
      default: 'gold'
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    ctaDesc: {
      type: 'string',
      default: ''
    },
    ctaUrl: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('This block is for adding a CTA banner on the page.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "CTA Banner Type",
      help: "Choose the type of Banner.",
      selected: props.attributes.type,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gold',
        value: 'gold'
      }, {
        label: 'Gray',
        value: 'gray'
      }, {
        label: 'Image',
        value: 'image'
      }],
      onChange: option => {
        props.setAttributes({
          type: option
        });
      }
    }))), props.attributes.type === 'image' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    }))) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, "CTA Button Link setting"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'pu-blocks-editor-cta-banner'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.type !== 'image' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA Description Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaDesc !== '' ? props.attributes.ctaDesc : '',
      className: "input",
      type: "text",
      placeholder: "CTA Description Text...",
      onChange: e => {
        props.setAttributes({
          ctaDesc: e.target.value
        });
      }
    }))) : '', props.attributes.type !== 'gray' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA Button Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaText !== '' ? props.attributes.ctaText : '',
      className: "input",
      type: "text",
      placeholder: "CTA Button Text...",
      onChange: e => {
        props.setAttributes({
          ctaText: e.target.value
        });
      }
    }))) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA Link URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaUrl !== '' ? props.attributes.ctaUrl : '',
      className: "input",
      type: "text",
      placeholder: "CTA URL...",
      onChange: e => {
        props.setAttributes({
          ctaUrl: e.target.value
        });
      }
    })))), props.attributes.type === 'image' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose a Background Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.imgUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'pu-blocks-editor-cta-banner__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'pu-blocks-editor-cta-banner__button',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'pu-blocks-editor-cta-banner__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'pu-blocks-editor-cta-banner__description'
        }, "Pick an image from the media library. The recommended aspect ratio is 3:2."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'pu-blocks-editor-cta-banner__button',
          onClick: open
        }, "Open Media Library"));
      }
    }))) : '')];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-cta-banner${props.attributes.type === 'gold' ? ' pu-cta-banner-gold' : ''}${props.attributes.type === 'black' ? ' pu-cta-banner-black' : ''}
      ${props.attributes.type === 'gray' ? ' pu-cta-banner-gray' : ''}${props.attributes.type === 'image' ? ' pu-cta-banner-image' : ''}`,
      style: props.attributes.type === 'image' && props.attributes.imgUrl ? {
        backgroundImage: `url(${props.attributes.imgUrl})`
      } : {},
      "aria-label": props.attributes.type === 'image' && props.attributes.altText ? props.attributes.altText : ''
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, props.attributes.type === 'gray' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-cta-banner-gray__desc",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaDesc) : '', props.attributes.type === 'image' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-cta-banner-image__button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText) : '', props.attributes.type === 'gold' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "pu-cta-banner-gold__desc"
    }, props.attributes.ctaDesc) : '', props.attributes.type === 'gold' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-cta-banner-gold__button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText) : '', props.attributes.type === 'black' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "pu-cta-banner-black__desc"
    }, props.attributes.ctaDesc) : '', props.attributes.type === 'black' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-cta-banner-black__button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText) : ''));
    return returned;
  }
});

/***/ }),

/***/ "./src/cta-button/block.js":
/*!*********************************!*\
  !*** ./src/cta-button/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  Button
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  RichText,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/cta-button', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('CTA Button'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "clone",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,9.38V71.87a9.38,9.38,0,0,1-9.37,9.38H81.25v9.37A9.38,9.38,0,0,1,71.87,100H9.37A9.38,9.38,0,0,1,0,90.62V28.13a9.38,9.38,0,0,1,9.37-9.38h9.38V9.38A9.38,9.38,0,0,1,28.12,0H90.63A9.38,9.38,0,0,1,100,9.38ZM71.87,89.45v-8.2H28.12a9.38,9.38,0,0,1-9.37-9.38V28.13h-8.2A1.17,1.17,0,0,0,9.37,29.3V89.45a1.17,1.17,0,0,0,1.18,1.17H70.7A1.17,1.17,0,0,0,71.87,89.45ZM90.63,70.7V10.55a1.17,1.17,0,0,0-1.18-1.17H29.3a1.17,1.17,0,0,0-1.18,1.17V70.7a1.17,1.17,0,0,0,1.18,1.17H89.45A1.17,1.17,0,0,0,90.63,70.7Z",
    transform: "translate(0 0)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    subText: {
      type: 'string',
      default: ''
    },
    link: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Create a card with an image, some text, and a call to action button.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.ctaText,
      onChange: ctaText => props.setAttributes({
        ctaText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.link,
      onChange: link => props.setAttributes({
        link
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'card cta-card cta-button-admin'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'image',
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          onClick: open
        }, props.attributes.imgUrl !== '' ? 'Select a new image' : 'Select an image (optional)'));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "card-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.subText,
      className: 'content',
      onChange: text => {
        props.setAttributes({
          subText: text
        });
      },
      placeholder: "Add Card Text"
    }), props.attributes.ctaText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "cta-card__button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.ctaText)) : ''))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: 'card cta-card',
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener"
    }), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'card-image'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
      className: "image is-3by2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'card-content'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: '',
      tagName: "p",
      value: props.attributes.subText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'cta-card__button'
    }, props.attributes.ctaText)));
    return returned;
  }
});

/***/ }),

/***/ "./src/cta-card/block.js":
/*!*******************************!*\
  !*** ./src/cta-card/block.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add content'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/cta-card', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('CTA Card'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "clone",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M100,9.38V71.87a9.38,9.38,0,0,1-9.37,9.38H81.25v9.37A9.38,9.38,0,0,1,71.87,100H9.37A9.38,9.38,0,0,1,0,90.62V28.13a9.38,9.38,0,0,1,9.37-9.38h9.38V9.38A9.38,9.38,0,0,1,28.12,0H90.63A9.38,9.38,0,0,1,100,9.38ZM71.87,89.45v-8.2H28.12a9.38,9.38,0,0,1-9.37-9.38V28.13h-8.2A1.17,1.17,0,0,0,9.37,29.3V89.45a1.17,1.17,0,0,0,1.18,1.17H70.7A1.17,1.17,0,0,0,71.87,89.45ZM90.63,70.7V10.55a1.17,1.17,0,0,0-1.18-1.17H29.3a1.17,1.17,0,0,0-1.18,1.17V70.7a1.17,1.17,0,0,0,1.18,1.17H89.45A1.17,1.17,0,0,0,90.63,70.7Z",
    transform: "translate(0 0)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    layout: {
      type: 'string',
      default: "horizontal"
    },
    cardType: {
      type: 'string',
      default: "small"
    },
    title: {
      type: 'string',
      source: 'html',
      selector: '.title'
    },
    titleLevel: {
      type: 'string',
      default: 'p'
    },
    subText: {
      type: 'string',
      source: 'html',
      selector: 'p.content'
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    link: {
      type: 'string',
      default: ''
    },
    linkText: {
      type: 'string',
      default: ''
    },
    imgLocation: {
      type: 'string',
      default: 'left'
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    height: {
      type: "string",
      default: "100"
    },
    headerColor: {
      type: 'string',
      default: 'black'
    },
    titleAlign: {
      type: 'string',
      default: 'left'
    },
    contentAlign: {
      type: 'string',
      default: 'left'
    },
    imageRatio: {
      type: 'string',
      default: '3by2'
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Create a call-to-action card with an image and text. The link to the card is optional.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Card layout",
      help: "Choose to align the elements vertically or horizontally",
      selected: props.attributes.layout,
      options: [{
        label: 'Horizontal',
        value: 'horizontal'
      }, {
        label: 'Vertical',
        value: 'vertical'
      }],
      onChange: layout => {
        props.setAttributes({
          layout
        });
      }
    })), props.attributes.layout === "horizontal" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Card type",
      help: "Choose Large if there will be a lot of text or lists on the card. Otherwise choose Small.",
      selected: props.attributes.cardType,
      options: [{
        label: 'Large',
        value: 'large'
      }, {
        label: 'Small',
        value: 'small'
      }],
      onChange: option => {
        props.setAttributes({
          cardType: option
        });
      }
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Height of the card",
      help: "100%: the height of the card will be 100% height of its parent container; Auto: the height of the card will depend upon the height of its children.",
      selected: props.attributes.height,
      options: [{
        label: "100%",
        value: "100"
      }, {
        label: "Auto",
        value: "auto"
      }],
      onChange: option => {
        props.setAttributes({
          height: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading level of the title",
      value: props.attributes.titleLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Color the title",
      value: props.attributes.headerColor,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Digital Gold',
        value: 'gold'
      }, {
        label: 'Steel',
        value: 'steel'
      }],
      onChange: headerColor => {
        props.setAttributes({
          headerColor
        });
      }
    })), props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Align the title",
      selected: props.attributes.titleAlign,
      options: [{
        label: "Left",
        value: "left"
      }, {
        label: "Center",
        value: "center"
      }],
      onChange: titleAlign => {
        props.setAttributes({
          titleAlign
        });
      }
    })) : "", props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Align the content",
      help: "This is for the optional content under the title.",
      selected: props.attributes.contentAlign,
      options: [{
        label: "Left",
        value: "left"
      }, {
        label: "Center",
        value: "center"
      }],
      onChange: contentAlign => {
        props.setAttributes({
          contentAlign
        });
      }
    })) : "", props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Image Aspect Ratio",
      help: "Image aspect ratio of width by height.",
      selected: props.attributes.imageRatio,
      options: [{
        label: "3 by 2",
        value: "3by2"
      }, {
        label: "1 by 1",
        value: "1by1"
      }],
      onChange: imageRatio => {
        props.setAttributes({
          imageRatio
        });
      }
    })) : "", props.attributes.layout === 'horizontal' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Align image",
      help: "Choose to place the image to the left or right.",
      selected: props.attributes.imgLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: option => {
        props.setAttributes({
          imgLocation: option
        });
      }
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: 'remove-image-button',
      onClick: removeMedia
    }, "Remove image")) : "", props.attributes.cardType === "small" && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a CTA link to this card?",
      help: "Note you can only add this link when there are no links in the content of the card. Otherwise it'll cause error. ",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })) : '', (props.attributes.cardType === "small" && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical') && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })) : '', (props.attributes.cardType === "small" && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical') && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.link,
      onChange: link => props.setAttributes({
        link
      })
    })) : '', (props.attributes.cardType === "small" && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical') && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `cta-card-editor${props.attributes.layout === 'horizontal' ? ' cta-card-horizonal' : ' cta-card-vertical'}
  ${props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' ? ' cta-card-small' : ''}
  ${props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' ? ' cta-card-large' : ''}
  ${props.attributes.imgLocation === 'left' && props.attributes.layout === 'horizontal' ? ' cta-card-left' : ''}
  ${props.attributes.imgLocation === 'right' && props.attributes.layout === 'horizontal' ? ' cta-card-right' : ''}
  ${props.attributes.imageRatio === '1by1' && props.attributes.layout === 'vertical' ? ' cta-card-1by1' : ''}
  ${props.attributes.height === "auto" ? " cta-card--height-auto" : ""}
  `
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'columns is-multiline'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `column
          ${props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' ? ' is-two-fifths-desktop is-two-fifths-tablet is-full-mobile' : ''}
          ${props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' ? ' is-one-third-desktop is-one-third-tablet is-full-mobile' : ''}
          ${props.attributes.layout === 'vertical' ? ' cta-card-vertical__image' : ''}
          `
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'image is-3by2',
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: open
        }, props.attributes.imgUrl !== '' ? 'Select a new image' : 'Select an image'));
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `column
          ${props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' ? ' is-three-fifths-desktop is-three-fifths-tablet is-full-mobile' : ''}
          ${props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' ? ' is-two-third-desktop is-two-third-tablet is-full-mobile' : ''}
          `
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `title${props.attributes.headerColor === 'gold' ? ' header-color-gold' : ''}${props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: props.setAttributes.titleLevel,
      value: props.attributes.title,
      className: `title
                ${props.attributes.headerColor === 'gold' ? ' header-color-gold' : ''}${props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}
                ${props.attributes.titleAlign === 'center' && props.attributes.layout === 'vertical' ? ' header-centered' : ''}
                `,
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add Title (Optional)",
      keepPlaceholderOnFocus: true
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.subText,
      className: `content${props.attributes.contentAlign === 'center' ? ' content-centered' : ''}`,
      onChange: text => {
        props.setAttributes({
          subText: text
        });
      },
      placeholder: "Add Text (Optional)"
    }) : ""), props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    }) : "", props.attributes.cardType === "small" && props.attributes.layout === 'horizontal' && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.linkText)) : '', props.attributes.layout === 'vertical' && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-blocks__button purdue-blocks__button--gold-light"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.linkText)) : '')))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `${props.attributes.layout === 'horizontal' ? 'cta-card-horizonal' : 'cta-card-vertical'}${props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' ? ' cta-card-small' : ''}${props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' ? ' cta-card-large' : ''}${props.attributes.imgLocation === 'left' && props.attributes.layout === 'horizontal' ? ' cta-card-left' : ''}${props.attributes.imgLocation === 'right' && props.attributes.layout === 'horizontal' ? ' cta-card-right' : ''}  ${props.attributes.imageRatio === '1by1' && props.attributes.layout === 'vertical' ? ' cta-card-1by1' : ''}${props.attributes.height === "auto" ? " cta-card--height-auto" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'columns is-multiline'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `column${props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' ? ' is-two-fifths-desktop is-two-fifths-tablet is-full-mobile' : ''}${props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' ? ' is-one-third-desktop is-one-third-tablet is-full-mobile' : ''}${props.attributes.layout === 'vertical' ? ' cta-card-vertical__image' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
      className: "image is-3by2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `column${props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' ? ' is-three-fifths-desktop is-three-fifths-tablet is-full-mobile' : ''}${props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' ? ' is-two-third-desktop is-two-third-tablet is-full-mobile' : ''}`
    }, props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `title${props.attributes.headerColor === 'gold' ? ' header-color-gold' : ''}${props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}${props.attributes.titleAlign === 'center' && props.attributes.layout === 'vertical' ? ' header-centered' : ''}
              `,
      tagName: props.attributes.titleLevel,
      value: props.attributes.title
    }) : '', (props.attributes.cardType === 'small' && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical') && props.attributes.subText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `content${props.attributes.contentAlign === 'center' ? ' content-centered' : ''}`,
      tagName: "p",
      value: props.attributes.subText
    }) : '', props.attributes.cardType === "small" && props.attributes.layout === 'horizontal' && props.attributes.hasLink === true && props.attributes.linkText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      className: `read-more-button`,
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.linkText)) : '', props.attributes.cardType === 'large' && props.attributes.layout === 'horizontal' || props.attributes.layout === 'vertical' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null) : '', props.attributes.layout === 'vertical' && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "purdue-blocks__button purdue-blocks__button--gold-light",
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.linkText) : '')));
    return returned;
  },
  deprecated: [{
    attributes: {
      cardType: {
        type: 'string',
        default: "small"
      },
      title: {
        type: 'string',
        source: 'html',
        selector: '.title'
      },
      titleLevel: {
        type: 'string',
        default: 'p'
      },
      subText: {
        type: 'string',
        source: 'html',
        selector: 'p.content'
      },
      hasLink: {
        type: 'boolean',
        default: false
      },
      link: {
        type: 'string',
        default: ''
      },
      linkText: {
        type: 'string',
        default: ''
      },
      imgLocation: {
        type: 'string',
        default: 'left'
      },
      imgUrl: {
        type: 'string',
        default: ''
      },
      altText: {
        type: 'string',
        default: ''
      },
      external: {
        type: 'boolean',
        default: false
      },
      height: {
        type: "string",
        default: "100"
      },
      headerColor: {
        type: 'string',
        default: 'black'
      }
    },
    save: props => {
      const returned = props.attributes.cardType === "small" && props.attributes.hasLink === true ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        href: props.attributes.link,
        target: props.attributes.external ? '_blank' : '_self',
        className: `cta-card-horizonal${props.attributes.cardType === 'small' ? ' cta-card-small' : ' cta-card-large'}${props.attributes.imgLocation === 'left' ? ' cta-card-left' : ' cta-card-right'}${props.attributes.height === "auto" ? " cta-card--height-auto" : ""}`,
        rel: "noopener noreferrer"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: 'columns is-multiline'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: `column${props.attributes.cardType === 'small' ? ' is-two-fifths-desktop is-two-fifths-tablet is-full-mobile' : ' is-one-third-desktop is-one-third-tablet is-full-mobile'}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
        className: "image is-3by2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
        src: props.attributes.imgUrl,
        alt: props.attributes.altText
      }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: `column${props.attributes.cardType === 'small' ? ' is-three-fifths-desktop is-three-fifths-tablet is-full-mobile' : ' is-two-thirds-desktop is-two-thirds-tablet is-full-mobile'}`
      }, props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        className: `title${props.attributes.headerColor === 'gold' ? ' header-color-gold' : ''}${props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}`,
        tagName: props.attributes.titleLevel,
        value: props.attributes.title
      }) : '', props.attributes.cardType === 'small' && props.attributes.subText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        className: 'content',
        tagName: "p",
        value: props.attributes.subText
      }) : '', props.attributes.cardType === 'large' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null) : '', props.attributes.linkText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "read-more-button"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.linkText)) : ''))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: ` cta-card-horizonal${props.attributes.cardType === 'small' ? ' cta-card-small' : ' cta-card-large'}${props.attributes.imgLocation === 'left' ? ' cta-card-left' : ' cta-card-right'}${props.attributes.height === "auto" ? " cta-card--height-auto" : ""}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: 'columns is-multiline'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: `column${props.attributes.cardType === 'small' ? ' is-two-fifths-desktop is-two-fifths-tablet is-full-mobile' : ' is-one-third-desktop is-one-third-tablet is-full-mobile'}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
        className: "image is-3by2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
        src: props.attributes.imgUrl,
        alt: props.attributes.altText
      }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: `column${props.attributes.cardType === 'small' ? ' is-three-fifths-desktop is-three-fifths-tablet is-full-mobile' : ' is-two-thirds-desktop is-two-thirds-tablet is-full-mobile'}`
      }, props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        className: `title${props.attributes.headerColor === 'gold' ? ' header-color-gold' : ''}${props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}`,
        tagName: props.attributes.titleLevel,
        value: props.attributes.title
      }) : '', props.attributes.cardType === 'small' && props.attributes.subText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        className: 'content',
        tagName: "p",
        value: props.attributes.subText
      }) : '', props.attributes.cardType === 'large' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null) : '')));
      return returned;
    }
  }]
});

/***/ }),

/***/ "./src/cta-hero/block.js":
/*!*******************************!*\
  !*** ./src/cta-hero/block.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  Button
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/cta-hero", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("CTA Hero"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    pageTitle: {
      type: "string",
      default: ""
    },
    ctaOptionalSub: {
      type: "string",
      default: ""
    },
    ctaUrl: {
      type: "string",
      default: ""
    },
    ctaText: {
      type: "string",
      default: ""
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    imgMoUrl: {
      type: "string",
      default: ""
    },
    altText: {
      type: "string",
      default: ""
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("This block should be used at the top of the page. Choose a page title, an image, and the settings for the cta button."),
  edit: props => {
    if (props.attributes.pageTitle === "") {
      props.setAttributes({
        pageTitle: select("core/editor").getCurrentPost().title
      });
    }

    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bulma-blocks-editor-cta-hero"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Page Title"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.pageTitle !== "" ? props.attributes.pageTitle : "",
      className: "input",
      type: "text",
      placeholder: "Page Title...",
      onChange: e => {
        props.setAttributes({
          pageTitle: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Optional Subtext"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaOptionalSub !== "" ? props.attributes.ctaOptionalSub : "",
      className: "input",
      type: "textarea",
      placeholder: "Optional Subtext...",
      onChange: e => {
        props.setAttributes({
          ctaOptionalSub: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add CTA Button Text and URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaText !== "" ? props.attributes.ctaText : "",
      className: "input",
      type: "text",
      placeholder: "CTA Text...",
      onChange: e => {
        props.setAttributes({
          ctaText: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaUrl !== "" ? props.attributes.ctaUrl : "",
      className: "input",
      type: "text",
      placeholder: "CTA URL...",
      onChange: e => {
        props.setAttributes({
          ctaUrl: e.target.value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose a Hero Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          imgMoUrl: img.sizes ? img.sizes.hero_mobile ? img.sizes.hero_mobile.url : img.url : img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.imgUrl !== "" && !props.attributes.imgError ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "bulma-blocks-editor-site-hero__preview"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: "image"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: "bulma-blocks-editor-site-hero__button",
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "bulma-blocks-editor-site-hero__container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: "bulma-blocks-editor-site-hero__description"
        }, "Pick a hero image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: "bulma-blocks-editor-site-hero__button",
          onClick: open
        }, "Open Media Library"));
      }
    }))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "pu-cta-hero"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "background-image",
      "aria-label": props.attributes.altText,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h1", null, props.attributes.pageTitle || select("core/editor").getCurrentPost().title), props.attributes.ctaOptionalSub !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.ctaOptionalSub) : "", props.attributes.ctaText !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-cta-hero__button"
    }, props.attributes.ctaText) : "")))));
    return returned;
  }
});

/***/ }),

/***/ "./src/custom-side-menu/block.js":
/*!***************************************!*\
  !*** ./src/custom-side-menu/block.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/server-side-render */ "@wordpress/server-side-render");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1__);


/**
 * BLOCK: Custom menu
 *
 */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  SelectControl,
  CheckboxControl,
  TextControl
} = wp.components;
const {
  InspectorControls
} = wp.blockEditor;
const {
  withSelect
} = wp.data;
const {
  apiFetch
} = wp;
 // Array of social media share options.

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

var menus = [];
registerBlockType('purdue-blocks/custom-side-menu', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Custom Side Menu'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 85 82.85"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "Arrow-right",
    class: "color-dust-gold"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "cls-1",
    d: "M47.85,9.91a4.54,4.54,0,0,1,6.42,0h0L91.16,46.77a4.53,4.53,0,0,1,0,6.41l0,0L54.28,90.09a4.54,4.54,0,0,1-6.42,0h0l-4.21-4.22a4.55,4.55,0,0,1,0-6.43l.07-.07L66.58,57.59H12.05A4.54,4.54,0,0,1,7.5,53.06V47A4.54,4.54,0,0,1,12,42.45H66.58L43.72,20.63a4.52,4.52,0,0,1-.19-6.39l.11-.11Z",
    transform: "translate(-7.5 -8.58)"
  }))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  // Block description in side panel
  description: __('Select a menu to create a side navigation for this page. It requires the installation of "WP-REST-API V2 Menus" to work.'),
  edit: withSelect(select => {
    const response = apiFetch({
      path: '/menus/v1/menus/',
      method: 'GET'
    }).then(res => {
      menus = res;
      return res;
    });
    return {
      menus,
      response
    };
  })(props => {
    const {
      menus,
      response
    } = props;

    if (!response) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "custom-side-menu"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        className: "error-message"
      }, "Loading..."));
    }

    if (response.length === 0) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "custom-side-menu"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        className: "error-message"
      }, "No menus found!"));
    }

    const options = [{
      value: '',
      label: 'Select a menu'
    }];

    for (let i = 0; i < menus.length; i++) {
      const option = {
        value: menus[i].term_id,
        label: menus[i].name
      };
      options.push(option);
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: __('Select a menu:'),
      value: props.attributes.selectedMenu,
      options: options,
      onChange: selectedMenu => {
        props.setAttributes({
          selectedMenu
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add a back to top button at the bottom?",
      checked: props.attributes.toTop,
      onChange: () => props.setAttributes({
        toTop: !props.attributes.toTop
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "custom-side-menu-editor components-disabled"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)((_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1___default()), {
      block: "purdue-blocks/custom-side-menu",
      attributes: props.attributes
    }))];
  })
  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */

});

function getMenuItems(selectedMenu, menus) {
  const menu = menus.find(menu => menu.term_id == selectedMenu);
  return apiFetch({
    path: '/menus/v1/menus/' + menu.slug,
    method: 'GET'
  }).then(res => {
    return res;
  });
}

function printMenu(menuItems) {
  return menuItems.map(menuItem => {
    if (menuItem.child_items && menuItem.child_items.length > 0) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", {
        className: "custom-side-menu-item"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        href: menuItem.url
      }, menuItem.title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("ul", {
        className: "custom-side-menu-item-submenu"
      }, menuItem.child_items.map(items => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", {
          className: "custom-side-menu-item-subitem"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
          href: items.url
        }, items.title));
      })));
    } else {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", {
        className: "custom-side-menu-item"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        href: menuItem.url
      }, menuItem.title));
    }
  });
}

/***/ }),

/***/ "./src/faculty-profile-card/block.js":
/*!*******************************************!*\
  !*** ./src/faculty-profile-card/block.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  RadioControl,
  TextareaControl,
  TextControl,
  Button
} = wp.components;
const {
  InnerBlocks,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data; // Array of social media share options.

const socials = [{
  faSlug: 'facebook-square',
  name: 'Facebook',
  share: 'https://www.facebook.com/'
}, {
  faSlug: 'twitter-square',
  name: 'Twitter',
  share: 'https://twitter.com/'
}, {
  faSlug: 'linkedin',
  name: 'LinkedIn',
  share: 'https://www.linkedin.com/in/'
}, {
  faSlug: 'instagram',
  name: 'Instagram',
  share: 'https://www.instagram.com/'
}];
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add bio'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/faculty-profile-card', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Faculty Profile Card'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 77.78"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Address-card",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M100,19.44V80.56a8.33,8.33,0,0,1-8.33,8.33H8.33A8.33,8.33,0,0,1,0,80.56V19.44a8.33,8.33,0,0,1,8.33-8.33H91.67A8.33,8.33,0,0,1,100,19.44Zm-8.33,0H8.33V80.56H91.67Zm-75,49.45V65.56c0-5.53,5.22-10,11.66-10,2,0,3.11,1.38,7.78,1.38s5.9-1.38,7.78-1.38c6.44,0,11.66,4.47,11.66,10v3.33a3.63,3.63,0,0,1-3.88,3.33H20.56A3.63,3.63,0,0,1,16.67,68.89Zm8.33-30A11.11,11.11,0,1,1,36.11,50,11.12,11.12,0,0,1,25,38.89ZM61.11,37.5V34.72a1.4,1.4,0,0,1,1.39-1.39H81.94a1.39,1.39,0,0,1,1.39,1.39V37.5a1.39,1.39,0,0,1-1.39,1.39H62.5A1.4,1.4,0,0,1,61.11,37.5Zm0,11.11V45.83a1.4,1.4,0,0,1,1.39-1.39H81.94a1.39,1.39,0,0,1,1.39,1.39v2.78A1.39,1.39,0,0,1,81.94,50H62.5A1.39,1.39,0,0,1,61.11,48.61Zm0,11.11V56.94a1.39,1.39,0,0,1,1.39-1.38H81.94a1.38,1.38,0,0,1,1.39,1.38v2.78a1.39,1.39,0,0,1-1.39,1.39H62.5A1.39,1.39,0,0,1,61.11,59.72Z",
    transform: "translate(0 -11.11)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    profilePhoto: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    phone: {
      type: 'string',
      default: ''
    },
    email: {
      type: 'string',
      default: ''
    },
    personalLink: {
      type: 'string',
      default: ''
    },
    personalLinkText: {
      type: 'string',
      default: ''
    },
    extraLink: {
      type: 'string',
      default: ''
    },
    name: {
      type: 'string',
      default: ''
    },
    title: {
      type: 'string',
      default: ''
    },
    bio: {
      type: 'string',
      default: ''
    },
    styleToggle: {
      type: 'string',
      default: "wide"
    },
    includeSocial: {
      type: 'boolean',
      default: false
    },
    checkedSocials: {
      type: 'object',
      default: {}
    },
    titlePosition: {
      type: 'boolean',
      default: false
    },
    bioPosition: {
      type: 'boolean',
      default: false
    },
    street: {
      type: 'string',
      default: ''
    },
    city: {
      type: 'string',
      default: ''
    },
    state: {
      type: 'string',
      default: ''
    },
    zip: {
      type: 'string',
      default: ''
    },
    officePhone: {
      type: 'string',
      default: ''
    },
    fax: {
      type: 'string',
      default: ''
    },
    height: {
      type: 'string',
      default: "auto"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('This block renders a card that can contain a photo, the contact information, and the social media links for a faculty member.'),
  edit: props => {
    const checkedSocials = props.attributes.checkedSocials;

    const setChecked = () => {
      if (props.attributes.includeSocial) {
        props.setAttributes({
          includeSocial: false
        });
      } else {
        props.setAttributes({
          includeSocial: true
        });
      }
    };

    const removeMedia = () => {
      props.setAttributes({
        profilePhoto: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Card Style",
      help: "The wide card accepts a 2x1 image and presents the name, title, and social links at the bottom of the card. The narrow card accepts a square image and presents the name, title, and social links at the top of the card. The Mini card has no image, social links, or description.",
      selected: props.attributes.styleToggle,
      options: [{
        label: 'Wide',
        value: 'wide'
      }, {
        label: 'Narrow',
        value: 'narrow'
      }, {
        label: 'Mini',
        value: 'mini'
      }],
      onChange: option => {
        props.setAttributes({
          styleToggle: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Height",
      help: "Select 100% if you want the card to take the full height of its container.",
      selected: props.attributes.height,
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: '100%',
        value: 'full'
      }],
      onChange: option => {
        props.setAttributes({
          height: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Place title on the right?",
      checked: props.attributes.titlePosition,
      onChange: () => props.setAttributes({
        titlePosition: !props.attributes.titlePosition
      })
    })), props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Place Faculty Bio on the right?",
      checked: props.attributes.bioPosition,
      onChange: () => props.setAttributes({
        bioPosition: !props.attributes.bioPosition
      })
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Include Social Media Links",
      help: "Would you like to include this faculty member's social media account links?",
      checked: props.attributes.includeSocial,
      onChange: setChecked
    })), props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Include Social Media Links",
      help: "Would you like to include this faculty member's social media account links?",
      checked: props.attributes.includeSocial,
      onChange: setChecked
    })) : '', props.attributes.includeSocial ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, {
      className: "social-check-list"
    }, socials.map(_ref => {
      let {
        faSlug,
        name
      } = _ref;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
        className: "social-check-list__item",
        label: name,
        checked: checkedSocials[name] ? checkedSocials[name].checked : false,
        onChange: check => {
          if (check) {
            checkedSocials[name] = {};
            checkedSocials[name].slug = faSlug;
            checkedSocials[name].checked = true;
          } else {
            delete checkedSocials[name];
          }

          props.setAttributes({
            includeSocial: true,
            checkedSocials: { ...checkedSocials
            }
          });
        }
      }), checkedSocials[name] !== undefined && checkedSocials[name].checked === true ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
        label: `${name} Profile Link`,
        type: "text",
        value: checkedSocials[name].link,
        onChange: link => {
          checkedSocials[name].link = link;
          props.setAttributes({
            checkedSocials: { ...checkedSocials
            }
          });
        }
      }) : '');
    })) : ''), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Profile Picture Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'pu-blocks-editor-faculty-profile'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose a Profile Picture"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          profilePhoto: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return props.attributes.profilePhoto !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.profilePhoto
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-site-hero__description'
        }, "Pick an image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Open Media Library"));
      }
    }))) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Phone Number"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.phone !== '' ? props.attributes.phone : '',
      className: "input",
      type: "text",
      placeholder: "Phone Number...",
      onChange: e => {
        props.setAttributes({
          phone: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Fax Number"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.fax !== '' ? props.attributes.fax : '',
      className: "input",
      type: "text",
      placeholder: "Fax Number...",
      onChange: e => {
        props.setAttributes({
          fax: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Email Address"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.email !== '' ? props.attributes.email : '',
      className: "input",
      type: "text",
      placeholder: "Email...",
      onChange: e => {
        props.setAttributes({
          email: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Optional Personal Website or page"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.personalLink !== '' ? props.attributes.personalLink : '',
      className: "input",
      type: "text",
      placeholder: "Link URL...",
      onChange: e => {
        props.setAttributes({
          personalLink: e.target.value.trim()
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.personalLinkText !== '' ? props.attributes.personalLinkText : '',
      className: "input",
      type: "text",
      placeholder: "Link Text...",
      onChange: e => {
        props.setAttributes({
          personalLinkText: e.target.value
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      style: {
        fontStyle: "italic"
      }
    }, "Link text is optional. When left empty it'll use the link URL."))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Optional Google Scholar Link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.extraLink !== '' ? props.attributes.extraLink : '',
      className: "input",
      type: "text",
      placeholder: "Google Scholar Link...",
      onChange: e => {
        props.setAttributes({
          extraLink: e.target.value.trim()
        });
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content main-info"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Optional Address"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "address-form"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field street"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.street !== '' ? props.attributes.street : '',
      className: "input",
      type: "text",
      placeholder: "Street...",
      onChange: e => {
        props.setAttributes({
          street: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field city"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.city !== '' ? props.attributes.city : '',
      className: "input",
      type: "text",
      placeholder: "City...",
      onChange: e => {
        props.setAttributes({
          city: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field state"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.state !== '' ? props.attributes.state : '',
      className: "input",
      type: "text",
      placeholder: "State...",
      onChange: e => {
        props.setAttributes({
          state: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field zip"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.zip !== '' ? props.attributes.zip : '',
      className: "input",
      type: "text",
      placeholder: "Zipcode...",
      onChange: e => {
        props.setAttributes({
          zip: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field office-phone"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.officePhone !== '' ? props.attributes.officePhone : '',
      className: "input",
      type: "text",
      placeholder: "Office Phone Number...",
      onChange: e => {
        props.setAttributes({
          officePhone: e.target.value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Faculty Name"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.name !== '' ? props.attributes.name : '',
      className: "input",
      type: "text",
      placeholder: "Faculty Name...",
      onChange: e => {
        props.setAttributes({
          name: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Faculty Position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.title !== '' ? props.attributes.title : '',
      className: "input",
      type: "text",
      placeholder: "Faculty Position...",
      onChange: e => {
        props.setAttributes({
          title: e.target.value
        });
      }
    }))), props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Optional Faculty Bio") : '', props.attributes.styleToggle !== 'mini' ? props.attributes.bioPosition ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    }) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("textarea", {
      value: props.attributes.bio !== '' ? props.attributes.bio : '',
      className: "input",
      placeholder: "Faculty Bio...",
      onChange: e => {
        props.setAttributes({
          bio: e.target.value
        });
      }
    }))) : ''))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = props.attributes.name == '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `faculty-profile-card faculty-profile-card--${props.attributes.styleToggle} box${props.attributes.height === "auto" ? "" : " faculty-profile-card--full-height"}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-left"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "image"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      alt: props.attributes.altText,
      src: props.attributes.profilePhoto
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("ul", null, props.attributes.phone !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-phone",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.phone), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Phone"))) : '', props.attributes.fax !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-fax",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.fax), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Fax"))) : '', props.attributes.email !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-envelope",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: `mailto:${props.attributes.email}`
    }, props.attributes.email), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Email"))) : '', props.attributes.street !== '' || props.attributes.city !== '' || props.attributes.state !== '' || props.attributes.zip !== '' || props.attributes.officePhone !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-address-book",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.street, props.attributes.street ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("br", null) : "", `${props.attributes.city ? `${props.attributes.city}, ` : ""}${props.attributes.state ? `${props.attributes.state} ` : ""}${props.attributes.zip}`, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("br", null), props.attributes.officePhone.replace(/\s+/g, '') !== '' ? `Office: ${props.attributes.officePhone}` : ''), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Address"))) : '', props.attributes.personalLink !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-desktop",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: props.attributes.personalLink.includes('https://') ? props.attributes.personalLink : `https://${props.attributes.personalLink}`
    }, props.attributes.personalLinkText ? props.attributes.personalLinkText : props.attributes.personalLink), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Personal Website"))) : '', props.attributes.extraLink !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-link",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: props.attributes.extraLink.includes('https://') ? props.attributes.extraLink : `https://${props.attributes.extraLink}`
    }, "Google Scholar Website"))) : '')))), props.attributes.bio !== '' && props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.bioPosition ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.bio)) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "level is-mobile"
    }, props.attributes.includeSocial ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "level-right content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "level-item"
    }, "Follow Me: "), Object.keys(props.attributes.checkedSocials).map(social => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        rel: "noopener noreferrer",
        className: "level-item",
        href: `${props.attributes.checkedSocials[social].link}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
        className: `fab fa-${props.attributes.checkedSocials[social].slug}`,
        "aria-hidden": "true"
      }));
    })) : '')) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `faculty-profile-card faculty-profile-card--${props.attributes.styleToggle} box${props.attributes.height === "auto" ? "" : " faculty-profile-card--full-height"}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-left"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "image"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      alt: props.attributes.altText,
      src: props.attributes.profilePhoto
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.titlePosition ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "faculty-title faculty-title-side"
    }, props.attributes.title) : "", props.attributes.bioPosition && props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("ul", null, props.attributes.phone !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-phone",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.phone), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Phone"))) : '', props.attributes.fax !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-fax",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.fax), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Fax"))) : '', props.attributes.email !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-envelope",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: `mailto:${props.attributes.email}`
    }, props.attributes.email), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Email"))) : '', props.attributes.street !== '' || props.attributes.city !== '' || props.attributes.state !== '' || props.attributes.zip !== '' || props.attributes.officePhone !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-address-book",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.street, props.attributes.street ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("br", null) : "", `${props.attributes.city ? `${props.attributes.city}, ` : ""}${props.attributes.state ? `${props.attributes.state} ` : ""}${props.attributes.zip}`, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("br", null), props.attributes.officePhone.replace(/\s+/g, '') !== '' ? `Office: ${props.attributes.officePhone}` : ''), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Address"))) : '', props.attributes.personalLink !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-desktop",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: props.attributes.personalLink.includes('https://') ? props.attributes.personalLink : `https://${props.attributes.personalLink}`
    }, props.attributes.personalLinkText ? props.attributes.personalLinkText : props.attributes.personalLink), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Personal Website"))) : '', props.attributes.extraLink !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("li", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-link",
      "aria-hidden": "true"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "profile-info-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      rel: "noopener noreferrer",
      href: props.attributes.extraLink.includes('https://') ? props.attributes.extraLink : `https://${props.attributes.extraLink}`
    }, "Google Scholar Website"))) : '')))), props.attributes.bio !== '' && !props.attributes.bioPosition && props.attributes.styleToggle !== 'mini' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.bio)) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "level"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "level-left"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "level-item"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "faculty-name"
    }, props.attributes.name), props.attributes.titlePosition ? "" : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "faculty-title"
    }, props.attributes.title))), props.attributes.includeSocial ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "level-right content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "level-item"
    }, "Follow Me: "), Object.keys(props.attributes.checkedSocials).map(social => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        rel: "noopener noreferrer",
        className: "level-item",
        href: `${props.attributes.checkedSocials[social].link}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
        className: `fab fa-${props.attributes.checkedSocials[social].slug}`,
        "aria-hidden": "true"
      }));
    })) : ''));
    return returned;
  }
});

/***/ }),

/***/ "./src/feature-story/block.js":
/*!************************************!*\
  !*** ./src/feature-story/block.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextareaControl,
  TextControl,
  Button,
  RadioControl,
  CheckboxControl,
  SelectControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Body content copy'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/feature-story', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Featured Story'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 68.75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "lightbulb",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z",
    transform: "translate(-15.62)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    style: {
      type: 'boolean',
      default: true
    },
    header: {
      type: 'string',
      default: ''
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    linkImg: {
      type: 'boolean',
      default: false
    },
    altText: {
      type: 'string',
      default: ''
    },
    caption: {
      type: 'string',
      default: ''
    },
    contentAlign: {
      type: 'string',
      default: 'left'
    },
    ctaUrl: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    addCta2: {
      type: 'boolean',
      default: false
    },
    ctaUrl2: {
      type: 'string',
      default: ''
    },
    ctaText2: {
      type: 'string',
      default: ''
    },
    external2: {
      type: 'boolean',
      default: false
    },
    headerLevel: {
      type: 'string',
      default: 'h2'
    },
    headerColor: {
      type: 'string',
      default: 'gold'
    },
    buttonOption: {
      type: 'string',
      default: 'black'
    },
    backgroundColor: {
      type: 'string',
      default: 'white'
    },
    addBorder: {
      type: 'boolean',
      default: false
    },
    borderColor: {
      type: 'string',
      default: "gold"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('This block adds a feature story row on the page.'),
  edit: props => {
    const setImgLinkChecked = () => {
      if (props.attributes.linkImg) {
        props.setAttributes({
          linkImg: false
        });
      } else {
        props.setAttributes({
          linkImg: true
        });
      }
    };

    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Block Styles",
      help: "Full Width: Takes up the full width of the screen; Aligned: Includes normal page margins.",
      selected: props.attributes.style ? "full" : "aligned",
      options: [{
        label: 'Aligned',
        value: 'aligned'
      }, {
        label: 'Full width',
        value: 'full'
      }],
      onChange: option => {
        props.setAttributes({
          style: option === "full" ? true : false
        });
      }
    })), props.attributes.style ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Background Color",
      help: "Choose the background color of the content area.",
      selected: props.attributes.backgroundColor,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }],
      onChange: option => {
        props.setAttributes({
          backgroundColor: option
        });
        props.setAttributes({
          headerColor: "gold"
        });
        props.setAttributes({
          borderColor: "gold"
        });
      }
    })) : "", props.attributes.style && !props.attributes.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a Border?",
      checked: props.attributes.addBorder,
      onChange: () => props.setAttributes({
        addBorder: !props.attributes.addBorder
      })
    })) : "", props.attributes.style && !props.attributes.caption && props.attributes.addBorder ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Color of the Border",
      value: props.attributes.borderColor,
      options: props.attributes.backgroundColor === "white" ? [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Rush Gold',
        value: 'gold'
      }] : [{
        label: 'Boiler Gold',
        value: 'gold'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: borderColor => {
        props.setAttributes({
          borderColor
        });
      }
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Image Alignment",
      help: "Choose to place the image to the left or right.",
      selected: props.attributes.contentAlign,
      options: [{
        label: 'Left',
        value: 'right'
      }, {
        label: 'Right',
        value: 'left'
      }],
      onChange: option => {
        props.setAttributes({
          contentAlign: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading Level of the Header",
      help: "This only changes the HTML tag. The styles will stay the same.",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Color of the Header",
      value: props.attributes.headerColor,
      options: props.attributes.backgroundColor === "white" ? [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Digital Gold',
        value: 'gold'
      }, {
        label: 'Steel',
        value: 'steel'
      }] : [{
        label: 'Boiler Gold',
        value: 'gold'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: headerColor => {
        props.setAttributes({
          headerColor
        });
      }
    }))), props.attributes.ctaUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, "CTA Button Link setting"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Link image?",
      help: "Would you like to add the same link to image?",
      checked: props.attributes.linkImg,
      onChange: setImgLinkChecked
    })), props.attributes.style && props.attributes.backgroundColor === "white" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Button Color",
      help: "Choose the color of this button.",
      value: props.attributes.buttonOption,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gold',
        value: 'gold'
      }],
      onChange: option => {
        props.setAttributes({
          buttonOption: option
        });
      }
    })) : "", props.attributes.style && !props.attributes.linkImg ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a Secondary CTA Button?",
      help: "Would you like to add a secondary CTA button below the primary one?",
      checked: props.attributes.addCta2,
      onChange: () => props.setAttributes({
        addCta2: !props.attributes.addCta2
      })
    })) : "", props.attributes.style && !props.attributes.linkImg && props.attributes.addCta2 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Secondary CTA Button Link Text",
      value: props.attributes.ctaText2,
      onChange: ctaText2 => props.setAttributes({
        ctaText2
      })
    })) : '', props.attributes.style && !props.attributes.linkImg && props.attributes.addCta2 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Secondary CTA Button Link URL",
      value: props.attributes.ctaUrl2,
      onChange: ctaUrl2 => props.setAttributes({
        ctaUrl2
      })
    })) : '', props.attributes.style && !props.attributes.linkImg && props.attributes.addCta2 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open the link of Secondary CTA Button in a new tab?",
      checked: props.attributes.external2,
      onChange: () => props.setAttributes({
        external2: !props.attributes.external2
      })
    })) : "") : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Featured Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Image Caption",
      value: props.attributes.caption,
      onChange: caption => props.setAttributes({
        caption
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'purdue-blocks-editor-feature-story'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add A Header"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.header !== '' ? props.attributes.header : '',
      className: "input",
      type: "text",
      placeholder: "Content Header...",
      onChange: e => {
        props.setAttributes({
          header: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Content Body"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add CTA Button Text and URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaText !== '' ? props.attributes.ctaText : '',
      className: "input",
      type: "text",
      placeholder: "CTA Text...",
      onChange: e => {
        props.setAttributes({
          ctaText: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      className: "label"
    }, "CTA URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.ctaUrl !== '' ? props.attributes.ctaUrl : '',
      className: "input",
      type: "text",
      placeholder: "CTA URL...",
      onChange: e => {
        props.setAttributes({
          ctaUrl: e.target.value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose a Hero Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.imgUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'purdue-blocks-editor-feature-story__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'purdue-blocks-editor-feature-story__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'purdue-blocks-editor-feature-story__description'
        }, "Pick an image from the media library. The recommended aspect ratio is 3:2."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'purdue-blocks-editor-feature-story__button',
          onClick: open
        }, "Open Media Library"));
      }
    }))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = props.attributes.style ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-feature-story${props.attributes.backgroundColor === "black" ? " pu-feature-story__black" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-medium"
    }, props.attributes.linkImg && props.attributes.ctaUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: `${props.attributes.contentAlign === 'left' ? 'hero-image' : 'hero-image-reversed'}`,
      href: props.attributes.ctaUrl,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "background-image",
      role: `${props.attributes.altText ? "img" : ""}`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }), props.attributes.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "feature-story-caption"
    }, props.attributes.caption) : "") : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `${props.attributes.contentAlign === 'left' ? 'hero-image' : 'hero-image-reversed'}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "background-image",
      role: `${props.attributes.altText ? "img" : ""}`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }), props.attributes.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "feature-story-caption"
    }, props.attributes.caption) : ""), props.attributes.style && !props.attributes.caption && props.attributes.addBorder ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-feature-story__border${props.attributes.style && !props.attributes.caption && props.attributes.addBorder && props.attributes.borderColor === "gold" ? " pu-feature-story__border--gold" : ""}`
    }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `${props.attributes.contentAlign === 'left' ? 'shadow' : 'shadow-reversed'}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `content${props.attributes.contentAlign === 'left' ? '' : ' content-reversed'}${props.attributes.backgroundColor === "white" && props.attributes.headerColor === 'black' ? ' header-color-black' : ''}${props.attributes.backgroundColor === "white" && props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}${props.attributes.backgroundColor === "black" && props.attributes.headerColor === 'white' ? ' header-color-white' : ''}`
    }, props.attributes.header && props.attributes.headerLevel === 'h1' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h1", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h2' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h3' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h3", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h4' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h4", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h5' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h5", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h6' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h6", {
      class: "featured-story-header"
    }, props.attributes.header) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null), !props.attributes.ctaUrl || !props.attributes.ctaText ? '' : props.attributes.addCta2 && props.attributes.ctaText2 && props.attributes.style && !props.attributes.linkImg ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pu-feature-story__button-container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: `pu-feature-story__button${props.attributes.buttonOption === "gold" ? " pu-feature-story__button--gold" : ""}`,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl2,
      className: "pu-feature-story__button pu-feature-story__button--second",
      target: props.attributes.external2 ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText2)) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: `pu-feature-story__button${props.attributes.buttonOption === "gold" ? " pu-feature-story__button--gold" : ""}`,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText)))))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "pu-feature-story pu-feature-story__narrow"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `container pu-feature-story__container${props.attributes.contentAlign === 'left' ? '' : ' pu-feature-story__container-reversed'}`
    }, props.attributes.linkImg && props.attributes.ctaUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "background-image-link",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "background-image",
      role: `${props.attributes.altText ? "img" : ""}`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }), props.attributes.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "feature-story-caption"
    }, props.attributes.caption) : "") : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "background-image",
      role: `${props.attributes.altText ? "img" : ""}`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }, props.attributes.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "feature-story-caption"
    }, props.attributes.caption) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `story-content${props.attributes.headerColor === 'black' ? ' header-color-black' : ''}${props.attributes.headerColor === 'steel' ? ' header-color-steel' : ''}`
    }, props.attributes.header && props.attributes.headerLevel === 'h1' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h1", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h2' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h3' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h3", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h4' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h4", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h5' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h5", {
      class: "featured-story-header"
    }, props.attributes.header) : '', props.attributes.header && props.attributes.headerLevel === 'h6' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h6", {
      class: "featured-story-header"
    }, props.attributes.header) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null), !props.attributes.ctaUrl || !props.attributes.ctaText ? '' : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-feature-story__button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText))));
    return returned;
  }
});

/***/ }),

/***/ "./src/icon-group/block.js":
/*!*********************************!*\
  !*** ./src/icon-group/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';

const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  Placeholder,
  Button,
  FormFileUpload,
  SelectControl,
  IconButton,
  PanelBody,
  PanelRow,
  Toolbar,
  BaseControl,
  TextControl
} = wp.components;
const {
  InnerBlocks,
  InspectorControls,
  RichText,
  useBlockProps
} = wp.blockEditor;
const {
  Component,
  Fragment
} = wp.element;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/icon-group', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Icon Group'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "fas",
    "data-icon": "photo-video",
    className: "svg-inline--fa fa-photo-video fa-w-20 fa-7x",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M144 343.78a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM101.74 213a37 37 0 0 0 52.36 0l78.56-78.44A79.06 79.06 0 0 0 227 17.49c-28.08-23.13-69.54-22.82-99-.86-29.45-22-71-22.3-99.05.89a79.11 79.11 0 0 0-5.77 117.08zM59.42 54.53A29.54 29.54 0 0 1 78.35 48 35.08 35.08 0 0 1 103 58.32l25 24.89 24.93-24.89c12.25-12.15 31.43-13.83 43.58-3.82a31.09 31.09 0 0 1 2.31 46.15l-70.85 70.71-70.87-70.69a31.13 31.13 0 0 1 2.32-46.14zm337.93 305.24l32.27-69.89a24 24 0 1 0-43.54-20.12l-63.7 138h109.27l-36.92 68.58A24 24 0 1 0 437 499.05l75-139.28zm-141.44-72h-27.42l-7.09-14.17a27.36 27.36 0 0 0-25.64-17.76H92.08a27.39 27.39 0 0 0-25.65 17.76l-7 14.21H32a32 32 0 0 0-32 32V480a32 32 0 0 0 32 32h223.91a32 32 0 0 0 32-32V319.79a32 32 0 0 0-32-31.98zm-16 176.23H48V335.79h41.22l13.21-26.73 2.57-5.26h77.83l2.69 5.4 13.24 26.59h41.13zm112-256V68.24L463.83 51v78.58a84 84 0 0 0-16-1.69c-35.34 0-64 21.47-64 48s28.64 48 64 48 64-21.48 64-48V32c0-17.9-13.54-32-29.64-32a28.08 28.08 0 0 0-4.26.33L329.39 23.17c-14.63 2.25-25.5 15.74-25.5 31.66V161.6a83.25 83.25 0 0 0-16-1.7c-35.33 0-64 21.55-64 48.13s28.64 48.13 64 48.13 63.98-21.55 63.98-48.16z",
    class: ""
  })),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    iconGroup: {
      type: 'array',
      default: []
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add a group of icons to be displayed inline.'),
  edit: props => {
    if (props.attributes.iconGroup.length === 0) {
      props.setAttributes({
        iconGroup: [{
          icon: '',
          iconUrl: ''
        }]
      });
    }

    const handleAddIcon = () => {
      const iconGroup = [...props.attributes.iconGroup];
      iconGroup.push({
        icon: '',
        iconUrl: ''
      });
      props.setAttributes({
        iconGroup
      });
    }; //End handleAddIcon


    const handleRemoveIcon = index => {
      const iconGroup = [...props.attributes.iconGroup];
      iconGroup.splice(index, 1);
      props.setAttributes({
        iconGroup
      });
    }; //End handleRemoveIcon


    const handleChangeiconGroupIcon = (icon, index) => {
      const iconGroup = [...props.attributes.iconGroup];
      iconGroup[index].icon = icon;
      props.setAttributes({
        iconGroup
      });
    }; // End handleChangeiconGroupIcon


    const handleChangeiconGroupUrl = (iconUrl, index) => {
      const iconGroup = [...props.attributes.iconGroup];
      iconGroup[index].iconUrl = iconUrl;
      props.setAttributes({
        iconGroup
      });
    }; // End handleChangeiconGroupUrl


    let iconFields, iconDisplay;

    if (props.attributes.iconGroup.length) {
      iconFields = props.attributes.iconGroup.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Fragment, {
          key: index
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          className: "icon-text",
          placeholder: "Paste Fontawesome HTML code",
          value: card.icon,
          onChange: icon => handleChangeiconGroupIcon(icon, index)
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          className: "icon-url",
          placeholder: "Link",
          value: card.iconUrl,
          onChange: iconUrl => handleChangeiconGroupUrl(iconUrl, index)
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button is-danger',
          onClick: () => handleRemoveIcon(index)
        }, "Remove Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null));
      });
      iconDisplay = props.attributes.iconGroup.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          key: index,
          className: "icon-item"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "icon-item-icon-placeholder"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          dangerouslySetInnerHTML: {
            __html: card.icon
          }
        })));
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, {
      title: __('Icons')
    }, iconFields, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      isDefault: true,
      onClick: handleAddIcon.bind(undefined)
    }, __('Add Icon')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      key: "2",
      className: "icon-group"
    }, iconDisplay)];
  },
  save: props => {
    const blockProps = useBlockProps.save();
    const iconFields = props.attributes.iconGroup.map((card, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        key: index,
        className: "icon-item"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        href: card.iconUrl,
        target: "_blank",
        rel: "noopener noreferrer"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "icon-item-icon-placeholder"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        dangerouslySetInnerHTML: {
          __html: card.icon
        }
      }))));
    });
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "icon-group"
    }), iconFields);
  }
});

/***/ }),

/***/ "./src/image-gallery/block.js":
/*!************************************!*\
  !*** ./src/image-gallery/block.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  Disabled
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps,
  RichText
} = wp.blockEditor;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/image-gallery', {
  title: __('Image Gallery'),
  description: __('Create an image gallery.'),
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-ellipsis-h fa-w-12",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"
  })),
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
  * The edit function describes the structure of your block in the context of the editor.
  * This represents what the editor will render when the block is used.
  *
  * The "edit" property must be a valid function.
  *
  * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
  *
  * @param {Object} props Props.
  * @returns {Mixed} JSX Component.
  */
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Choose how to align the header.",
      selected: props.attributes.headerLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: headerLocation => {
        props.setAttributes({
          headerLocation
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Choose how to align the content.",
      selected: props.attributes.contentAlign,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: contentAlign => {
        props.setAttributes({
          contentAlign
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Number of Columns",
      value: props.attributes.columns,
      options: [{
        value: '3',
        label: 'Three Columns'
      }, {
        value: '4',
        label: 'Four Columns'
      }],
      onChange: columns => {
        props.setAttributes({
          columns
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Remove space at the bottom?",
      checked: !props.attributes.hasBottomPadding,
      onChange: () => {
        props.setAttributes({
          hasBottomPadding: !props.attributes.hasBottomPadding
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: "2",
      className: `purdue-image-gallery purdue-image-gallery-editor section is-medium${props.attributes.hasBottomPadding ? "" : " no-bottom-padding"}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
      tagName: "h2",
      value: props.attributes.header,
      className: `purdue-image-gallery__header align-${props.attributes.headerLocation}`,
      onChange: header => {
        props.setAttributes({
          header
        });
      },
      placeholder: "Add header (optional)",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.content,
      className: `purdue-image-gallery__content align-${props.attributes.contentAlign}`,
      onChange: content => {
        props.setAttributes({
          content
        });
      },
      placeholder: "Add Text (optional)",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      addToGallery: true,
      multiple: true,
      gallery: true,
      onSelect: imgs => {
        props.setAttributes({
          imgs
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "image-slider-editor"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
          onClick: open
        }, props.attributes.imgs.length === 0 ? "Select images" : "Select new images")), props.attributes.imgs.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "columns is-multiline"
        }, props.attributes.imgs.map((img, index) => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: `column${props.attributes.columns === "4" ? " is-one-quarter-desktop" : " is-one-third-desktop"} is-half-tablet is-full-mobile`
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: `image-gallery-open${img.caption ? "" : " image-no-caption"}`,
            "data-toggle": img.id
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: `image is-square`,
            role: "img",
            style: {
              backgroundImage: `url(${img.url})`
            },
            "aria-label": img.alt
          }), img.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
            className: `image-modal-button`,
            "aria-label": "More information"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("i", {
            class: "fas fa-plus",
            "aria-hidden": "true"
          })) : ""), img.caption ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            class: "image-modal-close",
            "data-modal": img.id
          }, img.caption, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
            class: "image-modal-button",
            "aria-label": "close"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("i", {
            class: "fas fa-minus",
            "aria-hidden": "true"
          }))) : "");
        })) : "");
      }
    }))))];
  }
});

/***/ }),

/***/ "./src/image-showcase/block.js":
/*!*************************************!*\
  !*** ./src/image-showcase/block.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  Button
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Body content copy'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/image-showcase', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Image Showcase'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 68.75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "lightbulb",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z",
    transform: "translate(-15.62)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    images: {
      type: 'array',
      default: []
    },
    includeCopy: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add this block and select three square images to showcase in a row.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        images: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Include Body Content?",
      checked: props.attributes.includeCopy,
      onChange: () => props.setAttributes({
        includeCopy: !props.attributes.includeCopy
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'editor-image-showcase'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      multiple: true,
      gallery: true,
      onSelect: imgs => {
        props.setAttributes({
          images: imgs
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.images.length === 3 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'editor-image-showcase__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'editor-image-showcase__imgGroup'
        }, props.attributes.images.map(img => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
            className: 'image is-128x128'
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
            alt: "",
            src: img.url
          }));
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'editor-image-showcase__button',
          onClick: open
        }, "Select New Images"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove images")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'editor-image-showcase__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: 'editor-image-showcase__heading'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "dashicons dashicons-format-image"
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Image Showcase")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'editor-image-showcase__description'
        }, "Pick three image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'editor-image-showcase__button',
          onClick: open
        }, "Open Media Library"));
      }
    })), props.attributes.includeCopy ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      allowedBlocks: ['core/paragraph', 'core/list']
    }))) : '')];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("section", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: 'section pu-image-showcase'
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'columns is-centered has-decoration is-mobile'
    }, props.attributes.images ? props.attributes.images.map(img => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "column is-2-fullhd is-2-widescreen is-4-desktop is-4-tablet is-4-mobile"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
        className: "image is-square"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
        alt: img.alt,
        src: img.url
      })));
    }) : ""), props.attributes.includeCopy ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns is-centered is-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-8"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null)))) : '');
  }
});

/***/ }),

/***/ "./src/image-toggle-card/block.js":
/*!****************************************!*\
  !*** ./src/image-toggle-card/block.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _icon_assets_exports__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icon-assets/_exports */ "./src/image-toggle-card/icon-assets/_exports.js");



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  InnerBlocks,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/image-toggle-card", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Image Toggle Card"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
    width: "100",
    height: "100",
    rx: "8.55"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "lightbulb",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-fff",
    d: "M78.15,37.21a28,28,0,0,1-7,18.51c-2.66,3-6.83,9.41-8.38,14.74H55.12a8.9,8.9,0,0,1,.36-2.29,50.5,50.5,0,0,1,9.93-17.51,20.46,20.46,0,1,0-30.82,0A50.45,50.45,0,0,1,44.54,68.2a7.82,7.82,0,0,1,.34,2.25v0H37.2c-1.55-5.33-5.72-11.7-8.38-14.74A28.14,28.14,0,1,1,78.15,37.21ZM52.56,24.41A2.56,2.56,0,0,1,50,27,10.25,10.25,0,0,0,39.76,37.21a2.56,2.56,0,1,1-5.11,0A15.37,15.37,0,0,1,50,21.85,2.56,2.56,0,0,1,52.56,24.41ZM37.21,75.59H62.79v6.9a2.55,2.55,0,0,1-.43,1.42L58.44,89.8a2.58,2.58,0,0,1-2.14,1.14H43.69a2.58,2.58,0,0,1-2.13-1.14l-3.92-5.89a2.54,2.54,0,0,1-.42-1.42Z"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    images: {
      type: "array",
      default: []
    },
    cardTitle: {
      type: "string",
      default: ""
    },
    firstTitle: {
      type: "string",
      default: ""
    },
    secondTitle: {
      type: "string",
      default: ""
    },
    linkText: {
      type: "string",
      default: ""
    },
    linkUrl: {
      type: "string",
      default: ""
    },
    includeLink: {
      type: "boolean",
      default: false
    },
    openInNewTab: {
      type: "boolean",
      default: false
    },
    icon: {
      type: "string",
      default: ""
    },
    cardStyle: {
      type: "string",
      default: ""
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Add a block with up to two images that can be toggled with an optional link."),
  edit: props => {
    const removeIcon = () => {
      props.setAttributes({
        icon: ''
      });
    };

    const removeMedia = () => {
      props.setAttributes({
        images: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Card Header Style",
      value: props.attributes.cardStyle,
      options: [{
        value: "",
        label: "Light Gray"
      }, {
        value: "has-header-black",
        label: "Black"
      }],
      onChange: cardStyle => {
        props.setAttributes({
          cardStyle
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a link to this card?",
      checked: props.attributes.includeLink,
      onChange: () => props.setAttributes({
        includeLink: !props.attributes.includeLink
      })
    })), props.attributes.includeLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link Text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link URL",
      value: props.attributes.linkUrl,
      onChange: linkUrl => props.setAttributes({
        linkUrl
      })
    }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.openInNewTab,
      onChange: () => props.setAttributes({
        openInNewTab: !props.attributes.openInNewTab
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "image-toggle-card-block-editor"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `image-toggle-card-block-editor__inputs`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Card Heading"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.cardTitle !== "" ? props.attributes.cardTitle : "",
      className: "input",
      type: "text",
      placeholder: "Card Heading...",
      onChange: e => {
        props.setAttributes({
          cardTitle: e.target.value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "image-toggle-card-block-editor__icon-selector"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      id: "iconSelectorButton",
      onClick: openIconSelector,
      className: "image-toggle-card-block-editor__button"
    }, "Select Optional Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      id: "iconPopup",
      className: "image-toggle-card-block-editor__icon-selector--popup"
    }, Object.values(_icon_assets_exports__WEBPACK_IMPORTED_MODULE_2__).map(icon => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
        className: "image-toggle-card-block-editor__icon-selector--icon",
        dangerouslySetInnerHTML: {
          __html: icon
        },
        onClick: e => {
          props.setAttributes({
            icon
          });
        }
      });
    })), props.attributes.icon ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: 'image-toggle-card-block-editor__button',
      onClick: removeIcon
    }, "Remove Icon") : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "image-toggle-card-block-editor__icon-selector--selected-icon",
      dangerouslySetInnerHTML: {
        __html: props.attributes.icon
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      multiple: true,
      gallery: true,
      onSelect: imgs => {
        if (imgs.length > 0 && imgs.length < 3) {
          props.setAttributes({
            images: imgs
          });
        }
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.images.length > 0 && props.attributes.images.length < 3 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "image-toggle-card-block-editor__preview"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "image-toggle-card-block-editor__imgGroup"
        }, props.attributes.images.map(img => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
            className: "image"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
            alt: "",
            src: img.url
          }));
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: "image-toggle-card-block-editor__button",
          onClick: open
        }, "Select New Images"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove images")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "image-toggle-card-block-editor__container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "image-toggle-card-block-editor__heading"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "dashicons dashicons-format-image"
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Image Toggle Card")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: "image-toggle-card-block-editor__description"
        }, "Pick up to two images from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: "image-toggle-card-block-editor__button",
          onClick: open
        }, "Open Media Library"));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      style: {
        color: "gray",
        paddingLeft: "0.75rem",
        paddingBottom: "0.5rem"
      }
    }, "Note: Toggle buttons will only appear when two images are selected."), props.attributes.images.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `image-toggle-card-block-editor__inputs`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "First Image Title"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.firstTitle !== "" ? props.attributes.firstTitle : "",
      className: "input",
      type: "text",
      placeholder: "First Image Title...",
      onChange: e => {
        props.setAttributes({
          firstTitle: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Second Image Title"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.secondTitle !== "" ? props.attributes.secondTitle : "",
      className: "input",
      type: "text",
      placeholder: "Second Image Title...",
      onChange: e => {
        props.setAttributes({
          secondTitle: e.target.value
        });
      }
    })))) : "")];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "pu-image-toggle box"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-image-toggle__heading${props.attributes.cardStyle !== "" ? ` ${props.attributes.cardStyle}` : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.icon !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: `pu-image-toggle__heading--icon${props.attributes.icon.includes(`data-bg="true"`) ? " has-bg-white" : ""}`,
      dangerouslySetInnerHTML: {
        __html: props.attributes.icon
      }
    }) : "", "\xA0", props.attributes.cardTitle), props.attributes.includeLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.linkUrl,
      target: props.attributes.openInNewTab ? "_blank" : "",
      rel: "noopener noreferrer"
    }, props.attributes.linkText) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-image-toggle__images`
    }, props.attributes.images ? props.attributes.images.map((img, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
        className: `${index === 0 ? "show" : ""}`,
        alt: img.alt,
        src: img.url
      });
    }) : ""), props.attributes.images.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-image-toggle__buttons`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: `toggle-button selected`
    }, props.attributes.firstTitle), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: `toggle-button`
    }, props.attributes.secondTitle)) : "");
    return returned;
  }
});

const openIconSelector = e => {
  const clicked = e.target;
  const popup = clicked.nextSibling;

  if (popup.classList.contains("open")) {
    popup.classList.remove("open");
  } else {
    popup.classList.add("open");
  }
};

/***/ }),

/***/ "./src/image-toggle-card/icon-assets/_exports.js":
/*!*******************************************************!*\
  !*** ./src/image-toggle-card/icon-assets/_exports.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "accordion": function() { return /* binding */ accordion; },
/* harmony export */   "anchorLinkNavigation": function() { return /* binding */ anchorLinkNavigation; },
/* harmony export */   "card": function() { return /* binding */ card; },
/* harmony export */   "contentPageLayout": function() { return /* binding */ contentPageLayout; },
/* harmony export */   "ctaBanner": function() { return /* binding */ ctaBanner; },
/* harmony export */   "ctaButton": function() { return /* binding */ ctaButton; },
/* harmony export */   "ctaCard": function() { return /* binding */ ctaCard; },
/* harmony export */   "ctaHero": function() { return /* binding */ ctaHero; },
/* harmony export */   "facultyProfileCard": function() { return /* binding */ facultyProfileCard; },
/* harmony export */   "featureStory": function() { return /* binding */ featureStory; },
/* harmony export */   "imageShowcase": function() { return /* binding */ imageShowcase; },
/* harmony export */   "imageToggleCard": function() { return /* binding */ imageToggleCard; },
/* harmony export */   "infoBoxHero": function() { return /* binding */ infoBoxHero; },
/* harmony export */   "latestPosts": function() { return /* binding */ latestPosts; },
/* harmony export */   "linkCard": function() { return /* binding */ linkCard; },
/* harmony export */   "list": function() { return /* binding */ list; },
/* harmony export */   "proofpoint": function() { return /* binding */ proofpoint; },
/* harmony export */   "purdueRss": function() { return /* binding */ purdueRss; },
/* harmony export */   "sidebarCta": function() { return /* binding */ sidebarCta; },
/* harmony export */   "siteHero": function() { return /* binding */ siteHero; },
/* harmony export */   "testimonial": function() { return /* binding */ testimonial; },
/* harmony export */   "titleHero": function() { return /* binding */ titleHero; },
/* harmony export */   "titleNav": function() { return /* binding */ titleNav; }
/* harmony export */ });
let accordion = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 43.01 100"><defs></defs><g id="Arrows-alt-v" class="cls-1"><g class="cls-1"><path class="cls-2" d="M70.12,81.82,53.31,98.63a4.68,4.68,0,0,1-6.62,0L29.88,81.82a4.68,4.68,0,0,1,3.31-8h9V26.18h-9a4.68,4.68,0,0,1-3.31-8L46.69,1.37a4.68,4.68,0,0,1,6.62,0L70.12,18.18a4.68,4.68,0,0,1-3.31,8h-9V73.82h9A4.68,4.68,0,0,1,70.12,81.82Z" transform="translate(-28.49)"/></g></g></svg>';
let anchorLinkNavigation = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs></defs><rect width="100" height="100" rx="8.55"/><g id="Arrow-right" class="cls-1"><g class="cls-1"><path class="color-fff" d="M47.85,9.91a4.54,4.54,0,0,1,6.43,0L91.16,46.77a4.53,4.53,0,0,1,0,6.44L54.28,90.09a4.54,4.54,0,0,1-6.43,0l-4.21-4.22a4.55,4.55,0,0,1,.08-6.5L66.58,57.59H12.05A4.54,4.54,0,0,1,7.5,53V47a4.54,4.54,0,0,1,4.55-4.55H66.58L43.72,20.63a4.52,4.52,0,0,1-.08-6.5Z"/></g></g></svg>';
let card = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs></defs><g id="clone" class="cls-1"><g class="cls-1"><path class="color-d9ab28" d="M100,9.38V71.87a9.38,9.38,0,0,1-9.37,9.38H81.25v9.37A9.38,9.38,0,0,1,71.87,100H9.37A9.38,9.38,0,0,1,0,90.62V28.13a9.38,9.38,0,0,1,9.37-9.38h9.38V9.38A9.38,9.38,0,0,1,28.12,0H90.63A9.38,9.38,0,0,1,100,9.38ZM71.87,89.45v-8.2H28.12a9.38,9.38,0,0,1-9.37-9.38V28.13h-8.2A1.17,1.17,0,0,0,9.37,29.3V89.45a1.17,1.17,0,0,0,1.18,1.17H70.7A1.17,1.17,0,0,0,71.87,89.45ZM90.63,70.7V10.55a1.17,1.17,0,0,0-1.18-1.17H29.3a1.17,1.17,0,0,0-1.18,1.17V70.7a1.17,1.17,0,0,0,1.18,1.17H89.45A1.17,1.17,0,0,0,90.63,70.7Z" transform="translate(0 0)"/></g></g></svg>';
let contentPageLayout = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 87.5"><defs></defs><g id="Columns" class="cls-1"><g class="cls-1"><path class="color-d9ab28" d="M100,15.62V84.38a9.38,9.38,0,0,1-9.38,9.37H9.37A9.38,9.38,0,0,1,0,84.38V15.62A9.38,9.38,0,0,1,9.37,6.25H90.62A9.38,9.38,0,0,1,100,15.62ZM43.75,31.25H12.5v50H43.75Zm43.75,0H56.25v50H87.5Z" transform="translate(0 -6.25)"/></g></g></svg>';
let ctaBanner = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 75 100"><defs></defs><g id="Bookmark" class="cls-1"><g class="cls-1"><path class="cls-2" d="M87.5,9.37V100L50,78.12,12.5,100V9.37A9.38,9.38,0,0,1,21.87,0H78.13A9.38,9.38,0,0,1,87.5,9.37Zm-9.37,1.18A1.18,1.18,0,0,0,77,9.37H23.05a1.18,1.18,0,0,0-1.18,1.18V83.68L50,67.27,78.13,83.68Z" transform="translate(-12.5 0)"/></g></g></svg>';
let ctaButton = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs></defs><g id="clone" class="cls-1"><g class="cls-1"><path class="color-9c9795" d="M100,9.38V71.87a9.38,9.38,0,0,1-9.37,9.38H81.25v9.37A9.38,9.38,0,0,1,71.87,100H9.37A9.38,9.38,0,0,1,0,90.62V28.13a9.38,9.38,0,0,1,9.37-9.38h9.38V9.38A9.38,9.38,0,0,1,28.12,0H90.63A9.38,9.38,0,0,1,100,9.38ZM71.87,89.45v-8.2H28.12a9.38,9.38,0,0,1-9.37-9.38V28.13h-8.2A1.17,1.17,0,0,0,9.37,29.3V89.45a1.17,1.17,0,0,0,1.18,1.17H70.7A1.17,1.17,0,0,0,71.87,89.45ZM90.63,70.7V10.55a1.17,1.17,0,0,0-1.18-1.17H29.3a1.17,1.17,0,0,0-1.18,1.17V70.7a1.17,1.17,0,0,0,1.18,1.17H89.45A1.17,1.17,0,0,0,90.63,70.7Z" transform="translate(0 0)"/></g></g></svg>';
let ctaCard = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs></defs><g id="clone" class="cls-1"><g class="cls-1"><path class="cls-2" d="M100,9.38V71.87a9.38,9.38,0,0,1-9.37,9.38H81.25v9.37A9.38,9.38,0,0,1,71.87,100H9.37A9.38,9.38,0,0,1,0,90.62V28.13a9.38,9.38,0,0,1,9.37-9.38h9.38V9.38A9.38,9.38,0,0,1,28.12,0H90.63A9.38,9.38,0,0,1,100,9.38ZM71.87,89.45v-8.2H28.12a9.38,9.38,0,0,1-9.37-9.38V28.13h-8.2A1.17,1.17,0,0,0,9.37,29.3V89.45a1.17,1.17,0,0,0,1.18,1.17H70.7A1.17,1.17,0,0,0,71.87,89.45ZM90.63,70.7V10.55a1.17,1.17,0,0,0-1.18-1.17H29.3a1.17,1.17,0,0,0-1.18,1.17V70.7a1.17,1.17,0,0,0,1.18,1.17H89.45A1.17,1.17,0,0,0,90.63,70.7Z" transform="translate(0 0)"/></g></g></svg>';
let ctaHero = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 87.5"><defs></defs><g id="Window-maximize" class="cls-1"><g class="cls-1"><path class="color-9c9795" d="M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z" transform="translate(0 -7.24)"/></g></g></svg>';
let facultyProfileCard = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 77.78"><defs></defs><g id="Address-card" class="cls-1"><g class="cls-1"><path class="cls-2" d="M100,19.44V80.56a8.33,8.33,0,0,1-8.33,8.33H8.33A8.33,8.33,0,0,1,0,80.56V19.44a8.33,8.33,0,0,1,8.33-8.33H91.67A8.33,8.33,0,0,1,100,19.44Zm-8.33,0H8.33V80.56H91.67Zm-75,49.45V65.56c0-5.53,5.22-10,11.66-10,2,0,3.11,1.38,7.78,1.38s5.9-1.38,7.78-1.38c6.44,0,11.66,4.47,11.66,10v3.33a3.63,3.63,0,0,1-3.88,3.33H20.56A3.63,3.63,0,0,1,16.67,68.89Zm8.33-30A11.11,11.11,0,1,1,36.11,50,11.12,11.12,0,0,1,25,38.89ZM61.11,37.5V34.72a1.4,1.4,0,0,1,1.39-1.39H81.94a1.39,1.39,0,0,1,1.39,1.39V37.5a1.39,1.39,0,0,1-1.39,1.39H62.5A1.4,1.4,0,0,1,61.11,37.5Zm0,11.11V45.83a1.4,1.4,0,0,1,1.39-1.39H81.94a1.39,1.39,0,0,1,1.39,1.39v2.78A1.39,1.39,0,0,1,81.94,50H62.5A1.39,1.39,0,0,1,61.11,48.61Zm0,11.11V56.94a1.39,1.39,0,0,1,1.39-1.38H81.94a1.38,1.38,0,0,1,1.39,1.38v2.78a1.39,1.39,0,0,1-1.39,1.39H62.5A1.39,1.39,0,0,1,61.11,59.72Z" transform="translate(0 -11.11)"/></g></g></svg>';
let featureStory = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 68.75 100"><defs></defs><g id="lightbulb" class="cls-1"><g class="cls-1"><path class="cls-2" d="M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z" transform="translate(-15.62)"/></g></g></svg>';
let imageShowcase = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 68.75 100"><defs></defs><g id="lightbulb" class="cls-1"><g class="cls-1"><path class="color-9c9795" d="M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z" transform="translate(-15.62)"/></g></g></svg>';
let imageToggleCard = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs></defs><rect width="100" height="100" rx="8.55"/><g id="lightbulb" class="cls-1"><g class="cls-1"><path class="color-fff" d="M78.15,37.21a28,28,0,0,1-7,18.51c-2.66,3-6.83,9.41-8.38,14.74H55.12a8.9,8.9,0,0,1,.36-2.29,50.5,50.5,0,0,1,9.93-17.51,20.46,20.46,0,1,0-30.82,0A50.45,50.45,0,0,1,44.54,68.2a7.82,7.82,0,0,1,.34,2.25v0H37.2c-1.55-5.33-5.72-11.7-8.38-14.74A28.14,28.14,0,1,1,78.15,37.21ZM52.56,24.41A2.56,2.56,0,0,1,50,27,10.25,10.25,0,0,0,39.76,37.21a2.56,2.56,0,1,1-5.11,0A15.37,15.37,0,0,1,50,21.85,2.56,2.56,0,0,1,52.56,24.41ZM37.21,75.59H62.79v6.9a2.55,2.55,0,0,1-.43,1.42L58.44,89.8a2.58,2.58,0,0,1-2.14,1.14H43.69a2.58,2.58,0,0,1-2.13-1.14l-3.92-5.89a2.54,2.54,0,0,1-.42-1.42Z"/></g></g></svg>';
let list = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 97.47"><defs></defs><g id="Arrow-right" class="cls-1"><g class="cls-1"><path class="color-d9ab28" d="M47.47,2.84a5.34,5.34,0,0,1,7.57,0L98.43,46.21a5.34,5.34,0,0,1,0,7.56L55,97.16a5.34,5.34,0,0,1-7.57,0l-4.95-5a5.35,5.35,0,0,1,.09-7.65L69.5,58.93H5.36A5.35,5.35,0,0,1,0,53.57V46.43a5.35,5.35,0,0,1,5.36-5.36H69.5L42.61,15.45a5.31,5.31,0,0,1-.09-7.65Z" transform="translate(0 -1.27)"/></g></g></svg>';
let proofpoint = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 75 100"><defs></defs><g id="Bookmark" class="cls-1"><g class="cls-1"><path class="color-9c9795" d="M87.5,9.37V100L50,78.12,12.5,100V9.37A9.38,9.38,0,0,1,21.87,0H78.13A9.38,9.38,0,0,1,87.5,9.37Zm-9.37,1.18A1.18,1.18,0,0,0,77,9.37H23.05a1.18,1.18,0,0,0-1.18,1.18V83.68L50,67.27,78.13,83.68Z" transform="translate(-12.5 0)"/></g></g></svg>';
let purdueRss = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 66.67"><defs></defs><g id="newspaper" class="cls-1"><g class="cls-1"><path class="cls-2" d="M100,21.83V80.16a4.17,4.17,0,0,1-4.17,4.17H9.72A9.73,9.73,0,0,1,0,74.6V27.38a4.17,4.17,0,0,1,4.17-4.17h7.42a8.34,8.34,0,0,1,7.85-5.55H95.83A4.17,4.17,0,0,1,100,21.83ZM9.72,76a1.39,1.39,0,0,0,1.39-1.39v-43H8.33V74.6A1.39,1.39,0,0,0,9.72,76Zm82-50H19.44V74.6a9.1,9.1,0,0,1-.1,1.39H91.67ZM27.78,53.08V36.41a2.08,2.08,0,0,1,2.08-2.08H53.47a2.08,2.08,0,0,1,2.08,2.08V53.08a2.08,2.08,0,0,1-2.08,2.08H29.86A2.08,2.08,0,0,1,27.78,53.08Zm0,8.33a2.08,2.08,0,0,1,2.08-2.08H53.47a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H29.86a2.08,2.08,0,0,1-2.08-2.08Zm6.94-13.2H48.61V41.27H34.72Zm26.39-11.8a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Zm0,12.5a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Zm0,12.5a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Z" transform="translate(0 -17.66)"/></g></g></svg>';
let sidebarCta = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 97.47"><defs></defs><g id="Arrow-right" class="cls-1"><g class="cls-1"><path class="cls-2" d="M47.47,2.84a5.34,5.34,0,0,1,7.57,0L98.43,46.21a5.34,5.34,0,0,1,0,7.56L55,97.16a5.34,5.34,0,0,1-7.57,0l-4.95-5a5.35,5.35,0,0,1,.09-7.65L69.5,58.93H5.36A5.35,5.35,0,0,1,0,53.57V46.43a5.35,5.35,0,0,1,5.36-5.36H69.5L42.61,15.45a5.31,5.31,0,0,1-.09-7.65Z" transform="translate(0 -1.27)"/></g></g></svg>';
let infoBoxHero = '<svg id="beee9f3b-cb8c-4d24-a612-41eb8927e111" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><style>.e149ff59-54ba-4d7a-be69-bfce58ad0af2{fill:#fff;}</style></defs><rect width="100" height="100" rx="8.55"/><g id="b8e37998-d6c2-43d8-bc0b-0305d6f0a794" data-name="Window-maximize"><path class="e149ff59-54ba-4d7a-be69-bfce58ad0af2" d="M93.5037,20.09555v59.8176a8.16129,8.16129,0,0,1-8.15259,8.15259H14.64889A8.16128,8.16128,0,0,1,6.4963,79.91315V20.09555a8.16128,8.16128,0,0,1,8.15259-8.16129H85.35111A8.16129,8.16129,0,0,1,93.5037,20.09555ZM85.35111,39.12407H14.64889V78.88646a1.02669,1.02669,0,0,0,1.02669,1.02669H84.32443a1.02669,1.02669,0,0,0,1.02668-1.02669h0Z"/></g></svg>';
let siteHero = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 87.5"><defs></defs><g id="Window-maximize" class="cls-1"><g class="cls-1"><path class="color-d9ab28" d="M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z" transform="translate(0 -7.24)"/></g></g></svg>';
let testimonial = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 68.75 100"><defs></defs><g id="lightbulb" class="cls-1"><g class="cls-1"><path class="color-d9ab28" d="M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z" transform="translate(-15.62)"/></g></g></svg>';
let titleHero = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 87.5"><defs></defs><g id="Window-maximize" class="cls-1"><g class="cls-1"><path class="cls-2" d="M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z" transform="translate(0 -7.24)"/></g></g></svg>';
let titleNav = '<svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="ellipsis-h" className="svg-inline--fa fa-ellipsis-h fa-w-12" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="#8E6F3E" d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"></path></svg>';
let latestPosts = '<svg version="1.1" id="Layer_1" data-bg="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 87.5" style="enable-background:new 0 0 100 87.5;" xml:space="preserve"><g class="color-black"><path d="M100,9.4v68.8c0,5.2-4.2,9.4-9.4,9.4H9.4c-5.2,0-9.4-4.2-9.4-9.4V9.4C0,4.2,4.2,0,9.4,0h81.2C95.8,0,100,4.2,100,9.4zM90.6,76.9V10.6c0-0.6-0.5-1.2-1.2-1.2H10.6c-0.6,0-1.2,0.5-1.2,1.2v66.4c0,0.7,0.5,1.2,1.1,1.2c0,0,0,0,0,0h78.9C90.1,78.2,90.6,77.6,90.6,76.9C90.6,77,90.6,77,90.6,76.9L90.6,76.9z"/><rect x="37.5" y="29.7" width="43.7" height="9.4"/><rect x="20.3" y="29.7" width="9.4" height="9.4"/><rect x="37.5" y="48.4" width="43.7" height="9.4"/><rect x="20.3" y="48.4" width="9.4" height="9.4"/></g></svg>';
let linkCard = '<svg version="1.1" id="Layer_1" data-bg="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" style="enable-background:new 0 0 100 100;" xml:space="preserve"><path class="color-bulma" d="M100,89.3c0,5.9-4.8,10.7-10.7,10.7H10.7C4.8,100,0,95.2,0,89.3V10.7C0,4.8,4.8,0,10.7,0h78.6C95.2,0,100,4.8,100,10.7V89.3z M55.4,14.3c-3,0-5.4,2.4-5.4,5.4c0,1.4,0.6,2.8,1.6,3.8l7.1,7.1L15.1,74.2c-1,1-1,2.7,0,3.8l6.9,6.9c1,1,2.7,1,3.8,0l43.7-43.6l7.1,7.1c2.1,2.1,5.5,2.1,7.6,0c1-1,1.6-2.4,1.6-3.8v-25c0-3-2.4-5.4-5.3-5.4L55.4,14.3z"/></svg>';


/***/ }),

/***/ "./src/info-box-hero/block.js":
/*!************************************!*\
  !*** ./src/info-box-hero/block.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [["core/paragraph", {
  placeholder: "Add content"
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/info-box-hero", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Info Box Hero"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "beee9f3b-cb8c-4d24-a612-41eb8927e111",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
    width: "100",
    height: "100",
    rx: "8.55"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "b8e37998-d6c2-43d8-bc0b-0305d6f0a794",
    "data-name": "Window-maximize"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-fff",
    d: "M93.5037,20.09555v59.8176a8.16129,8.16129,0,0,1-8.15259,8.15259H14.64889A8.16128,8.16128,0,0,1,6.4963,79.91315V20.09555a8.16128,8.16128,0,0,1,8.15259-8.16129H85.35111A8.16129,8.16129,0,0,1,93.5037,20.09555ZM85.35111,39.12407H14.64889V78.88646a1.02669,1.02669,0,0,0,1.02669,1.02669H84.32443a1.02669,1.02669,0,0,0,1.02668-1.02669h0Z"
  }))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    title: {
      type: "string",
      source: "html",
      selector: ".title"
    },
    subText: {
      type: "string",
      source: "html",
      selector: "p.content"
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    titleLevel: {
      type: "string",
      default: "h1"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Create a Hero row with a 3:1 background image and small info content box."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading level of the title",
      value: props.attributes.titleLevel,
      options: [{
        label: "H1",
        value: "h1"
      }, {
        label: "H2",
        value: "h2"
      }, {
        label: "H3",
        value: "h3"
      }, {
        label: "H4",
        value: "h4"
      }, {
        label: "H5",
        value: "h5"
      }, {
        label: "H6",
        value: "h6"
      }, {
        label: "P",
        value: "p"
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Bakcground Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `info-box-hero-editor`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "image",
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: open
        }, props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image"), props.attributes.imgUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          class: "remove-button",
          onClick: removeMedia
        }, "Remove image") : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `info-box-content`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "title"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagName: props.setAttributes.titleLevel,
          value: props.attributes.title,
          className: "title",
          onChange: text => {
            props.setAttributes({
              title: text
            });
          },
          placeholder: "Add Title",
          keepPlaceholderOnFocus: true,
          allowedFormats: []
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "content"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagName: "p",
          value: props.attributes.subText,
          className: "content",
          onChange: text => {
            props.setAttributes({
              subText: text
            });
          },
          placeholder: "Add Text",
          allowedFormats: []
        }))));
      }
    })))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "info-box-hero"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `image`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "info-box-hero--content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "title",
      tagName: props.attributes.titleLevel,
      value: props.attributes.title
    }), props.attributes.subText !== '' && props.attributes.subText !== undefined ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "content",
      tagName: "p",
      value: props.attributes.subText
    }) : ''))));
    return returned;
  }
});

/***/ }),

/***/ "./src/large-featured-story/block.js":
/*!*******************************************!*\
  !*** ./src/large-featured-story/block.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  SelectControl,
  TextControl,
  RadioControl,
  Button,
  Disabled
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Body content copy'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

const ALLOWED_MEDIA_TYPES_2 = ['video'];
registerBlockType("purdue-blocks/large-featured-story", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Large Image Featured Story"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    layout: {
      type: "string",
      default: "gradient"
    },
    storyTitle: {
      type: 'string',
      source: 'html',
      selector: '.story-title'
    },
    ctaOptionalSub: {
      type: "string",
      default: ""
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    ctaUrl: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    headerLevel: {
      type: 'string',
      default: 'h2'
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    altText: {
      type: "string",
      default: ""
    },
    addLightBox: {
      type: 'boolean',
      default: false
    },
    buttonText: {
      type: 'string',
      default: ''
    },
    videoPlatform: {
      type: 'string',
      default: 'youtube'
    },
    videoUrlYoutube: {
      type: 'string',
      default: ''
    },
    videoUrlUpload: {
      type: 'string',
      default: ''
    },
    videoTitle: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Adds a large image featured story."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    const removeVideo = () => {
      props.setAttributes({
        videoUrlUpload: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Layout",
      selected: props.attributes.layout,
      options: [{
        label: 'Gradient',
        value: 'gradient'
      }, {
        label: 'Text Box',
        value: 'box'
      }],
      onChange: layout => {
        props.setAttributes({
          layout
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading Level of the Header",
      help: "This only changes the HTML tag. The styles will stay the same.",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a CTA link?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.ctaText,
      onChange: ctaText => props.setAttributes({
        ctaText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.ctaUrl,
      onChange: ctaUrl => props.setAttributes({
        ctaUrl
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a video lightbox?",
      checked: props.attributes.addLightBox,
      onChange: () => props.setAttributes({
        addLightBox: !props.attributes.addLightBox
      })
    })), props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Button Text",
      help: "The text on the button that opens the lightbox.",
      value: props.attributes.buttonText,
      onChange: buttonText => props.setAttributes({
        buttonText
      })
    })) : '', props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Video Platform",
      help: "Select the platform of the video",
      selected: props.attributes.videoPlatform,
      options: [{
        label: 'Youtube',
        value: 'youtube'
      }, {
        label: 'Upload a video',
        value: 'upload'
      }],
      onChange: videoPlatform => {
        props.setAttributes({
          videoPlatform
        });
      }
    })) : '', props.attributes.addLightBox && props.attributes.videoPlatform === "youtube" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Youtube Video URL",
      value: props.attributes.videoUrlYoutube,
      onChange: videoUrlYoutube => props.setAttributes({
        videoUrlYoutube
      })
    })) : '', props.attributes.addLightBox && props.attributes.videoPlatform === "youtube" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Youtube Video Title",
      value: props.attributes.videoTitle,
      onChange: title => {
        props.setAttributes({
          videoTitle: ""
        });
        props.setAttributes({
          videoTitle: title
        });
      }
    })) : '', props.attributes.addLightBox && props.attributes.videoPlatform === "upload" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      accept: "video",
      allowedTypes: ALLOWED_MEDIA_TYPES_2,
      onSelect: video => {
        props.setAttributes({
          videoUrlUpload: video.url,
          videoTitle: video.title
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.videoUrlUpload !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("video", {
          controls: true,
          playsinline: "",
          src: props.attributes.videoUrlUpload,
          title: props.attributes.videoTitle
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button multiple',
          onClick: open
        }, "Select a New Video"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button multiple',
          onClick: removeVideo
        }, "Remove video")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-site-hero__description'
        }, "Pick a video from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button',
          onClick: open
        }, "Open Media Library"));
      }
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-cta-hero pu-large-image pu-large-image-editor animate${props.attributes.layout === "box" ? " pu-large-image--box" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "background-image",
          role: `${props.attributes.altText ? "img" : ""}`,
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: open
        }, props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image"), props.attributes.imgUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: removeMedia
        }, "Remove image") : ""));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: props.attributes.headerLevel,
      value: props.attributes.storyTitle,
      className: 'story-title',
      onChange: storyTitle => {
        props.setAttributes({
          storyTitle
        });
      },
      placeholder: "Add header",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    }), props.attributes.hasLink && !props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, props.attributes.ctaText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-icon"
    })) : '', props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "button-container"
    }, props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, props.attributes.ctaText, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-icon"
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: "pu-lightbox-button"
    }, props.attributes.buttonText)) : "")))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const videoId = getVideoId(props.attributes.videoUrlYoutube);
    const iframeMarkup = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("iframe", {
      id: videoId,
      class: "pu-lightbox-youtube",
      title: props.attributes.videoTitle,
      src: `https://www.youtube.com/embed/${videoId}`,
      frameborder: "0",
      allowfullscreen: true
    });
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-cta-hero pu-large-image${props.attributes.layout === "box" ? " pu-large-image--box animate" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "background-image",
      "aria-label": props.attributes.altText,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.storyTitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: props.attributes.headerLevel,
      value: props.attributes.storyTitle,
      className: 'story-title'
    }) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null), props.attributes.hasLink && !props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "read-more-button",
      href: props.attributes.ctaUrl,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-icon"
    })) : "", props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "button-container"
    }, props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "read-more-button",
      href: props.attributes.ctaUrl,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-icon"
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: "pu-lightbox-button"
    }, props.attributes.buttonText)) : "")))), props.attributes.addLightBox ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pu-lightbox"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `modal--close-button`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-times",
      "aria-hidden": "true"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "video-container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "video"
    }, props.attributes.videoPlatform === "youtube" ? iframeMarkup : "", props.attributes.videoPlatform === "upload" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("video", {
      controls: true,
      playsinline: "",
      src: props.attributes.videoUrlUpload,
      title: props.attributes.videoTitle
    }) : "")))) : "");
    return returned;
  }
});

function getVideoId(url) {
  const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
  const match = url === null || url === void 0 ? void 0 : url.match(regExp);
  return match && match[2].length === 11 ? match[2] : null;
}

/***/ }),

/***/ "./src/large-text/block.js":
/*!*********************************!*\
  !*** ./src/large-text/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  SelectControl,
  TextControl,
  Button
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Body content copy'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/large-text", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Large Text"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    largeText: {
      type: 'string',
      source: 'html',
      selector: 'span.large-text'
    },
    smallText: {
      type: 'string',
      source: 'html',
      selector: 'span.small-text'
    },
    ctaOptionalSub: {
      type: "string",
      default: ""
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    ctaUrl: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    headerLevel: {
      type: 'string',
      default: 'h2'
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    altText: {
      type: "string",
      default: ""
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Adds a large image featured story."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    var CustomTag = props.attributes.headerLevel;
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading Level of the Header",
      help: "This only changes the HTML tag. The styles will stay the same.",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a CTA link?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.ctaText,
      onChange: ctaText => props.setAttributes({
        ctaText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.ctaUrl,
      onChange: ctaUrl => props.setAttributes({
        ctaUrl
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pu-cta-hero pu-large-image pu-large-image-editor pu-large-text animate"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "background-image",
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "remove-button",
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: open
        }, props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image"), props.attributes.imgUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: removeMedia
        }, "Remove image") : ""));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns is-centered"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-two-thirds-desktop is-three-quarters-tablet is-full-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: 'span',
      value: props.attributes.largeText,
      className: 'large-text',
      onChange: largeText => {
        props.setAttributes({
          largeText
        });
      },
      placeholder: "Add Large text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: 'span',
      value: props.attributes.smallText,
      className: 'small-text',
      onChange: smallText => {
        props.setAttributes({
          smallText
        });
      },
      placeholder: "Add regular text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bottom-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-text"
    }, props.attributes.ctaText))) : '')))))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    var CustomTag = props.attributes.headerLevel;
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "pu-cta-hero pu-large-image pu-large-text"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "background-image",
      "aria-label": props.attributes.altText,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns is-centered"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-two-thirds-desktop is-three-quarters-tablet is-full-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, null, props.attributes.largeText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: 'span',
      value: props.attributes.largeText,
      className: 'large-text'
    }) : '', props.attributes.smallText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: 'span',
      value: props.attributes.smallText,
      className: 'small-text'
    }) : ''), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bottom-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "read-more-button",
      href: props.attributes.ctaUrl,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-text"
    }, props.attributes.ctaText))) : "")))))));
    return returned;
  }
});

/***/ }),

/***/ "./src/link-cards/block.js":
/*!*********************************!*\
  !*** ./src/link-cards/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-sortablejs */ "./node_modules/react-sortablejs/dist/index.js");
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./form */ "./src/link-cards/form.js");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/server-side-render */ "@wordpress/server-side-render");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  Disabled,
  Placeholder
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  useState,
  Fragment
} = wp.element;
const {
  isEmpty
} = _;



/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/link-cards', {
  title: __('Purdue Link Cards'),
  description: __('Create a grid of cards with links.'),
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-ellipsis-h fa-w-12",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"
  })),
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
  * The edit function describes the structure of your block in the context of the editor.
  * This represents what the editor will render when the block is used.
  *
  * The "edit" property must be a valid function.
  *
  * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
  *
  * @param {Object} props Props.
  * @returns {Mixed} JSX Component.
  */
  edit: props => {
    const {
      className,
      setAttributes
    } = props;
    const {
      header,
      headerLocation,
      background,
      tabs,
      id,
      columns
    } = props.attributes;
    const [addNew, setAddNew] = useState(false);

    const addManualTab = newTab => {
      setAddNew(false);
      setAttributes({
        tabs: [...tabs, ...[newTab]]
      });
    };

    const updateSavedTab = (index, tabData) => {
      // Clone the array first so we can mutate it.
      const newTabs = [...tabs];
      newTabs[index] = tabData;
      setAttributes({
        tabs: newTabs
      });
    };

    const removeItem = identifier => {
      const newTabs = tabs.filter(item => {
        return item.title !== identifier;
      });
      setAttributes({
        tabs: newTabs
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose a background",
      value: background,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gray',
        value: 'gray'
      }],
      onChange: background => {
        setAttributes({
          background
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Add a header",
      help: "Add a header to this region.",
      value: header,
      onChange: header => setAttributes({
        header
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Choose how to align the header.",
      selected: headerLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: headerLocation => {
        setAttributes({
          headerLocation
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: id,
      onChange: id => setAttributes({
        id
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Number of Columns",
      selected: columns,
      options: [{
        value: '3',
        label: 'Three Columns'
      }, {
        value: '4',
        label: 'Four Columns'
      }],
      onChange: columns => {
        setAttributes({
          columns
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
      title: __('Cards')
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_sortablejs__WEBPACK_IMPORTED_MODULE_1__.ReactSortable, {
      list: tabs,
      setList: val => {
        const cardTitles = [],
              valueTitles = [];
        tabs.map(item => cardTitles.push(item.title));
        val.map(item => valueTitles.push(item.title));

        if (_.isEqual(cardTitles, valueTitles)) {
          return;
        }

        setAttributes({
          tabs: val
        });
      },
      className: "sortable-posts"
    }, tabs.map((item, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
        initialOpen: false,
        key: item.title,
        title: item.title
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_form__WEBPACK_IMPORTED_MODULE_2__["default"], {
        initialState: item,
        onSave: val => {
          updateSavedTab(i, val);
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
        style: {
          marginTop: '5px'
        },
        isSecondary: true,
        onClick: () => {
          removeItem(item.title);
        }
      }, "Remove Item"));
    }))), (addNew || tabs.length === 0) && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_form__WEBPACK_IMPORTED_MODULE_2__["default"], {
      onSave: addManualTab
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      isPrimary: true,
      onClick: () => {
        setAddNew(true);
      }
    }, "Add New Card")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: "2",
      className: `purdue-block-slider-editor`
    }, isEmpty(tabs) ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Placeholder, null, __('Add cards using the sidebar.')) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)((_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3___default()), {
      block: "purdue-blocks/link-cards",
      attributes: {
        header,
        headerLocation,
        background,
        tabs,
        id,
        columns,
        context: 'editor',
        className: className
      }
    })))];
  }
});

/***/ }),

/***/ "./src/link-cards/form.js":
/*!********************************!*\
  !*** ./src/link-cards/form.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__);


/**
 * Breaking up edit functionality into a separate component for easier access
 */
const {
  Fragment
} = wp.element;
const {
  MediaUpload
} = wp.blockEditor;
const {
  PanelRow,
  Button,
  TextControl,
  TextareaControl,
  CheckboxControl
} = wp.components;
const {
  useState
} = wp.element;


const LinkForm = _ref => {
  let {
    onSave,
    initialState = {
      title: '',
      media: {
        url: '',
        alt: ''
      },
      subtext: '',
      link: '',
      newtab: false
    }
  } = _ref;
  // Form related controls.
  const [newTitle, updateNewTitle] = useState(initialState.title);
  const [newMedia, updateNewMedia] = useState(initialState.media);
  const [newSubtext, updateNewSubtext] = useState(initialState.subtext);
  const [newLink, updateNewLink] = useState(initialState.link);
  const [newNewtab, updateNewtab] = useState(initialState.newtab);
  const [showNoTitle, updateShowNoTitle] = useState(false);
  let mediaButtonLabel = 'Add Image';

  if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()(newMedia.url)) {
    mediaButtonLabel = 'Replace Image';
  }

  const saveItem = () => {
    if (newTitle.length < 1) {
      updateShowNoTitle(true);
      return;
    }

    const newPost = {
      title: newTitle,
      media: newMedia,
      subtext: newSubtext,
      link: newLink,
      newtab: newNewtab
    };
    onSave(newPost);
  };

  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Fragment, null, showNoTitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    style: {
      color: '#ff5454',
      fontWeight: 'bold'
    }
  }, "Please add a title before saving."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
    label: 'Title',
    onChange: val => {
      if (showNoTitle) {
        updateShowNoTitle(false);
      }

      updateNewTitle(val);
    },
    value: newTitle
  })), !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()(newMedia.url) && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
    src: newMedia.url
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
    onSelect: media => {
      updateNewMedia({
        url: media.url,
        alt: media.alt
      });
    },
    allowedTypes: ['image'],
    render: _ref2 => {
      let {
        open
      } = _ref2;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
        isSecondary: true,
        onClick: open
      }, mediaButtonLabel);
    }
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
    label: 'Subtext',
    onChange: val => {
      updateNewSubtext(val);
    },
    value: newSubtext
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
    label: 'Button URL',
    type: "url",
    onChange: val => {
      updateNewLink(val);
    },
    value: newLink
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
    label: "Open link in new tab?",
    checked: newNewtab,
    onChange: () => {
      updateNewtab(!newNewtab);
    }
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
    isPrimary: true,
    onClick: saveItem
  }, "Save")));
};

/* harmony default export */ __webpack_exports__["default"] = (LinkForm);

/***/ }),

/***/ "./src/list/block.js":
/*!***************************!*\
  !*** ./src/list/block.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import "./editor.scss";
// import "./style.scss";
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/list', {}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/list", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Right Column - List"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 97.47"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Arrow-right",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-d9ab28",
    d: "M47.47,2.84a5.34,5.34,0,0,1,7.57,0L98.43,46.21a5.34,5.34,0,0,1,0,7.56L55,97.16a5.34,5.34,0,0,1-7.57,0l-4.95-5a5.35,5.35,0,0,1,.09-7.65L69.5,58.93H5.36A5.35,5.35,0,0,1,0,53.57V46.43a5.35,5.35,0,0,1,5.36-5.36H69.5L42.61,15.45a5.31,5.31,0,0,1-.09-7.65Z",
    transform: "translate(0 -1.27)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    header: {
      type: "string",
      default: ""
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("This block adds a styled list with a header."),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-blocks-editor-list"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add List Header"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.header !== "" ? props.attributes.header : "",
      className: "input",
      type: "text",
      placeholder: "Content Header...",
      onChange: e => {
        props.setAttributes({
          header: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add List Body"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: "all"
    })))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "pu-list"
    }), !props.attributes.header ? '' : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, props.attributes.header), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null));
    return returned;
  }
});

/***/ }),

/***/ "./src/mini-hero/block.js":
/*!********************************!*\
  !*** ./src/mini-hero/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [["core/paragraph", {
  placeholder: "Add content"
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/mini-hero", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Mini Hero"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    title: {
      type: "string",
      source: "html",
      selector: ".title"
    },
    subText: {
      type: "string",
      source: "html",
      selector: "p.content"
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    altText: {
      type: "string",
      default: ""
    },
    includeLink: {
      type: 'boolean',
      default: false
    },
    linkExternal: {
      type: 'boolean',
      default: false
    },
    linkUrl: {
      type: "string",
      default: ""
    },
    linkText: {
      type: "string",
      default: ""
    },
    background: {
      type: "string",
      default: "dark"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Create a mini Hero row with a 7:1 background image."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Background Color",
      help: "The color that is overlaid on the background image",
      value: props.attributes.background,
      options: [{
        label: "Dark",
        value: "dark"
      }, {
        label: "Light",
        value: "light"
      }],
      onChange: background => {
        props.setAttributes({
          background
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Background Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Include a Link?",
      checked: props.attributes.includeLink,
      onChange: () => props.setAttributes({
        includeLink: !props.attributes.includeLink
      })
    })), props.attributes.includeLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })) : '', props.attributes.includeLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.linkUrl,
      onChange: linkUrl => props.setAttributes({
        linkUrl
      })
    })) : '', props.attributes.includeLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        linkExternal: !props.attributes.linkExternal
      })
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `mini-hero mini-hero-editor${props.attributes.background === "light" ? " mini-hero-light" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "image",
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: open
        }, props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image"), props.attributes.imgUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          class: "remove-button",
          onClick: removeMedia
        }, "Remove image") : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "columns is-centered"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "column is-two-thirds-desktop is-full-tablet is-full-mobile"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `mini-hero--content`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "h1",
          value: props.attributes.title,
          className: "title",
          onChange: text => {
            props.setAttributes({
              title: text
            });
          },
          placeholder: "Add Title",
          keepPlaceholderOnFocus: true
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "p",
          value: props.attributes.subText,
          className: "content",
          onChange: text => {
            props.setAttributes({
              subText: text
            });
          },
          placeholder: "Add Text"
        }))))));
      }
    })))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `mini-hero${props.attributes.background === "light" ? " mini-hero-light" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `image`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "columns is-centered"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "column is-two-thirds-desktop is-full-tablet is-full-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "mini-hero--content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "title",
      tagName: "h1",
      value: props.attributes.title
    }), props.attributes.subText !== '' && props.attributes.subText !== undefined ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "content",
      tagName: "p",
      value: props.attributes.subText
    }) : '', props.attributes.includeLink && props.attributes.linkText !== '' && props.attributes.linkUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.linkUrl,
      className: `link${props.attributes.background === "light" ? " has-bg-light" : " has-bg-dark"}`,
      target: props.attributes.linkExternal ? '_blank' : '_self',
      rel: "noopener"
    }, props.attributes.linkText) : ''))))));
    return returned;
  }
});

/***/ }),

/***/ "./src/podcast/block.js":
/*!******************************!*\
  !*** ./src/podcast/block.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';

const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  withSelect,
  withDispatch
} = wp.data;
const {
  PanelBody,
  PanelRow,
  RangeControl,
  CheckboxControl,
  TextControl,
  TextareaControl,
  Button
} = wp.components;
const {
  useState,
  Component,
  Fragment
} = wp.element;
const {
  InnerBlocks,
  InspectorControls,
  RichText,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const applyWithSelect = withSelect(select => {
  const {
    getMedia,
    getPostType
  } = select('core');
  const {
    getCurrentPostId,
    getEditedPostAttribute
  } = select('core/editor');
  const featuredImageId = getEditedPostAttribute('featured_media');
  return {
    media: featuredImageId ? getMedia(featuredImageId) : null,
    currentPostId: getCurrentPostId(),
    postType: getPostType(getEditedPostAttribute('type')),
    featuredImageId,
    isDisabled: select('core/edit-post').isFeatureActive('disableEditorsKitDragAndDropFeaturedTools')
  };
});
const post_id = applyWithSelect.currentPostId;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/podcast', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Podcast'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "fas",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-podcast fa-w-14 fa-7x",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 448 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M267.429 488.563C262.286 507.573 242.858 512 224 512c-18.857 0-38.286-4.427-43.428-23.437C172.927 460.134 160 388.898 160 355.75c0-35.156 31.142-43.75 64-43.75s64 8.594 64 43.75c0 32.949-12.871 104.179-20.571 132.813zM156.867 288.554c-18.693-18.308-29.958-44.173-28.784-72.599 2.054-49.724 42.395-89.956 92.124-91.881C274.862 121.958 320 165.807 320 220c0 26.827-11.064 51.116-28.866 68.552-2.675 2.62-2.401 6.986.628 9.187 9.312 6.765 16.46 15.343 21.234 25.363 1.741 3.654 6.497 4.66 9.449 1.891 28.826-27.043 46.553-65.783 45.511-108.565-1.855-76.206-63.595-138.208-139.793-140.369C146.869 73.753 80 139.215 80 220c0 41.361 17.532 78.7 45.55 104.989 2.953 2.771 7.711 1.77 9.453-1.887 4.774-10.021 11.923-18.598 21.235-25.363 3.029-2.2 3.304-6.566.629-9.185zM224 0C100.204 0 0 100.185 0 224c0 89.992 52.602 165.647 125.739 201.408 4.333 2.118 9.267-1.544 8.535-6.31-2.382-15.512-4.342-30.946-5.406-44.339-.146-1.836-1.149-3.486-2.678-4.512-47.4-31.806-78.564-86.016-78.187-147.347.592-96.237 79.29-174.648 175.529-174.899C320.793 47.747 400 126.797 400 224c0 61.932-32.158 116.49-80.65 147.867-.999 14.037-3.069 30.588-5.624 47.23-.732 4.767 4.203 8.429 8.535 6.31C395.227 389.727 448 314.187 448 224 448 100.205 347.815 0 224 0zm0 160c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64z"
  })),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    isChecked: {
      type: 'boolean',
      default: false
    },
    urlText: {
      type: 'string',
      default: ''
    },
    internalFile: {
      type: 'string',
      default: ''
    },
    coverImage: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    podcastName: {
      type: 'string',
      default: ''
    },
    shortDescription: {
      type: 'string',
      default: ''
    },
    episodeNumber: {
      type: 'string',
      default: ''
    },
    episodeTitle: {
      type: 'string',
      default: ''
    },
    fullDescription: {
      type: 'string',
      default: ''
    },
    listenOnUrls: {
      type: 'array',
      default: []
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add this block and add a Podcast episode.'),
  edit: props => {
    const [isChecked, setChecked] = useState(false);

    const handleAddVideoCard = () => {
      const listenOnUrls = [...props.attributes.listenOnUrls];
      listenOnUrls.push({
        chennelname: '',
        chennelUrl: ''
      });
      props.setAttributes({
        listenOnUrls
      });
    }; //End handleAddVideoCard


    const handleRemoveVideoCard = index => {
      const listenOnUrls = [...props.attributes.listenOnUrls];
      listenOnUrls.splice(index, 1);
      props.setAttributes({
        listenOnUrls
      });
    }; //End handleRemoveVideoCard


    const handleChangeVideoCardVideo = (chennelname, index) => {
      const listenOnUrls = [...props.attributes.listenOnUrls];
      listenOnUrls[index].chennelname = chennelname;
      props.setAttributes({
        listenOnUrls
      });
    }; // End handleChangeVideoCardVideo


    const handleChangeVideoCardDescription = (chennelUrl, index) => {
      const listenOnUrls = [...props.attributes.listenOnUrls];
      listenOnUrls[index].chennelUrl = chennelUrl;
      props.setAttributes({
        listenOnUrls
      });
    }; // End handleChangeVideoCardDescription


    let videoFields, videoDisplay;

    if (props.attributes.listenOnUrls.length) {
      videoFields = props.attributes.listenOnUrls.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Fragment, {
          key: index
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          className: "purdue_video_carousel_url",
          placeholder: "Channel Name",
          value: props.attributes.listenOnUrls[index].chennelname,
          onChange: chennelname => handleChangeVideoCardVideo(chennelname, index)
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          className: "video_carrousel_description",
          placeholder: "Channel URL",
          value: props.attributes.listenOnUrls[index].chennelUrl,
          onChange: chennelUrl => handleChangeVideoCardDescription(chennelUrl, index)
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button is-danger',
          onClick: () => handleRemoveVideoCard(index)
        }, "Remove Chennel"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null));
      });
      videoDisplay = props.attributes.listenOnUrls.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
          key: index,
          className: "item",
          href: card.chennelUrl,
          target: "_blank"
        }, card.chennelname);
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, {
      title: __('Listen On Chennels')
    }, videoFields, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      isDefault: true,
      onClick: handleAddVideoCard.bind(undefined)
    }, __('Add Chennel')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Espisode Number",
      value: props.attributes.episodeNumber,
      onChange: episodeNumber => props.setAttributes({
        episodeNumber
      }),
      type: "number"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, __('Cover Image'), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      allowedTypes: ['image'],
      onSelect: coverImage => {
        props.setAttributes({
          coverImage: coverImage.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : coverImage.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.coverImage !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-home-card__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.coverImage
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-home-card__button',
          onClick: open
        }, "Update Image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-home-card__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-home-card__description'
        }, "Pick an image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-home-card__button',
          onClick: open
        }, "Open Media Library"));
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Podcast Source",
      help: "Is the Podcast episode loading from an external source?",
      checked: props.attributes.isChecked,
      onChange: isChecked => {
        props.setAttributes({
          isChecked: isChecked
        });
      }
    })), props.attributes.isChecked ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Podcast URL",
      value: props.attributes.urlText,
      onChange: urlText => props.setAttributes({
        urlText
      })
    })) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, __('Podcast File'), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      allowedTypes: ['audio'],
      onSelect: internalFile => {
        props.setAttributes({
          internalFile: internalFile.url
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return props.attributes.internalFile !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-home-card__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          value: props.attributes.internalFile,
          disabled: true
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-home-card__button',
          onClick: open
        }, "Update File")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-home-card__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-home-card__description'
        }, "Pick a file from the library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-home-card__button',
          onClick: open
        }, "Open Media Library"));
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_podcast_name"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "h2",
      label: "Podcast Name",
      value: props.attributes.podcastName,
      onChange: podcastName => props.setAttributes({
        podcastName
      }),
      placeholder: __('Podcast Name')
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns purdue_podcast_desc"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-one-quarter"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      className: "purdue_podcast_episode_cover_image",
      src: props.attributes.coverImage,
      alt: props.attributes.altText
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-three-quarters"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_short_desc"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "div",
      multiline: "p",
      label: "Short Description",
      value: props.attributes.shortDescription,
      onChange: shortDescription => props.setAttributes({
        shortDescription
      }),
      placeholder: __('Short Description')
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_links"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("strong", null, __('Listen on: ')), " ", videoDisplay))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_player"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause_playing"
    }, "NOW PLAYING", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      id: "play",
      className: "purdue_podcast_controls_pause_share_play"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "purdue_podcast_controls_pause_share_play_border"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-play"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-pause hidden"
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause_button"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_elapsed"
    }, "00:00:00"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_timeline"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "time_elapsed"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_total"
    }, "00:00:00"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_volume"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-volume-up"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-volume-mute hidden"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_speed"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "pcast-speed"
    }, "1x")), isChecked ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("audio", {
      src: props.attributes.urlText
    }) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("audio", {
      src: props.attributes.internalFile
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal-background"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "top_article_data"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "top_article_data_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      id: "share_text",
      class: "top_article_data_share_text ",
      target: "_blank",
      "aria-label": `Share link https://youtu.be/${post_id}`,
      href: `https://youtu.be/${post_id}`,
      title: "Share link"
    }, `https://youtu.be/${post_id}`), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `https://www.facebook.com/sharer/sharer.php?u=https://youtu.be/${post_id}`,
      title: "Share on Facebook",
      target: "_blank"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-facebook-f"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `https://www.linkedin.com/sharing/share-offsite/?url=https://youtu.be/${post_id}`,
      title: "Share on Linkedin",
      target: "_blank"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-linkedin-in"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `https://twitter.com/intent/tweet?text=https://youtu.be/${post_id}`,
      title: "Share on Twitter",
      target: "_blank"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-twitter"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `mailto:?subject=&body=https://youtu.be/${post_id}`,
      title: "{{ Drupal.t('Share via Email') }}",
      target: "_blank"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-envelope"
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "modal-close is-large",
      "aria-label": "close"
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_box"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_number"
    }, __('Espisode # '), props.attributes.episodeNumber), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_title"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "h3",
      value: props.attributes.episodeTitle,
      onChange: episodeTitle => props.setAttributes({
        episodeTitle
      }),
      placeholder: __("Episode Name")
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_date"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_full_desc"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "div",
      multiline: "p",
      label: "Full Description",
      value: props.attributes.fullDescription,
      onChange: fullDescription => props.setAttributes({
        fullDescription
      }),
      placeholder: __("Full Description")
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: "purdue_podcast_controls_pause_share_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-share"
    }), " Share"))))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const videoFields = props.attributes.listenOnUrls.map((card, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        key: index,
        className: "item",
        href: card.chennelUrl,
        target: "_blank",
        rel: "noopener noreferrer"
      }, card.chennelname);
    });
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "purdue_podcast"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_podcast_name"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: "h2",
      value: props.attributes.podcastName
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns purdue_podcast_desc"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      className: "purdue_podcast_episode_cover_image",
      src: props.attributes.coverImage,
      alt: props.attributes.altText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_short_desc"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: "div",
      multiline: "p",
      value: props.attributes.shortDescription
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_links"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("strong", null, __('Listen on: ')), " ", videoFields))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_player"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause_playing"
    }, "NOW PLAYING", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      id: "play",
      className: "purdue_podcast_controls_pause_share_play"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "purdue_podcast_controls_pause_share_play_border"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-play"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-pause hidden"
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause_button"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_elapsed"
    }, "00:00:00"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_timeline"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "time_elapsed"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_total"
    }, "00:00:00"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_volume"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-volume-up  podcast-volume"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-volume-mute hidden"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_black_speed"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "pcast-speed"
    }, "1x")), props.attributes.isChecked ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("audio", {
      src: props.attributes.urlText
    }) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("audio", {
      src: props.attributes.internalFile
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_box"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_number"
    }, __('Espisode # '), props.attributes.episodeNumber), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_title"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: "h3",
      value: props.attributes.episodeTitle
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_episode_date"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_full_desc"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: "div",
      multiline: "p",
      value: props.attributes.fullDescription
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_podcast_controls_pause_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: "purdue_podcast_controls_pause_share_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-share share-icon"
    }), " Share"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "podcast-modal"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "modal-close podcast-modal-close is-large",
      "aria-label": "close"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "top_article_data_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      id: "share_text",
      class: "top_article_data_share_text "
    }, "Share"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button facebook_share_button",
      href: "",
      title: "Share on Facebook",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-facebook-f"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button instagram_share_button",
      href: "",
      title: "Share on Linkedin",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-linkedin-in"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button twitter_share_button",
      href: "",
      title: "Share on Twitter",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-twitter"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button email_share_button",
      href: "",
      title: "{{ Drupal.t('Share via Email') }}",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-envelope"
    })))))))))));
  }
});

/***/ }),

/***/ "./src/profile-gallery/block.js":
/*!**************************************!*\
  !*** ./src/profile-gallery/block.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  RadioControl,
  SelectControl,
  CheckboxControl,
  TextControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  RichText,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/profile-gallery', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Profile Gallery'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "ef9c2100-31be-4639-82c5-0ef6f30faf8a",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 71.42857"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "e07d924f-208c-4ad5-884f-434897ed4326",
    "data-name": "Grip-horizontal",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M28.57143,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14286,7.14285H7.14286A7.14374,7.14374,0,0,1,0,29.46429V15.17857A7.14375,7.14375,0,0,1,7.14286,8.03571H21.42857A7.14375,7.14375,0,0,1,28.57143,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14286,7.14286H7.14286A7.14375,7.14375,0,0,1,0,72.32143V58.03571a7.14374,7.14374,0,0,1,7.14286-7.14285H21.42857A7.14374,7.14374,0,0,1,28.57143,58.03571ZM64.28571,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14285,7.14285H42.85714a7.14374,7.14374,0,0,1-7.14285-7.14285V15.17857a7.14375,7.14375,0,0,1,7.14285-7.14286H57.14286A7.14375,7.14375,0,0,1,64.28571,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14285,7.14286H42.85714a7.14375,7.14375,0,0,1-7.14285-7.14286V58.03571a7.14374,7.14374,0,0,1,7.14285-7.14285H57.14286A7.14374,7.14374,0,0,1,64.28571,58.03571ZM100,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14286,7.14285H78.57143a7.14374,7.14374,0,0,1-7.14286-7.14285V15.17857a7.14375,7.14375,0,0,1,7.14286-7.14286H92.85714A7.14375,7.14375,0,0,1,100,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14286,7.14286H78.57143a7.14375,7.14375,0,0,1-7.14286-7.14286V58.03571a7.14374,7.14374,0,0,1,7.14286-7.14285H92.85714A7.14374,7.14374,0,0,1,100,58.03571Z",
    transform: "translate(0 -8.03571)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    profiles: {
      type: "array",
      default: [{
        name: 'add',
        title: '',
        photoUrl: '',
        photoAlt: '',
        bio: '',
        bioEditorOpen: false
      }]
    },
    numColumns: {
      type: "number",
      default: 4
    },
    header: {
      type: "string",
      default: ""
    },
    headerLocation: {
      type: "string",
      default: "center"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('A gallery view of 1-4 columns of profiles with a modal overlay to view the full bio.'),
  edit: props => {
    const profiles = props.attributes.profiles;
    const numColumns = parseInt(props.attributes.numColumns);
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Number of Columns",
      value: props.attributes.numColumns,
      options: [{
        value: 1,
        label: 'One Column'
      }, {
        value: 2,
        label: 'Two Columns'
      }, {
        value: 3,
        label: 'Three Columns'
      }, {
        value: 4,
        label: 'Four Columns'
      }],
      onChange: numColumns => {
        props.setAttributes({
          numColumns
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Add a header to this region",
      value: props.attributes.header,
      onChange: header => props.setAttributes({
        header
      })
    })), props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Choose how to align the header.",
      selected: props.attributes.headerLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: headerLocation => {
        props.setAttributes({
          headerLocation
        });
      }
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `editor-profile-gallery`
    }, props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", {
      className: `align-${props.attributes.headerLocation}`
    }, props.attributes.header) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `columns ${numColumns === 2 ? 'editor-profile-gallery--md' : numColumns === 1 ? 'editor-profile-gallery--sm' : ''} is-multiline ${props.attributes.bioEditorOpen ? 'bio-editor-open' : ''}`
    }, profiles.map((profile, i, profiles) => {
      const columnSize = numColumns === 4 ? 'is-3' : numColumns === 3 ? 'is-4' : numColumns === 2 ? 'is-6' : 'is-12';

      if (profile.name === 'add') {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `editor-profile-add column ${columnSize}`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: e => {
            const newProfiles = [...profiles];
            newProfiles.push({
              name: '',
              title: '',
              photoUrl: '',
              photoAlt: '',
              bio: ''
            });
            const length = newProfiles.length;
            let addButton = newProfiles[length - 2];
            newProfiles[length - 2] = newProfiles[length - 1];
            newProfiles[length - 1] = addButton;
            props.setAttributes({
              profiles: newProfiles
            });
          },
          className: `editor-add-profile-button`
        }, "Add a card"));
      } else {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `column ${columnSize}`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `editor-profile-form`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `editor-profile-order`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Swap Position: "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("select", {
          onChange: e => {
            const order = e.target.value;
            const newProfiles = [...profiles];
            let temp = newProfiles[order];
            newProfiles[order] = newProfiles[i];
            newProfiles[i] = temp;
            e.target.selectedIndex = i;
            props.setAttributes({
              profiles: newProfiles
            });
          }
        }, profiles.map((profile, j, profiles) => {
          if (profile.name !== 'add') {
            return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("option", {
              selected: i === j ? 'selected' : '',
              value: j
            }, `${j + 1}`);
          }
        }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
          onSelect: img => {
            const newProfiles = [...profiles];
            profile.photoUrl = img.url;
            profile.photoAlt = img.alt;
            newProfiles[i] = profile;
            props.setAttributes({
              profiles: newProfiles
            });
          },
          render: _ref => {
            let {
              open
            } = _ref;
            return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
              className: `image is-square ${profile.photoUrl === '' ? 'is-empty' : ''}`,
              role: "img",
              style: {
                backgroundImage: `url(${profile.photoUrl})`
              },
              "aria-label": profile.photoAlt
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
              onClick: open
            }, profile.photoUrl !== '' ? 'Select a new image' : 'Select an image'));
          }
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
          className: "editor-profile-text-input",
          value: profile.name,
          type: "text",
          placeholder: "Full Name",
          onChange: e => {
            const newProfiles = [...profiles];
            profile.name = e.target.value;
            newProfiles[i] = profile;
            props.setAttributes({
              profiles: newProfiles
            });
          }
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
          className: "editor-profile-text-input",
          value: profile.title,
          type: "text",
          placeholder: "Title",
          onChange: e => {
            const newProfiles = [...profiles];
            profile.title = e.target.value;
            newProfiles[i] = profile;
            props.setAttributes({
              profiles: newProfiles
            });
          }
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `editor-profile-buttons`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: `editor-profile-buttons--edit`,
          onClick: e => {
            const newProfiles = [...profiles];
            profile.bioEditorOpen = !profile.bioEditorOpen;
            newProfiles[i] = profile;
            newProfiles.forEach((newProfile, j) => {
              if (i !== j) {
                newProfile.bioEditorOpen = false;
              }
            });
            props.setAttributes({
              profiles: newProfiles
            });
          }
        }, profile.bioEditorOpen ? 'Close' : 'Edit Biography'), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: `editor-profile-buttons--delete`,
          onClick: e => {
            const newProfiles = [...profiles];
            newProfiles.splice(i, 1);
            props.setAttributes({
              profiles: newProfiles
            });
          }
        }, "Remove card"))), profile.bioEditorOpen ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `editor-profile-bio ${numColumns > 3 ? 'editor-profile-bio--wide' : ''}`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagName: "p",
          className: `pu-profile-gallery--bio`,
          value: profile.bio,
          placeholder: "Biography...",
          onChange: text => {
            const newProfiles = [...profiles];
            profile.bio = text;
            newProfiles[i] = profile;
            props.setAttributes({
              profiles: newProfiles
            });
          }
        })) : '');
      }
    })))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const profiles = props.attributes.profiles;
    const numColumns = parseInt(props.attributes.numColumns);
    const columnSize = numColumns === 4 ? 'is-3' : numColumns === 3 ? 'is-4' : numColumns === 2 ? 'is-6' : 'is-12';
    const returned = props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pu-profile-gallery"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", {
      className: `align-${props.attributes.headerLocation}`
    }, props.attributes.header), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-profile-gallery columns is-multiline`
    }), profiles.map((profile, i, profiles) => {
      if (profile.name !== 'add') {
        const toggle = `${i}-${profile.name}`;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `column ${columnSize} is-half-mobile`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `profile-gallery-open${profile.bio ? "" : " profile-no-bio"}`,
          "data-toggle": toggle
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `image is-square`,
          role: "img",
          style: {
            backgroundImage: `url(${profile.photoUrl})`
          },
          "aria-label": profile.photoAlt
        }), profile.bio ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: `modal-open-button`,
          "aria-label": "More information"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
          class: "fas fa-plus",
          "aria-hidden": "true"
        })) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--name`
        }, profile.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--title`
        }, profile.title), profile.bio ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `pu-profile-gallery--modal`,
          "data-modal": toggle
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `box`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `modal--close-button`,
          "aria-label": "close"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
          class: "fas fa-times",
          "aria-hidden": "true"
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `modal--img-container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `image is-square`,
          role: "img",
          style: {
            backgroundImage: `url(${profile.photoUrl})`
          },
          "aria-label": profile.photoAlt
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `modal--content-container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--name`
        }, profile.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--title`
        }, profile.title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
          className: `pu-profile-gallery--bio`,
          tagName: "p",
          value: profile.bio
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: `modal--secondary-close-button`
        }, '< BACK TO ARTICLE'))))) : "");
      }
    }))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-profile-gallery columns is-multiline`
    }), profiles.map((profile, i, profiles) => {
      if (profile.name !== 'add') {
        const toggle = `${i}-${profile.name}`;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `column ${columnSize} is-half-mobile`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `profile-gallery-open${profile.bio ? "" : " profile-no-bio"}`,
          "data-toggle": toggle
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `image is-square`,
          role: "img",
          style: {
            backgroundImage: `url(${profile.photoUrl})`
          },
          "aria-label": profile.photoAlt
        }), profile.bio ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: `modal-open-button`,
          "aria-label": "More information"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
          class: "fas fa-plus",
          "aria-hidden": "true"
        })) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--name`
        }, profile.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--title`
        }, profile.title), profile.bio ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `pu-profile-gallery--modal`,
          "data-modal": toggle
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `box`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `modal--close-button`,
          "aria-label": "close"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
          class: "fas fa-times",
          "aria-hidden": "true"
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `modal--img-container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `image is-square`,
          role: "img",
          style: {
            backgroundImage: `url(${profile.photoUrl})`
          },
          "aria-label": profile.photoAlt
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `modal--content-container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--name`
        }, profile.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: `pu-profile-gallery--title`
        }, profile.title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
          className: `pu-profile-gallery--bio`,
          tagName: "p",
          value: profile.bio
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: `modal--secondary-close-button`
        }, '< BACK TO ARTICLE'))))) : "");
      }
    }));
    return returned;
  }
});

/***/ }),

/***/ "./src/profile-hero/block.js":
/*!***********************************!*\
  !*** ./src/profile-hero/block.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  SelectControl,
  TextControl,
  RadioControl,
  Button,
  Disabled
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Optional subtext'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

const ALLOWED_MEDIA_TYPES_2 = ['video'];
registerBlockType("purdue-blocks/profile-hero", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Profile Hero"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    storyTitle: {
      type: 'string',
      source: 'html',
      selector: '.story-title'
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    altText: {
      type: "string",
      default: ""
    },
    position: {
      type: "string",
      default: "left"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Adds a hero with a profile image."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Text Box Position",
      selected: props.attributes.position,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: position => {
        props.setAttributes({
          position
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-profile-hero pu-profile-hero-editor${props.attributes.position === "right" ? " pu-profile-hero--right" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "section is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-two-fifths-desktop is-full-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "background-image image is-1by1",
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: open
        }, props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image"), props.attributes.imgUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: removeMedia
        }, "Remove image") : ""));
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pu-profile-hero__content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "h1",
      value: props.attributes.storyTitle,
      className: 'story-title',
      onChange: storyTitle => {
        props.setAttributes({
          storyTitle
        });
      },
      placeholder: "Add header",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    })))))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-profile-hero ${props.attributes.position === "right" ? " pu-profile-hero--right" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "section is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-two-fifths-desktop is-full-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      role: `${props.attributes.altText ? "img" : ""}`,
      className: "background-image image is-1by1",
      "aria-label": props.attributes.altText,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pu-profile-hero__content"
    }, props.attributes.storyTitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: "h1",
      value: props.attributes.storyTitle,
      className: 'story-title'
    }) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null)))))));
    return returned;
  }
});

/***/ }),

/***/ "./src/proofpoint/block.js":
/*!*********************************!*\
  !*** ./src/proofpoint/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import "./editor.scss";
// import "./style.scss";
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextControl,
  TextareaControl,
  Button,
  CheckboxControl,
  RadioControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps,
  RichText
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Body content copy'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/proofpoint", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Reasons to Believe"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Bookmark",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M87.5,9.37V100L50,78.12,12.5,100V9.37A9.38,9.38,0,0,1,21.87,0H78.13A9.38,9.38,0,0,1,87.5,9.37Zm-9.37,1.18A1.18,1.18,0,0,0,77,9.37H23.05a1.18,1.18,0,0,0-1.18,1.18V83.68L50,67.27,78.13,83.68Z",
    transform: "translate(-12.5 0)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    color: {
      type: "string",
      default: "black"
    },
    border: {
      type: "boolean",
      default: false
    },
    buttonColor: {
      type: "string",
      default: "black"
    },
    hasLead: {
      type: 'boolean',
      default: false
    },
    lead: {
      type: "string",
      default: ""
    },
    highlighted: {
      type: "string",
      default: ""
    },
    headerfontStyle: {
      type: "string",
      default: "narrow"
    },
    contentfontStyle: {
      type: "string",
      default: "narrow"
    },
    content: {
      type: "string",
      default: ""
    },
    source: {
      type: "string",
      default: ""
    },
    ctaUrl: {
      type: "string",
      default: ""
    },
    ctaText: {
      type: "string",
      default: ""
    },
    external: {
      type: 'boolean',
      default: false
    },
    height: {
      type: "string",
      default: "auto"
    },
    boxshadow: {
      type: 'boolean',
      default: true
    }
  },
  supports: {
    className: true,
    anchor: true
  },
  // Block description in side panel
  description: __("This block adds a Reasons to Believe card."),
  edit: props => {
    const setChecked = () => {
      if (props.attributes.border) {
        props.setAttributes({
          border: false
        });
      } else {
        props.setAttributes({
          border: true
        });
      }
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Background Color",
      help: "Choose to background color of the proofpoint.",
      selected: props.attributes.color,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: option => {
        props.setAttributes({
          color: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Height",
      help: "Choose to the height of the proofpoint.",
      selected: props.attributes.height,
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: '100%',
        value: 'full'
      }],
      onChange: option => {
        props.setAttributes({
          height: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add Lead Text above Highlighted Text?",
      checked: props.attributes.hasLead,
      onChange: () => props.setAttributes({
        hasLead: !props.attributes.hasLead
      })
    }))), props.attributes.color === 'white' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add box shadow?",
      help: "Would you like to add box shadow around the proofpoint?",
      checked: props.attributes.boxshadow,
      onChange: () => {
        props.setAttributes({
          boxshadow: !props.attributes.boxshadow
        });
      }
    }))) : '', props.attributes.color === 'white' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add border?",
      help: "Would you like to add border at the top to the proofpoint?",
      checked: props.attributes.border,
      onChange: setChecked
    }))) : '', props.attributes.color === 'white' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Button Color",
      help: "Choose the CTA button color.",
      selected: props.attributes.buttonColor,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: option => {
        props.setAttributes({
          buttonColor: option
        });
      }
    }))) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Highlighted Text Style",
      selected: props.attributes.headerfontStyle,
      options: [{
        label: 'Wide',
        value: 'wide'
      }, {
        label: 'Narrow',
        value: 'narrow'
      }],
      onChange: option => {
        props.setAttributes({
          headerfontStyle: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Content Text Style",
      selected: props.attributes.contentfontStyle,
      options: [{
        label: 'Wide',
        value: 'wide'
      }, {
        label: 'Narrow',
        value: 'narrow'
      }],
      onChange: option => {
        props.setAttributes({
          contentfontStyle: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, "Button Link setting"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.ctaText,
      onChange: ctaText => props.setAttributes({
        ctaText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.ctaUrl,
      onChange: ctaUrl => props.setAttributes({
        ctaUrl
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-proofpoint pu-proofpoint--editor${props.attributes.color === 'black' ? ' pu-proofpoint__black' : ' pu-proofpoint__white'}${props.attributes.border ? ' pu-proofpoint__border' : ''}${props.attributes.boxshadow ? '' : ' pu-proofpoint__no-shadow'}
      ${props.attributes.height === "full" ? " pu-proofpoint__height" : ""}
      ${props.attributes.hasLead ? " pu-proofpoint__has-lead" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, props.attributes.hasLead ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.lead,
      className: `pu-proofpoint__lead`,
      onChange: lead => {
        props.setAttributes({
          lead
        });
      },
      placeholder: "Add Lead text"
    }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.highlighted,
      className: `pu-proofpoint__highlighted
                        ${props.attributes.headerfontStyle === "wide" ? "  pu-proofpoint__highlighted-wide" : "  pu-proofpoint__highlighted-narrow"}
                        `,
      onChange: highlighted => {
        props.setAttributes({
          highlighted
        });
      },
      placeholder: "Add Highlighted text"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.content,
      className: `pu-proofpoint__content
                        ${props.attributes.contentfontStyle === "wide" ? "  pu-proofpoint__content-wide" : "  pu-proofpoint__content-narrow"}
                        `,
      onChange: content => {
        props.setAttributes({
          content
        });
      },
      placeholder: "Add content text"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "p",
      value: props.attributes.source,
      className: `pu-proofpoint__source`,
      onChange: source => {
        props.setAttributes({
          source
        });
      },
      placeholder: "Add Source of the Proofpoint"
    }), !props.attributes.ctaUrl || !props.attributes.ctaText ? '' : props.attributes.color === 'white' && props.attributes.buttonColor === "white" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-proofpoint__button pu-proofpoint__button-white",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-proofpoint__button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText)))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-proofpoint${props.attributes.color === 'black' ? ' pu-proofpoint__black' : ' pu-proofpoint__white'}${props.attributes.border ? ' pu-proofpoint__border' : ''}
      ${props.attributes.boxshadow ? '' : ' pu-proofpoint__no-shadow'}
      ${props.attributes.height === "full" ? " pu-proofpoint__height" : ""}
      ${props.attributes.hasLead ? " pu-proofpoint__has-lead" : ""}
      `
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, props.attributes.lead && props.attributes.hasLead ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `pu-proofpoint__lead`,
      tagName: "p",
      value: props.attributes.lead
    }) : "", !props.attributes.highlighted ? '' : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: "p",
      value: props.attributes.highlighted,
      className: `pu-proofpoint__highlighted
                        ${props.attributes.headerfontStyle === "wide" ? "  pu-proofpoint__highlighted-wide" : "  pu-proofpoint__highlighted-narrow"}
                        `
    }), !props.attributes.content ? '' : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `pu-proofpoint__content
            ${props.attributes.contentfontStyle === "wide" ? "  pu-proofpoint__content-wide" : "  pu-proofpoint__content-narrow"}
            `,
      tagName: "p",
      value: props.attributes.content
    }), !props.attributes.source ? '' : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: `pu-proofpoint__source`,
      tagName: "p",
      value: props.attributes.source
    }), !props.attributes.ctaUrl || !props.attributes.ctaText ? '' : props.attributes.color === 'white' && props.attributes.buttonColor === "white" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-proofpoint__button pu-proofpoint__button-white",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "pu-proofpoint__button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText)));
    return returned;
  },
  deprecated: [{
    attributes: {
      color: {
        type: "string",
        default: "black"
      },
      border: {
        type: "boolean",
        default: false
      },
      buttonColor: {
        type: "string",
        default: "black"
      },
      highlighted: {
        type: "string",
        default: ""
      },
      headerfontStyle: {
        type: "string",
        default: "narrow"
      },
      contentfontStyle: {
        type: "string",
        default: "narrow"
      },
      content: {
        type: "string",
        default: ""
      },
      source: {
        type: "string",
        default: ""
      },
      ctaUrl: {
        type: "string",
        default: ""
      },
      ctaText: {
        type: "string",
        default: ""
      },
      external: {
        type: 'boolean',
        default: false
      },
      height: {
        type: "string",
        default: "auto"
      }
    },
    save: props => {
      const blockProps = useBlockProps.save();
      const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
        className: `pu-proofpoint${props.attributes.color === 'black' ? ' pu-proofpoint__black' : ' pu-proofpoint__white'}${props.attributes.border ? ' pu-proofpoint__border' : ''}
          ${props.attributes.height === "full" ? " pu-proofpoint__height" : ""}`
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "container"
      }, !props.attributes.highlighted ? '' : props.attributes.headerfontStyle === "wide" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "pu-proofpoint__highlighted pu-proofpoint__highlighted-wide"
      }, props.attributes.highlighted) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "pu-proofpoint__highlighted pu-proofpoint__highlighted-narrow"
      }, props.attributes.highlighted), !props.attributes.content ? '' : props.attributes.contentfontStyle === "wide" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "pu-proofpoint__content pu-proofpoint__content-wide"
      }, props.attributes.content) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "pu-proofpoint__content pu-proofpoint__content-narrow"
      }, props.attributes.content), !props.attributes.source ? '' : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "pu-proofpoint__source"
      }, props.attributes.source), !props.attributes.ctaUrl || !props.attributes.ctaText ? '' : props.attributes.color === 'white' && props.attributes.buttonColor === "white" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        href: props.attributes.ctaUrl,
        className: "pu-proofpoint__button pu-proofpoint__button-white",
        target: props.attributes.external ? '_blank' : '_self',
        rel: "noopener noreferrer"
      }, props.attributes.ctaText) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        href: props.attributes.ctaUrl,
        className: "pu-proofpoint__button",
        target: props.attributes.external ? '_blank' : '_self',
        rel: "noopener noreferrer"
      }, props.attributes.ctaText)));
      return returned;
    }
  }]
});

/***/ }),

/***/ "./src/purdue-button/block.js":
/*!************************************!*\
  !*** ./src/purdue-button/block.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import "./editor.scss";
// import "./style.scss";
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextControl,
  TextareaControl,
  Button,
  CheckboxControl,
  RadioControl,
  Popover,
  ToolbarButton,
  KeyboardShortcuts
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  RichText,
  BlockControls,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/purdue-button", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Purdue Button"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "e39343d6-a9a0-44c7-9f48-599e26c08610",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "clone",
    class: "cls-2"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-2"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "a5e7d352-d338-4ff0-9c2b-3bce1de664a1",
    d: "M100,89.28571A10.718,10.718,0,0,1,89.28571,100H10.71429A10.718,10.718,0,0,1,0,89.28571V10.71429A10.718,10.718,0,0,1,10.71429,0H89.28571A10.718,10.718,0,0,1,100,10.71429ZM89.28571,12.0529a1.34289,1.34289,0,0,0-1.33861-1.33861H12.0529a1.34289,1.34289,0,0,0-1.33861,1.33861V87.9471a1.34289,1.34289,0,0,0,1.33861,1.33861H87.9471a1.34289,1.34289,0,0,0,1.33861-1.33861ZM21.42857,53.57143V46.42857a2.68655,2.68655,0,0,1,2.679-2.679H75.89241a2.68655,2.68655,0,0,1,2.679,2.679v7.14286a2.68655,2.68655,0,0,1-2.679,2.679H24.10759A2.68655,2.68655,0,0,1,21.42857,53.57143Z",
    transform: "translate(0)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    buttonStyle: {
      type: "string",
      default: "fill"
    },
    backgroundColor: {
      type: "string",
      default: "black"
    },
    fontStyle: {
      type: "string",
      default: "primary"
    },
    width: {
      type: "string",
      default: "auto"
    },
    buttonText: {
      type: 'string',
      source: 'html',
      selector: 'span.purdue-blocks__button__text'
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    buttonURL: {
      type: 'string',
      default: ""
    },
    external: {
      type: 'boolean',
      default: false
    },
    fancyColor: {
      type: "string",
      default: "black"
    },
    height: {
      type: "string",
      default: "auto"
    },
    isDownload: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("This block adds a button styled in line with Purdue brand."),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Font style",
      selected: props.attributes.fontStyle,
      options: [{
        label: 'Primary (Regular and uppercase)',
        value: 'primary'
      }, {
        label: 'Narrow (Condesed and capitalized',
        value: 'narrow'
      }, {
        label: 'Fancy',
        value: 'fancy'
      }],
      onChange: option => {
        props.setAttributes({
          fontStyle: option
        });
      }
    })), props.attributes.fontStyle === "fancy" ? "" : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Button Style",
      selected: props.attributes.buttonStyle,
      options: [{
        label: 'Fill',
        value: 'fill'
      }, {
        label: 'Outline',
        value: 'outline'
      }],
      onChange: option => {
        props.setAttributes({
          buttonStyle: option
        });
        props.setAttributes({
          backgroundColor: "black"
        });
      }
    })), props.attributes.fontStyle === "fancy" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Button Background Color",
      selected: props.attributes.fancyColor,
      options: [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'White',
        value: 'white'
      }],
      onChange: option => {
        props.setAttributes({
          fancyColor: option
        });
      }
    })) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Button Background Color",
      selected: props.attributes.backgroundColor,
      options: props.attributes.buttonStyle === "fill" ? [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gold (use on light background)',
        value: 'goldLignt'
      }, {
        label: 'Gold (use on dark background)',
        value: 'goldDark'
      }, {
        label: 'Opaque',
        value: 'opaque'
      }] : [{
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gold (use on light background)',
        value: 'goldLignt'
      }, {
        label: 'Gold (use on dark background)',
        value: 'goldDark'
      }],
      onChange: option => {
        props.setAttributes({
          backgroundColor: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Button Width",
      selected: props.attributes.width,
      options: [{
        label: 'Full width',
        value: 'full'
      }, {
        label: 'Full width on mobile only',
        value: 'fullMobile'
      }, {
        label: 'Auto',
        value: 'auto'
      }],
      onChange: option => {
        props.setAttributes({
          width: option
        });
        wp.hooks.addFilter('editor.BlockListBlock', 'purdue-blocks/purdue-button-modify-element', modifyBlockListBlockButton);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Height",
      help: "Choose to the height of the button.",
      selected: props.attributes.height,
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: '100%',
        value: 'full'
      }],
      onChange: option => {
        props.setAttributes({
          height: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a link to this button?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link URL",
      value: props.attributes.buttonURL,
      onChange: buttonURL => props.setAttributes({
        buttonURL
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '', props.attributes.hasLink && props.attributes.fontStyle !== "fancy" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Is this a download button?",
      checked: props.attributes.isDownload,
      onChange: () => props.setAttributes({
        isDownload: !props.attributes.isDownload
      })
    })) : '')), props.attributes.fontStyle === "fancy" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `purdue-blocks-editor-button purdue-blocks__button purdue-blocks__button--fancy
      ${props.attributes.fancyColor === 'black' ? ' purdue-blocks__button--fancy-black' : ''}
      ${props.attributes.fancyColor === 'white' ? ' purdue-blocks__button--fancy-white' : ''}
      ${props.attributes.width === 'full' ? ' purdue-blocks__button--full' : ''}
      ${props.attributes.width === 'fullMobile' ? ' purdue-blocks__button--full-mobile' : ''}
      ${props.attributes.fontStyle === 'narrow' ? ' purdue-blocks__button--narrow' : ''}
      ${props.attributes.height === 'full' ? ' purdue-blocks__button--height' : ''}
      `
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "span",
      value: props.attributes.buttonText,
      className: 'purdue-blocks__button__text',
      onChange: text => {
        props.setAttributes({
          buttonText: text
        });
      },
      placeholder: "Button Text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: 'purdue-blocks__button__icon'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-angle-right"
    }))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `purdue-blocks-editor-button purdue-blocks__button
        ${props.attributes.backgroundColor === 'goldLignt' ? ' purdue-blocks__button--gold-light' : ''}
        ${props.attributes.backgroundColor === 'goldDark' ? ' purdue-blocks__button--gold-dark' : ''}
        ${props.attributes.backgroundColor === 'opaque' ? ' purdue-blocks__button--opaque' : ''}
        ${props.attributes.buttonStyle === 'fill' ? '' : ' purdue-blocks__button--outline'}
        ${props.attributes.width === 'full' ? ' purdue-blocks__button--full' : ''}
        ${props.attributes.width === 'fullMobile' ? ' purdue-blocks__button--full-mobile' : ''}
        ${props.attributes.fontStyle === 'narrow' ? ' purdue-blocks__button--narrow' : ''}
        ${props.attributes.height === 'full' ? ' purdue-blocks__button--height' : ''}
        `
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "shrink-padding"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "span",
      value: props.attributes.buttonText,
      className: 'purdue-blocks__button__text',
      onChange: text => {
        props.setAttributes({
          buttonText: text
        });
      },
      placeholder: "Button Text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "shrink-padding"
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = props.attributes.hasLink && props.attributes.buttonURL ? props.attributes.fontStyle === "fancy" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `purdue-blocks__button purdue-blocks__button--fancy
      ${props.attributes.fancyColor === 'black' ? ' purdue-blocks__button--fancy-black' : ''}
      ${props.attributes.fancyColor === 'white' ? ' purdue-blocks__button--fancy-white' : ''}
      ${props.attributes.width === 'full' ? ' purdue-blocks__button--full' : ''}
      ${props.attributes.width === 'fullMobile' ? ' purdue-blocks__button--full-mobile' : ''}
      ${props.attributes.fontStyle === 'narrow' ? ' purdue-blocks__button--narrow' : ''}
      ${props.attributes.height === 'full' ? ' purdue-blocks__button--height' : ''}
      `,
      href: props.attributes.buttonURL,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'purdue-blocks__button__text',
      tagName: "span",
      value: props.attributes.buttonText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: 'purdue-blocks__button__icon'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-angle-right"
    }))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      role: "link",
      className: `purdue-blocks__button${props.attributes.height === 'full' ? ' purdue-blocks__button--height' : ''}${props.attributes.backgroundColor === 'goldLignt' ? ' purdue-blocks__button--gold-light' : ''}${props.attributes.backgroundColor === 'goldDark' ? ' purdue-blocks__button--gold-dark' : ''}${props.attributes.backgroundColor === 'opaque' ? ' purdue-blocks__button--opaque' : ''}${props.attributes.buttonStyle === 'fill' ? '' : ' purdue-blocks__button--outline'}${props.attributes.width === 'full' ? ' purdue-blocks__button--full' : ''}${props.attributes.width === 'fullMobile' ? ' purdue-blocks__button--full-mobile' : ''}${props.attributes.fontStyle === 'narrow' ? ' purdue-blocks__button--narrow' : ''}`,
      href: props.attributes.buttonURL,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "shrink-padding"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'purdue-blocks__button__text',
      tagName: "span",
      value: props.attributes.buttonText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "shrink-padding"
    })) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      role: "button",
      className: `purdue-blocks__button${props.attributes.height === 'full' ? ' purdue-blocks__button--height' : ''}${props.attributes.backgroundColor === 'goldLignt' ? ' purdue-blocks__button--gold-light' : ''}${props.attributes.backgroundColor === 'goldDark' ? ' purdue-blocks__button--gold-dark' : ''}${props.attributes.backgroundColor === 'opaque' ? ' purdue-blocks__button--opaque' : ''}${props.attributes.buttonStyle === 'fill' ? '' : ' purdue-blocks__button--outline'}${props.attributes.width === 'full' ? ' purdue-blocks__button--full' : ''}${props.attributes.width === 'fullMobile' ? ' purdue-blocks__button--full-mobile' : ''}${props.attributes.fontStyle === 'narrow' ? ' purdue-blocks__button--narrow' : ''}`
    }, blockProps), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "shrink-padding"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'purdue-blocks__button__text',
      tagName: "span",
      value: props.attributes.buttonText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "shrink-padding"
    }));
    return returned;
  }
});
const {
  createHigherOrderComponent
} = wp.compose;
const modifyBlockListBlockButton = createHigherOrderComponent(BlockListBlock => {
  return props => {
    let classnames;

    if (props.block.name === 'purdue-blocks/purdue-button') {
      classnames = [`${props.attributes.width === 'fullMobile' ? " purdue-button-block-editor-width--full-mobile" : ""}`, `${props.attributes.width === 'auto' ? " purdue-button-block-editor-width--auto" : ""}`].join('');
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(BlockListBlock, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
      className: classnames
    }));
  };
}, 'modifyBlockListBlockButton');
wp.hooks.addFilter('editor.BlockListBlock', 'purdue-blocks/purdue-button-modify-element', modifyBlockListBlockButton);

/***/ }),

/***/ "./src/purdue-news/block.js":
/*!**********************************!*\
  !*** ./src/purdue-news/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/pencil.js");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/server-side-render */ "@wordpress/server-side-render");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  ToolbarGroup,
  Disabled
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  BlockControls,
  useBlockProps
} = wp.blockEditor;
const {
  apiFetch
} = wp;
const {
  useState
} = wp.element;


/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/purdue-news', {
  title: __('Purdue News'),
  description: __('Display entries from RSS feed.'),
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 66.67"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "newspaper",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "cls-2",
    d: "M100,21.83V80.16a4.17,4.17,0,0,1-4.17,4.17H9.72A9.73,9.73,0,0,1,0,74.6V27.38a4.17,4.17,0,0,1,4.17-4.17h7.42a8.34,8.34,0,0,1,7.85-5.55H95.83A4.17,4.17,0,0,1,100,21.83ZM9.72,76a1.39,1.39,0,0,0,1.39-1.39v-43H8.33V74.6A1.39,1.39,0,0,0,9.72,76Zm82-50H19.44V74.6a9.1,9.1,0,0,1-.1,1.39H91.67ZM27.78,53.08V36.41a2.08,2.08,0,0,1,2.08-2.08H53.47a2.08,2.08,0,0,1,2.08,2.08V53.08a2.08,2.08,0,0,1-2.08,2.08H29.86A2.08,2.08,0,0,1,27.78,53.08Zm0,8.33a2.08,2.08,0,0,1,2.08-2.08H53.47a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H29.86a2.08,2.08,0,0,1-2.08-2.08Zm6.94-13.2H48.61V41.27H34.72Zm26.39-11.8a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Zm0,12.5a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Zm0,12.5a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Z",
    transform: "translate(0 -17.66)"
  })))),
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
  * The edit function describes the structure of your block in the context of the editor.
  * This represents what the editor will render when the block is used.
  *
  * The "edit" property must be a valid function.
  *
  * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
  *
  * @param {Object} props Props.
  * @returns {Mixed} JSX Component.
  */
  edit: props => {
    const onSubmitURL = e => {
      e.preventDefault();

      if (props.attributes.feedURL) {
        setIsEditing(false);
      }
    };

    const [isEditing, setIsEditing] = useState(!props.attributes.feedURL);
    const toolbarControls = [{
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"],
      title: __('Edit RSS URL'),
      onClick: () => setIsEditing(true)
    }];

    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(ToolbarGroup, {
      controls: toolbarControls
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Layout of the RSS feed",
      selected: props.attributes.type,
      options: [{
        label: 'Recent news with image',
        value: 'withImage'
      }, {
        label: 'Recent news without image',
        value: 'withoutImage'
      }, {
        label: 'All News/Events from the feed (max 10) ',
        value: 'all'
      }],
      onChange: type => {
        props.setAttributes({
          type
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Add a header to this region?",
      value: props.attributes.header,
      onChange: header => props.setAttributes({
        header
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    })), props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Heading level of the Header",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    })) : '', props.attributes.type === "withoutImage" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Choose a hero Image")) : '', props.attributes.type === "withoutImage" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.imgUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'purdue-blocks-editor-news__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'purdue-blocks-editor-feature-story__button',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button purdue-news__remove-image-button',
          onClick: removeMedia
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'purdue-blocks-editor-news__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
          className: 'purdue-blocks-editor-news__description'
        }, "Pick an image from the media library. The recommended aspect ratio is 3:2."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'purdue-blocks-editor-feature-story__button',
          onClick: open
        }, "Open Media Library"));
      }
    }))) : "", props.attributes.type === "withoutImage" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
      label: "Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })) : "", props.attributes.type !== "all" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add a link to the news/events page?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })) : "", props.attributes.type !== "all" && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })) : '', props.attributes.type !== "all" && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link URL",
      value: props.attributes.link,
      onChange: link => props.setAttributes({
        link
      })
    })) : '', props.attributes.type !== "all" && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, isEditing ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'news-feed-editor'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Enter feed URL in the box and then click \"Use URL\" to retrive the feed"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("form", {
      onSubmit: onSubmitURL,
      className: "rss-form"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      placeholder: __('Enter URL here…'),
      value: props.attributes.feedURL,
      onChange: value => props.setAttributes({
        feedURL: value
      }),
      className: "rss-input"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      isPrimary: true,
      type: "submit"
    }, __('Use URL')))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)((_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_1___default()), {
      block: "purdue-blocks/purdue-news",
      attributes: props.attributes
    })))];
  }
});

/***/ }),

/***/ "./src/purdue-quote/block.js":
/*!***********************************!*\
  !*** ./src/purdue-quote/block.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-up.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-down.js");



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  Placeholder,
  Button,
  FormFileUpload,
  SelectControl,
  IconButton,
  Panel,
  PanelBody,
  PanelRow,
  Toolbar,
  BaseControl,
  TextControl,
  RadioControl,
  TextareaControl,
  CheckboxControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps,
  RichText
} = wp.blockEditor;
const {
  Component,
  Fragment
} = wp.element;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/purdue-quote', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Quote'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "bda0faeb-2e3e-487c-9d9c-42860ab6054c",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 99.32654 86.91157"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "f04fbf08-b922-4b9c-b15b-ad3f74dc03a4",
    "data-name": "Quote-left",
    class: "cls-2"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "ff897772-7a0c-4402-9977-028c84640f47"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "adaadcbe-8236-4ed1-9252-1b75bd4a866b",
    d: "M43.76925,53.08761V77.91948a9.31436,9.31436,0,0,1-9.312,9.312H9.62542a9.31436,9.31436,0,0,1-9.312-9.312V31.35971A31.03129,31.03129,0,0,1,31.35331.31987h1.552a4.64481,4.64481,0,0,1,4.656,4.656v9.312a4.64481,4.64481,0,0,1-4.656,4.656h-1.552A12.42743,12.42743,0,0,0,18.93737,31.35971V43.77565H34.45729A9.31436,9.31436,0,0,1,43.76925,53.08761Zm55.87075,0V77.91948a9.31436,9.31436,0,0,1-9.31195,9.312H65.49714a9.31435,9.31435,0,0,1-9.312-9.312V31.35971A31.03108,31.03108,0,0,1,87.22406.31987h1.552a4.64481,4.64481,0,0,1,4.656,4.656v9.312a4.64481,4.64481,0,0,1-4.656,4.656h-1.552A12.42744,12.42744,0,0,0,74.80812,31.35971V43.77565H90.32805A9.31436,9.31436,0,0,1,99.64,53.08761Z",
    transform: "translate(-0.31346 -0.31987)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    background: {
      type: 'string',
      default: 'white'
    },
    quoteGroup: {
      type: 'array',
      default: []
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add one or more quotes (<=5) to display on the page.'),
  edit: props => {
    if (props.attributes.quoteGroup.length === 0) {
      props.setAttributes({
        quoteGroup: [{
          quoteContent: '',
          name: '',
          nameTitle: '',
          hasLink: false,
          ctaText: '',
          ctaLink: '',
          external: false
        }]
      });
    }

    const handleAddQuote = () => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup.push({
        quoteContent: '',
        name: '',
        nameTitle: '',
        hasLink: false,
        ctaText: '',
        ctaLink: '',
        external: false
      });
      props.setAttributes({
        quoteGroup
      });
    };

    const handleRemoveQuote = index => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup.splice(index, 1);
      props.setAttributes({
        quoteGroup
      });
    }; // const handleRemoveImage = ( index ) => {
    //   let quoteGroup = [ ...props.attributes.quoteGroup ];
    //   quoteGroup[ index ].imgUrl = "";
    //   props.setAttributes( { quoteGroup } );
    // }; 
    // const handleChangeAlt = ( altText, index ) => {
    //   let quoteGroup = [ ...props.attributes.quoteGroup ];
    //   quoteGroup[ index ].altText = altText;
    //   props.setAttributes( { quoteGroup } );
    // }; 


    const handleChangeHasLink = index => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].hasLink = !quoteGroup[index].hasLink;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleChangeCtaText = (ctaText, index) => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].ctaText = ctaText;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleChangeCtaLink = (ctaLink, index) => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].ctaLink = ctaLink;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleChangeExternal = index => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].external = !quoteGroup[index].external;
      props.setAttributes({
        quoteGroup
      });
    }; // const handleChangeImage = ( img, index ) => {
    //   let quoteGroup = [ ...props.attributes.quoteGroup ];
    //   quoteGroup[ index ].imgUrl = img.url;
    //   quoteGroup[ index ].altText = quoteGroup[ index ].altText!==''?quoteGroup[ index ].altText:img.alt;
    //   props.setAttributes( { quoteGroup } );
    // }; 


    const handleChangeContent = (content, index) => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].quoteContent = content.target.value;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleChangeName = (name, index) => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].name = name.target.value;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleChangeTitle = (title, index) => {
      let quoteGroup = [...props.attributes.quoteGroup];
      quoteGroup[index].nameTitle = title;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleMoveUp = index => {
      let quoteGroup = [...props.attributes.quoteGroup];
      let tmp = quoteGroup[index];
      quoteGroup[index] = quoteGroup[index + 1];
      quoteGroup[index + 1] = tmp;
      props.setAttributes({
        quoteGroup
      });
    };

    const handleMoveDown = index => {
      let quoteGroup = [...props.attributes.quoteGroup];
      let tmp = quoteGroup[index];
      quoteGroup[index] = quoteGroup[index - 1];
      quoteGroup[index - 1] = tmp;
      props.setAttributes({
        quoteGroup
      });
    };

    let sidebarFields, editorFields;

    if (props.attributes.quoteGroup.length > 0) {
      let num = props.attributes.quoteGroup.length - 1;
      sidebarFields = props.attributes.quoteGroup.map((quote, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Quote ${index + 1} Details`,
          initialOpen: true
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
          label: "Add a CTA link to this quote?",
          checked: quote.hasLink,
          onChange: () => handleChangeHasLink(index)
        })), quote.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          label: "Call to action text",
          value: quote.ctaText,
          onChange: ctaText => handleChangeCtaText(ctaText, index)
        })) : '', quote.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          label: "Link address",
          value: quote.ctaLink,
          onChange: ctaLink => handleChangeCtaLink(ctaLink, index)
        })) : '', quote.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
          label: "Open link in new tab?",
          checked: quote.external,
          onChange: () => handleChangeExternal(index)
        })) : '', props.attributes.quoteGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null) : "", props.attributes.quoteGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("b", null, "Reorder this quote:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__["default"]
        }) : "") : "", props.attributes.quoteGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null) : "", props.attributes.quoteGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveQuote(index)
        }, "Remove this Quote")) : "");
      });
      editorFields = props.attributes.quoteGroup.map((quote, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          key: index,
          className: 'purdue-block-editor-quote'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "purdue-block-quote__content"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("textarea", {
          value: quote.quoteContent !== '' ? quote.quoteContent : '',
          className: "textarea",
          placeholder: "Add quote content here...",
          onChange: content => handleChangeContent(content, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "purdue-block-quote__name"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
          value: quote.name,
          className: "input",
          type: "text",
          placeholder: "Quote Name...",
          onChange: name => handleChangeName(name, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "p",
          value: quote.nameTitle,
          className: 'purdue-block-quote__title',
          onChange: title => handleChangeTitle(title, index),
          placeholder: "Quote Name Title...",
          keepPlaceholderOnFocus: true
        })));
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Background Color",
      help: "Choose the background color of the quote.",
      selected: props.attributes.background,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gray',
        value: 'gray'
      }],
      onChange: option => {
        props.setAttributes({
          background: option
        });
      }
    }))), sidebarFields, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, props.attributes.quoteGroup.length < 5 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: "remove-image-button add-quote",
      onClick: handleAddQuote.bind(undefined)
    }, __('Add Another Quote')) : "")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      key: "2",
      className: `purdue-block-quote-group-editor purdue-block-quote-group section${props.attributes.background === "black" ? " background-black" : ""}${props.attributes.background === "gray" ? " background-black-ter" : ""}`
    }, editorFields)];
  },
  save: props => {
    const blockProps = useBlockProps.save();
    const quotes = props.attributes.quoteGroup.map((quote, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        key: index,
        className: `purdue-block-quote`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "container"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: `columns is-centered`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "column is-two-thirds-desktop is-full-tablet is-full-mobile"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "purdue-block-quote__content"
      }, quote.quoteContent), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "purdue-block-quote__bottom"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "purdue-block-quote__info"
      }, quote.name !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: "purdue-block-quote__name"
      }, quote.name) : "", quote.nameTitle !== "" ? // <p className="purdue-block-quote__title">{quote.nameTitle}</p>:""}
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        className: 'purdue-block-quote__title',
        tagName: "p",
        value: quote.nameTitle
      }) : ""), quote.ctaLink !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        className: "purdue-block-quote__cta",
        href: quote.ctaLink,
        target: `${quote.external ? "_blank" : "_self"}`,
        rel: "noopener noreferrer"
      }, quote.ctaText) : "")))));
    });
    const dots = props.attributes.quoteGroup.map((quote, index) => {
      let num = index + 1;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        key: index,
        className: `purdue-block-quote-group__dot${index === 0 ? " active" : ""}`,
        "data-target": index,
        "aria-label": `quote ${num}`
      });
    });
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `purdue-block-quote-group ${props.attributes.background === "black" ? " has-background-black" : ""}${props.attributes.background === "gray" ? " has-background-black-ter" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-block-quote-wrapper"
    }, quotes), props.attributes.quoteGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-block-quote-group__arrow-wrapper"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-block-quote-group__arrow purdue-block-quote-group__arrow-left",
      "aria-label": "previous"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-chevron-left"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-block-quote-group__arrow purdue-block-quote-group__arrow-right",
      "aria-label": "next"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-chevron-right"
    })))) : "", props.attributes.quoteGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue-block-quote-group__dots"
    }, dots) : "");
  }
});

/***/ }),

/***/ "./src/purdue-rss/block.js":
/*!*********************************!*\
  !*** ./src/purdue-rss/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/pencil.js");


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  ToolbarGroup
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  BlockControls
} = wp.blockEditor;
const {
  apiFetch
} = wp;
const {
  useState
} = wp.element;

const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add content'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/purdue-rss', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Purdue RSS feed'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 66.67"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "newspaper",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "cls-2",
    d: "M100,21.83V80.16a4.17,4.17,0,0,1-4.17,4.17H9.72A9.73,9.73,0,0,1,0,74.6V27.38a4.17,4.17,0,0,1,4.17-4.17h7.42a8.34,8.34,0,0,1,7.85-5.55H95.83A4.17,4.17,0,0,1,100,21.83ZM9.72,76a1.39,1.39,0,0,0,1.39-1.39v-43H8.33V74.6A1.39,1.39,0,0,0,9.72,76Zm82-50H19.44V74.6a9.1,9.1,0,0,1-.1,1.39H91.67ZM27.78,53.08V36.41a2.08,2.08,0,0,1,2.08-2.08H53.47a2.08,2.08,0,0,1,2.08,2.08V53.08a2.08,2.08,0,0,1-2.08,2.08H29.86A2.08,2.08,0,0,1,27.78,53.08Zm0,8.33a2.08,2.08,0,0,1,2.08-2.08H53.47a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H29.86a2.08,2.08,0,0,1-2.08-2.08Zm6.94-13.2H48.61V41.27H34.72Zm26.39-11.8a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Zm0,12.5a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Zm0,12.5a2.08,2.08,0,0,1,2.08-2.08H81.25a2.08,2.08,0,0,1,2.08,2.08v4.17a2.08,2.08,0,0,1-2.08,2.08H63.19a2.08,2.08,0,0,1-2.08-2.08Z",
    transform: "translate(0 -17.66)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    type: {
      type: 'string',
      default: "withImage"
    },
    feedURL: {
      type: 'string',
      default: ''
    },
    title: {
      type: 'string',
      source: 'html',
      selector: '.feed-header'
    },
    titleLevel: {
      type: 'string',
      default: 'p'
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    link: {
      type: 'string',
      default: ''
    },
    linkText: {
      type: 'string',
      default: ''
    },
    imgLocation: {
      type: 'string',
      default: 'left'
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    data: [],
    error: {
      type: 'string',
      default: 'Loading...'
    }
  },
  supports: {
    className: false
  },
  // Block description in side panel
  description: __('Display entries from RSS feed. Entries will not update automatically. Please use "Purdue News" block instead.'),
  edit: props => {
    const onSubmitURL = e => {
      e.preventDefault();

      if (props.attributes.feedURL) {
        setIsEditing(false);
      }

      apiFetch({
        path: '/purduerssfeed/v2/getFeed/?url=' + props.attributes.feedURL,
        method: 'GET'
      }).then(response => {
        if (response) {
          if (JSON.parse(response).error) {
            props.setAttributes({
              error: JSON.parse(response).error
            });
            props.setAttributes({
              data: null
            });
          } else {
            props.setAttributes({
              data: JSON.parse(response)
            });
            props.setAttributes({
              error: ""
            });
          }
        }
      });
    };

    const itemListImage = props.attributes.data && props.attributes.data.length > 0 ? props.attributes.data.slice(0, 3).map(data => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: data.id,
        className: "column is-one-third-desktop is-one-third-tablet is-full-mobile"
      }, itemImage(data));
    }) : "";
    const itemListWithoutImage = props.attributes.data && props.attributes.data.length > 0 ? [...props.attributes.data].slice(0, 4).map(data => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: data.id,
        class: "feed-item-noimage"
      }, itemNoImage(data));
    }) : "";
    const itemListAll = props.attributes.data && props.attributes.data.length > 0 ? [...props.attributes.data].map(data => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: data.id,
        className: "column is-one-third-desktop is-half-tablet is-full-mobile"
      }, itemAll(data));
    }) : "";
    const [isEditing, setIsEditing] = useState(!props.attributes.feedURL);
    const toolbarControls = [{
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__["default"],
      title: __('Edit RSS URL'),
      onClick: () => setIsEditing(true)
    }];

    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(ToolbarGroup, {
      controls: toolbarControls
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Layout of the RSS feed",
      selected: props.attributes.type,
      options: [{
        label: 'Recent news with image',
        value: 'withImage'
      }, {
        label: 'Recent news without image',
        value: 'withoutImage'
      }, {
        label: 'All News/Events',
        value: 'all'
      }],
      onChange: type => {
        props.setAttributes({
          type
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Heading level of the Header",
      value: props.attributes.titleLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
      label: "Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })) : "", props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      className: 'remove-image-button',
      onClick: removeMedia
    }, "Remove image")) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add a link to the news/events page?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link URL",
      value: props.attributes.link,
      onChange: link => props.setAttributes({
        link
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, isEditing ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'news-feed-editor'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Enter feed URL in the box and then click \"Use URL\" to retrive the feed"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("form", {
      onSubmit: onSubmitURL,
      className: "rss-form"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      placeholder: __('Enter URL here…'),
      value: props.attributes.feedURL,
      onChange: value => props.setAttributes({
        feedURL: value
      }),
      className: "rss-input"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      isPrimary: true,
      type: "submit"
    }, __('Use URL')))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'news-feed'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
      className: 'feed-header',
      tagname: props.setAttributes.titleLevel,
      value: props.attributes.title,
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add A Header (Optional)",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }), props.attributes.error !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "error"
    }, props.attributes.error) : "", props.attributes.data && (props.attributes.type === "withImage" || props.attributes.type === "all") ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'columns is-multiline feed-items components-disabled'
    }, props.attributes.type === "withImage" ? itemListImage : itemListAll) : "", props.attributes.data && props.attributes.type === "withImage" && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "read-more-button components-disabled"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.linkText)) : '', props.attributes.data && props.attributes.type === "withoutImage" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'feed-grid'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'feed-image'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'image is-3by2',
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          onClick: open
        }, props.attributes.imgUrl !== '' ? 'Select a new image' : 'Select an image'));
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'feed-items components-disabled'
    }, itemListWithoutImage), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "button components-disabled",
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.linkText) : "") : ""))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const itemListImage = props.attributes.data && props.attributes.data.length > 0 ? props.attributes.data.slice(0, 3).map(data => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: data.id,
        className: "column is-one-third-desktop is-one-third-tablet is-full-mobile"
      }, itemImage(data));
    }) : "";
    const itemListWithoutImage = props.attributes.data && props.attributes.data.length > 0 ? [...props.attributes.data].slice(0, 4).map(data => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: data.id,
        class: "feed-item-noimage"
      }, itemNoImage(data));
    }) : "";
    const itemListAll = props.attributes.data && props.attributes.data.length > 0 ? [...props.attributes.data].map(data => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: data.id,
        className: "column is-one-third-desktop is-half-tablet is-full-mobile"
      }, itemAll(data));
    }) : "";
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'news-feed'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'container'
    }, props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText.Content, {
      className: 'feed-header',
      tagName: props.attributes.titleLevel,
      value: props.attributes.title
    }) : '', props.attributes.error !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "error"
    }, props.attributes.error) : "", props.attributes.data && (props.attributes.type === "withImage" || props.attributes.type === "all") ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'columns is-multiline feed-items'
    }, props.attributes.type === "withImage" ? itemListImage : itemListAll) : '', props.attributes.data && props.attributes.type === "withImage" && props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.linkText)) : '', props.attributes.data && props.attributes.type === "withoutImage" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'feed-grid'
    }, props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", {
      className: "feed-image is-3by2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'feed-items'
    }, itemListWithoutImage), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "button",
      href: props.attributes.link,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.linkText) : "") : ''));
  }
});

function itemImage(data) {
  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "card feed-item"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: data.link
  }, data.imgURL && data.imgURL !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "card-bg-image image is-2by1",
    role: "img",
    style: {
      backgroundImage: `url(${data.imgURL})`
    },
    "aria-label": data.imgALT
  }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "card-content"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "media"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "media-content"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "title is-4"
  }, data.title))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "read-more-button"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, "Read More")))));
}

function itemNoImage(data) {
  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    className: "meida feed-item-noimage",
    href: data.link
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "media-left"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "month"
  }, data.month), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "day"
  }, data.day)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "media-content"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "content"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "title"
  }, data.title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "desc"
  }, data.text))));
}

function itemAll(data) {
  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "card feed-item"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
    href: data.link
  }, data.imgURL && data.imgURL !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "card-bg-image image is-2by1",
    role: "img",
    style: {
      backgroundImage: `url(${data.imgURL})`
    },
    "aria-label": data.imgALT
  }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "card-content"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "media"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "media-content"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "subtitle"
  }, data.date), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    className: "title is-4"
  }, data.title))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "content-text"
  }, data.text), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "read-more-button"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, "Read More")))));
}

/***/ }),

/***/ "./src/purdue-slider/block.js":
/*!************************************!*\
  !*** ./src/purdue-slider/block.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-up.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-down.js");


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  Disabled
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps,
  RichText
} = wp.blockEditor;
const {
  apiFetch
} = wp;
const {
  useState
} = wp.element;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/purdue-slider', {
  title: __('Purdue Slider'),
  description: __('Create a slider.'),
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-ellipsis-h fa-w-12",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"
  })),
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
  * The edit function describes the structure of your block in the context of the editor.
  * This represents what the editor will render when the block is used.
  *
  * The "edit" property must be a valid function.
  *
  * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
  *
  * @param {Object} props Props.
  * @returns {Mixed} JSX Component.
  */
  edit: props => {
    if (props.attributes.cards.length === 0) {
      props.setAttributes({
        cards: [{
          header: '',
          storyType: '',
          ctaText: '',
          ctaLink: '',
          external: false,
          imageURL: '',
          imageAlt: '',
          tag: ''
        }]
      });
    }

    if (props.attributes.tabs.length === 0) {
      props.setAttributes({
        tabs: [{
          header: '',
          subtext: '',
          ctaText: '',
          ctaLink: '',
          external: false,
          imageURL: '',
          imageAlt: ''
        }]
      });
    }

    if (props.attributes.rtb.length === 0) {
      props.setAttributes({
        rtb: [{
          leadText: '',
          largeText: '',
          smallText: '',
          source: "",
          ctaText: '',
          ctaLink: '',
          external: false
        }]
      });
    }

    const handleAddslide = () => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards.push({
          header: '',
          storyType: '',
          ctaText: '',
          ctaLink: '',
          external: false,
          imageURL: '',
          imageAlt: '',
          tag: ''
        });
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs.push({
          header: '',
          subtext: '',
          ctaText: '',
          ctaLink: '',
          external: false,
          imageURL: '',
          imageAlt: ''
        });
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb.push({
          leadText: '',
          largeText: '',
          smallText: '',
          source: "",
          ctaText: '',
          ctaLink: '',
          external: false
        });
        props.setAttributes({
          rtb
        });
      }
    };

    const handleRemoveSlide = index => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards.splice(index, 1);
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs.splice(index, 1);
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb.splice(index, 1);
        props.setAttributes({
          rtb
        });
      }
    };

    const handleRemoveImage = index => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].imageURL = "";
        cards[index].imageAlt = "";
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].imageURL = "";
        tabs[index].imageAlt = "";
        props.setAttributes({
          tabs
        });
      }
    };

    const handleChangeCtaText = (ctaText, index) => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].ctaText = ctaText;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].ctaText = ctaText;
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].ctaText = ctaText;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleChangeCtaLink = (ctaLink, index) => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].ctaLink = ctaLink;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].ctaLink = ctaLink;
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].ctaLink = ctaLink;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleChangeExternal = index => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].external = !cards[index].external;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].external = !tabs[index].external;
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].external = !rtb[index].external;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleChangeImage = (img, index) => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].imageURL = img.url;
        cards[index].imageAlt = img.alt;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].imageURL = img.url;
        tabs[index].imageAlt = img.alt;
        props.setAttributes({
          tabs
        });
      }
    };

    const handleChangeHeader = (header, index) => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].header = header;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].header = header;
        props.setAttributes({
          tabs
        });
      }
    };

    const handleChangeSubtext = (subtext, index) => {
      if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        tabs[index].subtext = subtext;
        props.setAttributes({
          tabs
        });
      }
    };

    const handleChangeStoryType = (storyType, index) => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].storyType = storyType;
        props.setAttributes({
          cards
        });
      }
    };

    const handleChangeTag = (tag, index) => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        cards[index].tag = tag;
        props.setAttributes({
          cards
        });
      }
    };

    const handleChangeLeadText = (leadText, index) => {
      if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].leadText = leadText;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleChangeLargeText = (largeText, index) => {
      if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].largeText = largeText;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleChangeSmallText = (smallText, index) => {
      if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].smallText = smallText;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleChangeSource = (source, index) => {
      if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        rtb[index].source = source;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleMoveUp = index => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        let tmp = cards[index];
        cards[index] = cards[index + 1];
        cards[index + 1] = tmp;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        let tmp = tabs[index];
        tabs[index] = tabs[index + 1];
        tabs[index + 1] = tmp;
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        let tmp = rtb[index];
        rtb[index] = rtb[index + 1];
        rtb[index + 1] = tmp;
        props.setAttributes({
          rtb
        });
      }
    };

    const handleMoveDown = index => {
      if (props.attributes.type === "slider") {
        let cards = [...props.attributes.cards];
        let tmp = cards[index];
        cards[index] = cards[index - 1];
        cards[index - 1] = tmp;
        props.setAttributes({
          cards
        });
      } else if (props.attributes.type === "tabs") {
        let tabs = [...props.attributes.tabs];
        let tmp = tabs[index];
        tabs[index] = tabs[index - 1];
        tabs[index - 1] = tmp;
        props.setAttributes({
          tabs
        });
      } else if (props.attributes.type === "rtb") {
        let rtb = [...props.attributes.rtb];
        let tmp = rtb[index];
        rtb[index] = rtb[index - 1];
        rtb[index - 1] = tmp;
        props.setAttributes({
          rtb
        });
      }
    };

    let sidebarFields;

    if (props.attributes.type === "slider" && props.attributes.cards.length > 0) {
      let num = props.attributes.cards.length - 1;
      sidebarFields = props.attributes.cards.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Slides ${index + 1} Details`,
          initialOpen: true
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Media Type",
          value: card.storyType,
          onChange: storyType => handleChangeStoryType(storyType, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Title",
          value: card.header,
          onChange: header => handleChangeHeader(header, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Text",
          value: card.ctaText,
          onChange: ctaText => handleChangeCtaText(ctaText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Link address",
          value: card.ctaLink,
          onChange: ctaLink => handleChangeCtaLink(ctaLink, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
          label: "Open link in new tab?",
          checked: card.external,
          onChange: () => handleChangeExternal(index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Story Tag",
          value: card.tag,
          onChange: tag => handleChangeTag(tag, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
          onSelect: img => handleChangeImage(img, index),
          render: _ref => {
            let {
              open
            } = _ref;
            return card.imageURL !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: 'purdue-blocks-editor-news__preview'
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", {
              className: 'image'
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
              alt: card.imageAlt,
              src: card.imageURL
            })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
              className: 'purdue-blocks-editor-feature-story__button',
              onClick: open
            }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
              className: 'bulma-blocks-editor-site-hero__button purdue-news__remove-image-button',
              onClick: () => handleRemoveImage(index)
            }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: 'purdue-blocks-editor-news__container'
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: 'purdue-blocks-editor-news__description'
            }, "Pick an image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
              className: 'purdue-blocks-editor-feature-story__button',
              onClick: open
            }, "Open Media Library"));
          }
        }))), props.attributes.cards.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.cards.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("b", null, "Reorder this slide:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "") : "", props.attributes.cards.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.cards.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveSlide(index)
        }, "Remove this slide")) : "");
      });
    } else if (props.attributes.type === "tabs" && props.attributes.tabs.length > 0) {
      let num = props.attributes.tabs.length - 1;
      sidebarFields = props.attributes.tabs.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Slides ${index + 1} Details`,
          initialOpen: true
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Text",
          value: card.ctaText,
          onChange: ctaText => handleChangeCtaText(ctaText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Link address",
          value: card.ctaLink,
          onChange: ctaLink => handleChangeCtaLink(ctaLink, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
          label: "Open link in new tab?",
          checked: card.external,
          onChange: () => handleChangeExternal(index)
        })), props.attributes.tabs.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.tabs.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("b", null, "Reorder this slide:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "") : "", props.attributes.tabs.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.tabs.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveSlide(index)
        }, "Remove this slide")) : "");
      });
    } else if (props.attributes.type === "rtb" && props.attributes.rtb.length > 0) {
      let num = props.attributes.rtb.length - 1;
      sidebarFields = props.attributes.rtb.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Slides ${index + 1} Details`,
          initialOpen: true
        }, props.attributes.hasLead ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Lead Text",
          value: card.leadText,
          onChange: leadText => handleChangeLeadText(leadText, index)
        })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Highlighted Text",
          value: card.largeText,
          onChange: largeText => handleChangeLargeText(largeText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Small Text",
          value: card.smallText,
          onChange: smallText => handleChangeSmallText(smallText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Source",
          value: card.source,
          onChange: source => handleChangeSource(source, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Text",
          value: card.ctaText,
          onChange: ctaText => handleChangeCtaText(ctaText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Link address",
          value: card.ctaLink,
          onChange: ctaLink => handleChangeCtaLink(ctaLink, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
          label: "Open link in new tab?",
          checked: card.external,
          onChange: () => handleChangeExternal(index)
        })), props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("b", null, "Reorder this slide:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "") : "", props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveSlide(index)
        }, "Remove this slide")) : "");
      });
    }

    let CustomTag = props.attributes.headerLevel;
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Slider Type",
      help: "Use the rich text on the page editor to edit the full width cards option",
      selected: props.attributes.type,
      options: [{
        label: 'Cards link to stories',
        value: 'slider'
      }, {
        label: 'Full width image and text',
        value: 'tabs'
      }, {
        label: 'RTB cards',
        value: 'rtb'
      }, {
        label: 'Images',
        value: 'img'
      }],
      onChange: type => {
        props.setAttributes({
          type
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose a background",
      value: props.attributes.background,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gray',
        value: 'gray'
      }],
      onChange: background => {
        props.setAttributes({
          background
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Add a header to this region",
      value: props.attributes.header,
      onChange: header => props.setAttributes({
        header
      })
    })), props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Heading level of the Header",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    })) : '', props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Choose how to align the header.",
      selected: props.attributes.headerLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: headerLocation => {
        props.setAttributes({
          headerLocation
        });
      }
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    })), props.attributes.type === "rtb" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add Lead Text above Highlighted Text?",
      checked: props.attributes.hasLead,
      onChange: () => props.setAttributes({
        hasLead: !props.attributes.hasLead
      })
    })) : "", props.attributes.type === "rtb" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose the number of cards to display on desktop.",
      value: props.attributes.displayNumber,
      options: [{
        label: '2',
        value: '2'
      }, {
        label: '3',
        value: '3'
      }, {
        label: '4',
        value: '4'
      }],
      onChange: displayNumber => {
        props.setAttributes({
          displayNumber
        });
      }
    })) : "", props.attributes.type === "img" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose the type of the image.",
      value: props.attributes.imgType,
      options: [{
        label: 'Horizontal',
        value: 'horizontal'
      }, {
        label: 'Vertical',
        value: 'vertical'
      }],
      onChange: imgType => {
        props.setAttributes({
          imgType
        });
      }
    })) : "", props.attributes.type === "img" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Loop the slides?",
      checked: props.attributes.loop,
      onChange: () => props.setAttributes({
        loop: !props.attributes.loop
      })
    })) : "", props.attributes.type === "img" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Link the image to the image file?",
      checked: props.attributes.linkImg,
      onChange: () => props.setAttributes({
        linkImg: !props.attributes.linkImg
      })
    })) : "", props.attributes.type === "rtb" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Include dividers between cards?",
      checked: props.attributes.divider,
      onChange: () => props.setAttributes({
        divider: !props.attributes.divider
      })
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add CTA button?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link text",
      value: props.attributes.linkText,
      onChange: linkText => props.setAttributes({
        linkText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link URL",
      value: props.attributes.linkUrl,
      onChange: linkUrl => props.setAttributes({
        linkUrl
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Choose how to align the CTA.",
      selected: props.attributes.ctaLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: ctaLocation => {
        props.setAttributes({
          ctaLocation
        });
      }
    }))), sidebarFields, props.attributes.type !== "img" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      className: "remove-image-button add-quote",
      onClick: handleAddslide.bind(undefined)
    }, __('Add Another Slide'))) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: "2",
      className: `purdue-block-slider-editor`
    }, props.attributes.cards.length === 1 && props.attributes.cards[0].header === "" && props.attributes.rtb.length === 1 && props.attributes.rtb[0].largeText === "" && props.attributes.tabs.length === 1 && props.attributes.tabs[0].header === "" && props.attributes.type !== "img" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      style: {
        textAlign: 'center'
      }
    }, "Add new items using sidebar.") : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: `purdue-slider
            has-${props.attributes.background}-background section is-medium`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomTag, {
      class: `purdue-slider__header align-${props.attributes.headerLocation}`
    }, " ", props.attributes.header), props.attributes.type === "slider" && props.attributes.cards.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide purdue-slider--default"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__track",
      "data-glide-el": "track"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__slides"
    }, props.attributes.cards.map(card => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "glide__slide card"
      }, card.imageURL ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "image is-2by1 background-image",
        role: "img",
        style: {
          backgroundImage: `url(${card.imageURL})`
        },
        "aria-label": `card.imageAlt`
      }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "content"
      }, card.storyType ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        class: "story-type"
      }, card.storyType) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        class: "story-title"
      }, card.header), card.ctaLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "read-more purdue-blocks__button purdue-blocks__button--gold-light purdue-blocks__button--outline"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, card.ctaText)) : "", card.tag ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        class: "story-tag"
      }, card.tag) : ""));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__bullets",
      "data-glide-el": "controls[nav]"
    }, props.attributes.cards.map((card, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
        class: "glide__bullet",
        "data-glide-dir": index
      });
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__arrows",
      "data-glide-el": "controls"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
      class: "glide__arrow glide__arrow--left",
      "data-glide-dir": "<"
    }, "prev"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
      class: "glide__arrow glide__arrow--right",
      "data-glide-dir": ">"
    }, "next")))) : "", props.attributes.type === "tabs" && props.attributes.tabs.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide purdue-slider--tabs"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__track",
      "data-glide-el": "track"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__slides"
    }, props.attributes.tabs.map((card, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "glide__slide columns"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "column image-column"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
        onSelect: img => handleChangeImage(img, index),
        render: _ref2 => {
          let {
            open
          } = _ref2;
          return card.imageURL !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            class: "image background-image",
            role: "img",
            style: {
              backgroundImage: `url(${card.imageURL})`
            }
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
            className: 'remove-image-button',
            onClick: open
          }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
            className: 'remove-image-button',
            onClick: () => handleRemoveImage(index)
          }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
            className: 'remove-image-button',
            onClick: open
          }, "Open Media Library");
        }
      }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "content column"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
        tagname: "p",
        value: card.header,
        className: 'story-title',
        onChange: header => handleChangeHeader(header, index),
        placeholder: "Header...",
        keepPlaceholderOnFocus: true
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
        tagname: "p",
        value: card.subtext,
        className: 'story-subtext',
        onChange: subtext => handleChangeSubtext(subtext, index),
        placeholder: "Subtext...",
        keepPlaceholderOnFocus: true
      }), card.ctaLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "purdue-blocks__button purdue-blocks__button--gold-light"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, card.ctaText)) : ""));
    })))) : "", props.attributes.type === "rtb" && props.attributes.rtb.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: `glide purdue-slider--rtb${props.attributes.divider ? ' has-divider' : ''}`,
      "data-number": props.attributes.displayNumber
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__track",
      "data-glide-el": "track"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__slides"
    }, props.attributes.rtb.map(card => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "glide__slide"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: `pu-proofpoint ${props.attributes.hasLead ? " pu-proofpoint__has-lead" : ""}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "container"
      }, card.leadText && props.attributes.hasLead ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "lead-text pu-proofpoint__lead"
      }, card.leadText) : "", card.largeText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "large-text pu-proofpoint__highlighted"
      }, card.largeText) : "", card.smallText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "small-text pu-proofpoint__content"
      }, card.smallText) : "", card.source ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "source pu-proofpoint__source"
      }, card.source) : "", card.ctaLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "pu-proofpoint__button purdue-blocks__button purdue-blocks__button--gold-light"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, card.ctaText)) : "")));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__bullets",
      "data-glide-el": "controls[nav]"
    }, props.attributes.rtb.map((card, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
        class: "glide__bullet",
        "data-glide-dir": index
      });
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "glide__arrows",
      "data-glide-el": "controls"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
      class: "glide__arrow glide__arrow--left",
      "data-glide-dir": "<"
    }, "prev"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
      class: "glide__arrow glide__arrow--right",
      "data-glide-dir": ">"
    }, "next")))) : "", props.attributes.type === "img" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      addToGallery: true,
      multiple: true,
      gallery: true,
      onSelect: imgs => {
        props.setAttributes({
          imgs
        });
        console.log(props.attributes.imgs);
      },
      render: _ref3 => {
        let {
          open
        } = _ref3;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "image-slider-editor"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
          onClick: open
        }, props.attributes.imgs.length === 0 ? "Select images" : "Select new images")), props.attributes.imgs.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: `glide purdue-slider--img${props.attributes.loop ? " purdue-slider--img-loop" : ""}${props.attributes.imgType === "vertical" ? "purdue-slider--img-vertical" : ""}`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "glide__track",
          "data-glide-el": "track"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "glide__slides"
        }, props.attributes.imgs.map((img, index) => {
          return props.attributes.linkImg ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
            className: "glide__slide",
            href: img.url,
            target: "_blank"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
            src: img.url,
            alt: img.alt
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figcaption", null, img.caption))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", {
            className: "glide__slide"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
            src: img.url,
            alt: img.alt
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figcaption", null, img.caption));
        }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "glide__bullets",
          "data-glide-el": "controls[nav]"
        }, props.attributes.imgs.map((card, index) => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
            class: "glide__bullet",
            "data-glide-dir": index
          });
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          class: "glide__arrows",
          "data-glide-el": "controls"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
          class: "glide__arrow glide__arrow--left",
          "data-glide-dir": "<"
        }, "prev"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
          class: "glide__arrow glide__arrow--right",
          "data-glide-dir": ">"
        }, "next")))) : "");
      }
    })) : "", props.attributes.hasLink && props.attributes.linkUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `purdue-slider__button-container align-${props.attributes.ctaLocation}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: `purdue-slider__button purdue-blocks__button ${props.attributes.background === "black" ? 'purdue-blocks__button--gold-dark' : 'purdue-blocks__button--gold-light'}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, props.attributes.linkText)))) : "")))];
  }
});

/***/ }),

/***/ "./src/purdue-tabs/block.js":
/*!**********************************!*\
  !*** ./src/purdue-tabs/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import "./editor.scss";
// import "./style.scss";
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  RangeControl,
  CheckboxControl,
  SelectControl,
  Button
} = wp.components;
const {
  RichText,
  InnerBlocks,
  InspectorControls,
  useBlockProps
} = wp.blockEditor;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/tabs", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Tabs"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "ef9c2100-31be-4639-82c5-0ef6f30faf8a",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 71.42857"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "e07d924f-208c-4ad5-884f-434897ed4326",
    "data-name": "Grip-horizontal",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M28.57143,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14286,7.14285H7.14286A7.14374,7.14374,0,0,1,0,29.46429V15.17857A7.14375,7.14375,0,0,1,7.14286,8.03571H21.42857A7.14375,7.14375,0,0,1,28.57143,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14286,7.14286H7.14286A7.14375,7.14375,0,0,1,0,72.32143V58.03571a7.14374,7.14374,0,0,1,7.14286-7.14285H21.42857A7.14374,7.14374,0,0,1,28.57143,58.03571ZM64.28571,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14285,7.14285H42.85714a7.14374,7.14374,0,0,1-7.14285-7.14285V15.17857a7.14375,7.14375,0,0,1,7.14285-7.14286H57.14286A7.14375,7.14375,0,0,1,64.28571,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14285,7.14286H42.85714a7.14375,7.14375,0,0,1-7.14285-7.14286V58.03571a7.14374,7.14374,0,0,1,7.14285-7.14285H57.14286A7.14374,7.14374,0,0,1,64.28571,58.03571ZM100,15.17857V29.46429a7.14374,7.14374,0,0,1-7.14286,7.14285H78.57143a7.14374,7.14374,0,0,1-7.14286-7.14285V15.17857a7.14375,7.14375,0,0,1,7.14286-7.14286H92.85714A7.14375,7.14375,0,0,1,100,15.17857Zm0,42.85714V72.32143a7.14375,7.14375,0,0,1-7.14286,7.14286H78.57143a7.14375,7.14375,0,0,1-7.14286-7.14286V58.03571a7.14374,7.14374,0,0,1,7.14286-7.14285H92.85714A7.14374,7.14374,0,0,1,100,58.03571Z",
    transform: "translate(0 -8.03571)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    numTabs: {
      type: "number",
      default: 0
    },
    headers: {
      type: "array",
      default: []
    },
    headerSize: {
      type: 'string',
      default: 'large'
    },
    addPadding: {
      type: 'boolean',
      default: true
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Add tabs."),
  edit: props => {
    if (props.attributes.numTabs === 0) {
      updateTabs(props, 1, 1);
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Number of Tabs",
      value: props.attributes.numTabs,
      options: [{
        label: '1',
        value: 1
      }, {
        label: '2',
        value: 2
      }, {
        label: '3',
        value: 3
      }, {
        label: '4',
        value: 4
      }, {
        label: '5',
        value: 5
      }, {
        label: '6',
        value: 6
      }],
      onChange: numTabs => {
        updateTabs(props, props.attributes.numTabs, parseInt(numTabs));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Font size of the tabs' header",
      value: props.attributes.headerSize,
      options: [{
        label: 'Large',
        value: 'large'
      }, {
        label: 'Medium',
        value: 'medium'
      }, {
        label: 'Small',
        value: 'small'
      }],
      onChange: headerSize => {
        props.setAttributes({
          headerSize
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add paddings to the panels on desktop?",
      checked: props.attributes.addPadding,
      onChange: () => props.setAttributes({
        addPadding: !props.attributes.addPadding
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-blocks-editor-tabs pu-blocks-tabs${props.attributes.addPadding ? " has-padding" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-blocks-tabs__headers`
    }, props.attributes.headers.map((header, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
        onClick: e => {
          const select = wp.data.select("core/block-editor");
          let innerBlocks = select.getBlock(props.clientId).innerBlocks;
          innerBlocks.forEach(block => {
            block.attributes.aria === header.id ? wp.data.dispatch('core/block-editor').updateBlockAttributes(block.clientId, {
              editorSelected: true
            }) : wp.data.dispatch('core/block-editor').updateBlockAttributes(block.clientId, {
              editorSelected: false
            });
          });
          let headers = [...props.attributes.headers];
          headers.forEach(h => {
            header.id === h.id ? h.active = true : h.active = false;
          });
          props.setAttributes({
            headers
          });
        },
        role: "tab"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
        tagname: "p",
        value: header.text,
        className: `pu-blocks-tabs__header
                        ${props.attributes.headerSize === "medium" ? " pu-blocks-tabs__header-medium" : ""}
                        ${props.attributes.headerSize === "small" ? " pu-blocks-tabs__header-small" : ""}${header.active ? " active" : ""}
                        `,
        onChange: text => {
          let headers = [...props.attributes.headers];
          headers[index].text = text;
          props.setAttributes({
            headers
          });
        },
        placeholder: "Add tab header text"
      }));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      templateLock: "all"
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: `pu-blocks-tabs${props.attributes.addPadding ? " has-padding" : ""}`
    }, blockProps), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-blocks-tabs__headers`
    }, props.attributes.headers.length > 0 ? props.attributes.headers.map(header => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
        id: `header-${header.id}`,
        className: `pu-blocks-tabs__header
                        ${props.attributes.headerSize === "medium" ? " pu-blocks-tabs__header-medium" : ""}
                        ${props.attributes.headerSize === "small" ? " pu-blocks-tabs__header-small" : ""}
                        ${header.active ? " active" : ""}
                      `,
        tagName: "button",
        role: "tab",
        value: header.text,
        "aria-controls": `panel-${header.id}`,
        "aria-selected": `${header.active ? "true" : "false"}`
      });
    }) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null));
  }
});

const updateTabs = (props, oldNum, newNum) => {
  const select = wp.data.select("core/block-editor");
  let innerBlocks = select.getBlock(props.clientId).innerBlocks;
  props.setAttributes({
    numTabs: newNum
  });
  const adding = newNum > oldNum;
  const triedZero = newNum === 0;
  let headers = [...props.attributes.headers];

  if (oldNum === 1 && oldNum === newNum) {
    const firstBlock = (0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.createBlock)("purdue-blocks/tab");
    const id = props.clientId + "-0";
    const firstHeader = {
      id: id,
      text: "",
      active: true
    };
    innerBlocks = [firstBlock];
    headers.push(firstHeader);
    props.setAttributes({
      headers
    });
    wp.data.dispatch("core/block-editor").replaceInnerBlocks(props.clientId, innerBlocks, false);
    wp.data.dispatch('core/block-editor').updateBlockAttributes(select.getBlock(props.clientId).innerBlocks[0].clientId, {
      editorSelected: true,
      selected: true
    });
  } else if (adding && !triedZero) {
    const newToAdd = newNum - oldNum;

    for (let i = 0; i < newToAdd; i++) {
      const newColumn = (0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.createBlock)('purdue-blocks/tab');
      let id = headers[headers.length - 1].id;
      let newN = parseInt(id.substring(id.lastIndexOf("-") + 1)) + 1;
      let newId = id.substring(0, id.lastIndexOf("-") + 1) + newN;
      const header = {
        id: newId,
        text: "",
        active: false
      };
      innerBlocks.push(newColumn);
      headers.push(header);
    }

    props.setAttributes({
      headers
    });
    wp.data.dispatch("core/block-editor").replaceInnerBlocks(props.clientId, innerBlocks, false);
  } else if (!adding && !triedZero) {
    const removingNum = oldNum - newNum;

    for (let i = 0; i < removingNum; i++) {
      innerBlocks.pop();
      headers.pop();
    }

    props.setAttributes({
      headers
    });
    wp.data.dispatch("core/block-editor").replaceInnerBlocks(props.clientId, innerBlocks, false);
  }

  for (let i = 0; i < innerBlocks.length; i++) {
    wp.data.dispatch('core/block-editor').updateBlockAttributes(select.getBlock(props.clientId).innerBlocks[i].clientId, {
      aria: headers[i].id
    });
  }
};

/***/ }),

/***/ "./src/purdue-tabs/purdue-tab/block.js":
/*!*********************************************!*\
  !*** ./src/purdue-tabs/purdue-tab/block.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  SelectControl,
  CheckboxControl
} = wp.components;
const {
  InnerBlocks,
  InspectorControls
} = wp.blockEditor;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add tab content'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/tab', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Tab'),
  // Block title.
  icon: 'welcome-add-page',
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],
  parent: ['purdue-blocks/tabs'],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    aria: {
      type: 'string',
      default: ''
    },
    editorSelected: {
      type: 'boolean',
      default: false
    },
    selected: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false
  },
  // Block description in side panel
  description: __('Edit an tab content.'),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `pu-blocks-tabs__panel${props.attributes.editorSelected ? " active" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false,
      templateInsertUpdatesSelection: false
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `pu-blocks-tabs__panel${props.attributes.editorSelected ? " active" : ""}`,
      "aria-labelledby": `header-${props.attributes.aria}`,
      id: `panel-${props.attributes.aria}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks.Content, null));
  }
});

/***/ }),

/***/ "./src/purdue-vertical-slider/block.js":
/*!*********************************************!*\
  !*** ./src/purdue-vertical-slider/block.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-sortablejs */ "./node_modules/react-sortablejs/dist/index.js");
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./form */ "./src/purdue-vertical-slider/form.js");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/server-side-render */ "@wordpress/server-side-render");
/* harmony import */ var _wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_server_side_render__WEBPACK_IMPORTED_MODULE_3__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  Disabled,
  Placeholder
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps,
  RichText
} = wp.blockEditor;
const {
  useState,
  Fragment
} = wp.element;
const {
  isEmpty
} = _;



/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/purdue-vertical-slider', {
  title: __('Purdue Vertical Slider'),
  description: __('Create a vertical slider. Can only have one on each page. Please edit the subtext through the the page editor after the slide is added.'),
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-ellipsis-h fa-w-12",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"
  })),
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
  * The edit function describes the structure of your block in the context of the editor.
  * This represents what the editor will render when the block is used.
  *
  * The "edit" property must be a valid function.
  *
  * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
  *
  * @param {Object} props Props.
  * @returns {Mixed} JSX Component.
  */
  edit: props => {
    const {
      className,
      setAttributes
    } = props;
    const {
      background,
      tabs,
      id
    } = props.attributes;
    const [addNew, setAddNew] = useState(false);

    const addManualTab = newTab => {
      setAddNew(false);
      setAttributes({
        tabs: [...tabs, ...[newTab]]
      });
    };

    const updateSavedTab = (index, tabData) => {
      // Clone the array first so we can mutate it.
      const newTabs = [...tabs];
      newTabs[index] = tabData;
      setAttributes({
        tabs: newTabs
      });
    };

    const removeItem = identifier => {
      const newTabs = tabs.filter(item => {
        return item.header !== identifier;
      });
      setAttributes({
        tabs: newTabs
      });
    };

    const handleChangeSubtext = (subtext, index) => {
      const newTabs = [...tabs];
      newTabs[index].subtext = subtext;
      setAttributes({
        tabs: newTabs
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose a background",
      value: props.attributes.background,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gray',
        value: 'gray'
      }],
      onChange: background => {
        props.setAttributes({
          background
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
      title: __('Slides')
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_sortablejs__WEBPACK_IMPORTED_MODULE_1__.ReactSortable, {
      list: tabs,
      setList: val => {
        const cardTitles = [],
              valueTitles = [];
        tabs.map(item => cardTitles.push(item.header));
        val.map(item => valueTitles.push(item.header));

        if (_.isEqual(cardTitles, valueTitles)) {
          return;
        }

        setAttributes({
          tabs: val
        });
      },
      className: "sortable-posts"
    }, tabs.map((item, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
        initialOpen: false,
        key: item.header,
        title: item.header
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_form__WEBPACK_IMPORTED_MODULE_2__["default"], {
        initialState: item,
        onSave: val => {
          updateSavedTab(i, val);
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
        style: {
          marginTop: '5px'
        },
        isSecondary: true,
        onClick: () => {
          removeItem(item.header);
        }
      }, "Remove Item"));
    }))), (addNew || tabs.length === 0) && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_form__WEBPACK_IMPORTED_MODULE_2__["default"], {
      onSave: addManualTab
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      isPrimary: true,
      onClick: () => {
        setAddNew(true);
      }
    }, "Add New Slide")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: "2",
      className: `purdue-block-slider-editor`
    }, isEmpty(tabs) ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Placeholder, null, __('Add slides using the sidebar. Please edit the subtext through the the editor after the slide is added.')) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "purdue-slider-vertical has-white-background section is-medium"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "vertical-slides-container"
    }, tabs.map((tab, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        key: index,
        className: `vertical-slide${index === 0 ? " active" : ""}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "columns"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "column image-column"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "image background-image",
        style: {
          backgroundImage: `url(${tab.media.url})`
        },
        "aria-label": tab.media.alt
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "column content"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "content-wrap"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h2", {
        className: "title"
      }, tab.header), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
        tagname: "p",
        value: tab.subtext,
        className: 'subtext',
        onChange: subtext => handleChangeSubtext(subtext, index),
        placeholder: "Subtext...",
        keepPlaceholderOnFocus: true
      }), tab.buttonLink !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "purdue-blocks__button purdue-blocks__button--gold-light"
      }, tab.buttonLabel) : ""))));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "slider-bullets"
    }, tabs.map((tab, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("button", {
        className: `slider-bullet${index === 0 ? " active" : ""}`,
        "data-controls": `${index}`,
        "aria-label": `slide ${index + 1}`,
        onClick: (event, index) => {
          let buttons = event.target.parentElement.querySelectorAll(".slider-bullet");
          buttons.forEach((bullet, i) => {
            bullet.classList.remove("active");
          });
          event.target.classList.add("active");
          let sections = event.target.parentElement.previousSibling.querySelectorAll(".vertical-slide");
          sections.forEach((section, i) => {
            section.style.visibility = "hidden";
            section.style.opacity = 0;
          });
          sections[event.target.dataset.controls].style.visibility = "inherit";
          sections[event.target.dataset.controls].style.opacity = "1";
        }
      });
    })))))];
  }
});

/***/ }),

/***/ "./src/purdue-vertical-slider/form.js":
/*!********************************************!*\
  !*** ./src/purdue-vertical-slider/form.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__);


/**
 * Breaking up edit functionality into a separate component for easier access
 */
const {
  Fragment
} = wp.element;
const {
  MediaUpload
} = wp.blockEditor;
const {
  PanelRow,
  Button,
  TextControl,
  TextareaControl,
  CheckboxControl
} = wp.components;
const {
  useState
} = wp.element;


const LinkForm = _ref => {
  let {
    onSave,
    initialState = {
      header: '',
      media: {
        url: '',
        alt: ''
      },
      subtext: '',
      buttonLabel: '',
      buttonLink: '',
      newtab: false
    }
  } = _ref;
  // Form related controls.
  const [newHeader, updateNewHeader] = useState(initialState.header);
  const [newMedia, updateNewMedia] = useState(initialState.media);
  const [newSubtext, updateNewSubtext] = useState(initialState.subtext);
  const [newButtonLink, updateNewButtonLink] = useState(initialState.buttonLink);
  const [newButtonLabel, updateNewButtonLabel] = useState(initialState.buttonLabel);
  const [newNewtab, updateNewtab] = useState(initialState.newtab);
  const [showNoHeader, updateShowNoHeader] = useState(false);
  let mediaButtonLabel = 'Add Image';

  if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()(newMedia.url)) {
    mediaButtonLabel = 'Replace Image';
  }

  const saveItem = () => {
    if (newHeader.length < 1) {
      updateShowNoHeader(true);
      return;
    }

    const newPost = {
      header: newHeader,
      media: newMedia,
      subtext: newSubtext,
      buttonLink: newButtonLink,
      buttonLabel: newButtonLabel,
      newtab: newNewtab
    };
    onSave(newPost);
  };

  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Fragment, null, showNoHeader && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
    style: {
      color: '#ff5454',
      fontWeight: 'bold'
    }
  }, "Please add a header before saving."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
    label: 'Header',
    onChange: val => {
      if (showNoHeader) {
        updateShowNoHeader(false);
      }

      updateNewHeader(val);
    },
    value: newHeader
  })), !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()(newMedia.url) && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
    src: newMedia.url
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
    onSelect: media => {
      updateNewMedia({
        url: media.url,
        alt: media.alt
      });
    },
    allowedTypes: ['image'],
    render: _ref2 => {
      let {
        open
      } = _ref2;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
        isSecondary: true,
        onClick: open
      }, mediaButtonLabel);
    }
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
    label: 'Button Label',
    onChange: val => {
      updateNewButtonLabel(val);
    },
    value: newButtonLabel
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
    label: 'Button URL',
    type: "url",
    onChange: val => {
      updateNewButtonLink(val);
    },
    value: newButtonLink
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
    label: "Open link in new tab?",
    checked: newNewtab,
    onChange: () => {
      updateNewtab(!newNewtab);
    }
  })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
    isPrimary: true,
    onClick: saveItem
  }, "Save")));
};

/* harmony default export */ __webpack_exports__["default"] = (LinkForm);

/***/ }),

/***/ "./src/rtb-cards/block.js":
/*!********************************!*\
  !*** ./src/rtb-cards/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-up.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-down.js");


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl,
  Button,
  Disabled
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  apiFetch
} = wp;
const {
  useState
} = wp.element;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/rtb-cards', {
  title: __('Reason to believe cards'),
  description: __('Create one or more Reason to believe cards.'),
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "Bookmark",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "color-9c9795",
    d: "M87.5,9.37V100L50,78.12,12.5,100V9.37A9.38,9.38,0,0,1,21.87,0H78.13A9.38,9.38,0,0,1,87.5,9.37Zm-9.37,1.18A1.18,1.18,0,0,0,77,9.37H23.05a1.18,1.18,0,0,0-1.18,1.18V83.68L50,67.27,78.13,83.68Z",
    transform: "translate(-12.5 0)"
  })))),
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
  * The edit function describes the structure of your block in the context of the editor.
  * This represents what the editor will render when the block is used.
  *
  * The "edit" property must be a valid function.
  *
  * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
  *
  * @param {Object} props Props.
  * @returns {Mixed} JSX Component.
  */
  edit: props => {
    if (props.attributes.rtb.length === 0) {
      props.setAttributes({
        rtb: [{
          hasLead: false,
          leadText: '',
          largeText: '',
          smallText: '',
          source: "",
          ctaText: '',
          ctaLink: '',
          external: false
        }]
      });
    }

    const handleAddslide = () => {
      let rtb = [...props.attributes.rtb];
      rtb.push({
        hasLead: false,
        leadText: '',
        largeText: '',
        smallText: '',
        source: "",
        ctaText: '',
        ctaLink: '',
        external: false
      });
      props.setAttributes({
        rtb
      });
    };

    const handleRemoveSlide = index => {
      let rtb = [...props.attributes.rtb];
      rtb.splice(index, 1);
      props.setAttributes({
        rtb
      });
    };

    const handleChangeCtaText = (ctaText, index) => {
      let rtb = [...props.attributes.rtb];
      rtb[index].ctaText = ctaText;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeCtaLink = (ctaLink, index) => {
      let rtb = [...props.attributes.rtb];
      rtb[index].ctaLink = ctaLink;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeExternal = index => {
      let rtb = [...props.attributes.rtb];
      rtb[index].external = !rtb[index].external;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeHasLead = index => {
      let rtb = [...props.attributes.rtb];
      rtb[index].hasLead = !rtb[index].hasLead;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeLeadText = (leadText, index) => {
      let rtb = [...props.attributes.rtb];
      rtb[index].leadText = leadText;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeLargeText = (largeText, index) => {
      let rtb = [...props.attributes.rtb];
      rtb[index].largeText = largeText;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeSmallText = (smallText, index) => {
      let rtb = [...props.attributes.rtb];
      rtb[index].smallText = smallText;
      props.setAttributes({
        rtb
      });
    };

    const handleChangeSource = (source, index) => {
      let rtb = [...props.attributes.rtb];
      rtb[index].source = source;
      props.setAttributes({
        rtb
      });
    };

    const handleMoveUp = index => {
      let rtb = [...props.attributes.rtb];
      let tmp = rtb[index];
      rtb[index] = rtb[index + 1];
      rtb[index + 1] = tmp;
      props.setAttributes({
        rtb
      });
    };

    const handleMoveDown = index => {
      let rtb = [...props.attributes.rtb];
      let tmp = rtb[index];
      rtb[index] = rtb[index - 1];
      rtb[index - 1] = tmp;
      props.setAttributes({
        rtb
      });
    };

    let sidebarFields;

    if (props.attributes.rtb.length > 0) {
      let num = props.attributes.rtb.length - 1;
      sidebarFields = props.attributes.rtb.map((card, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Card ${index + 1} Details`,
          initialOpen: true
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
          label: "Add a lead text at the top?",
          checked: card.hasLead,
          onChange: () => handleChangeHasLead(index)
        })), card.hasLead ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Lead Text",
          value: card.leadText,
          onChange: leadText => handleChangeLeadText(leadText, index)
        })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Highlighted Text",
          value: card.largeText,
          onChange: largeText => handleChangeLargeText(largeText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Small Text",
          value: card.smallText,
          onChange: smallText => handleChangeSmallText(smallText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
          label: "Source",
          value: card.source,
          onChange: source => handleChangeSource(source, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Text",
          value: card.ctaText,
          onChange: ctaText => handleChangeCtaText(ctaText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
          label: "Button Link address",
          value: card.ctaLink,
          onChange: ctaLink => handleChangeCtaLink(ctaLink, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
          label: "Open link in new tab?",
          checked: card.external,
          onChange: () => handleChangeExternal(index)
        })), props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("b", null, "Reorder this card:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_1__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "") : "", props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("hr", null) : "", props.attributes.rtb.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveSlide(index)
        }, "Remove this card")) : "");
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose a background",
      value: props.attributes.background,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gray',
        value: 'gray'
      }],
      onChange: background => {
        props.setAttributes({
          background
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Add a header",
      help: "Add a header to this region.",
      value: props.attributes.header,
      onChange: header => props.setAttributes({
        header
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Choose how to align the header.",
      selected: props.attributes.headerLocation,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: headerLocation => {
        props.setAttributes({
          headerLocation
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Choose the number of clumns to display on desktop.",
      value: props.attributes.columns,
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: '2',
        value: '2'
      }, {
        label: '3',
        value: '3'
      }, {
        label: '4',
        value: '4'
      }, {
        label: '5',
        value: '5'
      }, {
        label: '6',
        value: '6'
      }],
      onChange: columns => {
        props.setAttributes({
          columns
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add divider between columns?",
      checked: props.attributes.divider,
      onChange: () => {
        props.setAttributes({
          divider: !props.attributes.divider
        });
      }
    }))), sidebarFields, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
      className: "remove-image-button add-quote",
      onClick: handleAddslide.bind(undefined)
    }, __('Add Another Card')))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: "2",
      className: `purdue-block-rtb-cards-editor`
    }, props.attributes.rtb.length === 1 && props.attributes.rtb[0].largeText === "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      style: {
        textAlign: 'center'
      }
    }, "Add items using sidebar.") : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: `purdue-rtb-card-container
            has-${props.attributes.background}-background section is-medium`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "container"
    }, props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h2", null, props.attributes.header) : "", props.attributes.rtb.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: `columns${props.attributes.divider ? ' has-divider' : ''}`
    }, props.attributes.rtb.map(card => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: `column${props.attributes.columns === "2" ? " is-half-desktop is-half-tablet is-full-mobile" : ""}
                          ${props.attributes.columns === "3" ? " is-one-third-desktop is-half-tablet is-full-mobile" : ""}
                          ${props.attributes.columns === "4" ? " is-one-quarter-desktop is-half-tablet is-full-mobile" : ""}
                          ${props.attributes.columns === "5" ? " is-one-fifth-desktop is-half-tablet is-full-mobile" : ""}
                          ${props.attributes.columns === "6" ? " is-one-sixth-desktop is-half-tablet is-full-mobile" : ""}
                          `
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: `pu-proofpoint${card.hasLead ? " pu-proofpoint__has-lead" : ""}`
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "container"
      }, card.leadText && card.hasLead ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "lead-text pu-proofpoint__lead"
      }, card.leadText) : "", card.largeText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "large-text pu-proofpoint__highlighted"
      }, card.largeText) : "", card.smallText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "small-text pu-proofpoint__content"
      }, card.smallText) : "", card.source ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "source pu-proofpoint__source"
      }, card.source) : "", card.ctaLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        class: "pu-proofpoint__button purdue-blocks__button purdue-blocks__button--gold-light"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, card.ctaText)) : "")));
    })) : ""))))];
  }
});

/***/ }),

/***/ "./src/shape-separator/block.js":
/*!**************************************!*\
  !*** ./src/shape-separator/block.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  SelectControl
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/shape-separator", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Shape Separator"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    topColor: {
      type: "string",
      default: "black"
    },
    bottomColor: {
      type: "string",
      default: "boiler"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Add a separator section with a downward pointing arrow shape to be placed between two other sections."),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Top Color",
      help: "The color of the arrow shape. This should match the previous section.",
      value: props.attributes.topColor,
      options: [{
        value: 'black',
        label: 'Black'
      }, {
        value: 'white',
        label: 'White'
      }, {
        value: 'lightest',
        label: 'Lightest Digital Gray'
      }, {
        value: 'light',
        label: 'Light Digital Gray'
      }, {
        value: 'medium',
        label: 'Medium Digital Gray'
      }, {
        value: 'steel',
        label: 'Steel(Dark) Gray'
      }, {
        value: 'boiler',
        label: 'Boilermaker Gold'
      }],
      onChange: topColor => {
        props.setAttributes({
          topColor
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Bottom Color",
      help: "The color behind the arrow shape. This should match the following section.",
      value: props.attributes.bottomColor,
      options: [{
        value: 'black',
        label: 'Black'
      }, {
        value: 'white',
        label: 'White'
      }, {
        value: 'lightest',
        label: 'Lightest Digital Gray'
      }, {
        value: 'light',
        label: 'Light Digital Gray'
      }, {
        value: 'medium',
        label: 'Medium Digital Gray'
      }, {
        value: 'steel',
        label: 'Steel(Dark) Gray'
      }, {
        value: 'boiler',
        label: 'Boilermaker Gold'
      }],
      onChange: bottomColor => {
        props.setAttributes({
          bottomColor
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-shape-separator bg-${props.attributes.bottomColor}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-shape-separator--top bg-${props.attributes.topColor}`
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-shape-separator bg-${props.attributes.bottomColor}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-shape-separator--top bg-${props.attributes.topColor}`
    }));
    return returned;
  }
});

/***/ }),

/***/ "./src/sidebar-box/block.js":
/*!**********************************!*\
  !*** ./src/sidebar-box/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-up.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/arrow-down.js");



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  Placeholder,
  Button,
  FormFileUpload,
  SelectControl,
  IconButton,
  Panel,
  PanelBody,
  PanelRow,
  Toolbar,
  BaseControl,
  TextControl,
  RadioControl,
  TextareaControl,
  CheckboxControl
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  RichText,
  useBlockProps
} = wp.blockEditor;
const {
  Component,
  Fragment
} = wp.element;

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Add content'
}]];
registerBlockType('purdue-blocks/sidebar-box', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Sidebar Box'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    title: {
      type: 'string',
      source: 'html',
      selector: '.sidebar-box__title'
    },
    titleLevel: {
      type: 'string',
      default: 'p'
    },
    addMargin: {
      type: 'string',
      default: ''
    },
    linkGroup: {
      type: 'array',
      default: []
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add a box with optional header and CTA buttons.'),
  edit: props => {
    const handleAddLink = () => {
      let linkGroup = [...props.attributes.linkGroup];
      linkGroup.push({
        ctaText: '',
        ctaLink: '',
        external: false
      });
      props.setAttributes({
        linkGroup
      });
    };

    const handleRemoveLink = index => {
      let linkGroup = [...props.attributes.linkGroup];
      linkGroup.splice(index, 1);
      props.setAttributes({
        linkGroup
      });
    };

    const handleChangeCtaText = (ctaText, index) => {
      let linkGroup = [...props.attributes.linkGroup];
      linkGroup[index].ctaText = ctaText;
      props.setAttributes({
        linkGroup
      });
    };

    const handleChangeCtaLink = (ctaLink, index) => {
      let linkGroup = [...props.attributes.linkGroup];
      linkGroup[index].ctaLink = ctaLink;
      props.setAttributes({
        linkGroup
      });
    };

    const handleChangeExternal = index => {
      let linkGroup = [...props.attributes.linkGroup];
      linkGroup[index].external = !linkGroup[index].external;
      props.setAttributes({
        linkGroup
      });
    };

    const handleMoveUp = index => {
      let linkGroup = [...props.attributes.linkGroup];
      let tmp = linkGroup[index];
      linkGroup[index] = linkGroup[index + 1];
      linkGroup[index + 1] = tmp;
      props.setAttributes({
        linkGroup
      });
    };

    const handleMoveDown = index => {
      let linkGroup = [...props.attributes.linkGroup];
      let tmp = linkGroup[index];
      linkGroup[index] = linkGroup[index - 1];
      linkGroup[index - 1] = tmp;
      props.setAttributes({
        linkGroup
      });
    };

    let sidebarFields;

    if (props.attributes.linkGroup.length > 0) {
      let num = props.attributes.linkGroup.length - 1;
      sidebarFields = props.attributes.linkGroup.map((link, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, {
          key: index,
          className: "quote-block-details",
          title: `Link ${index + 1} Details`,
          initialOpen: true
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          label: "Call to action text",
          value: link.ctaText,
          onChange: ctaText => handleChangeCtaText(ctaText, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
          label: "Link address",
          value: link.ctaLink,
          onChange: ctaLink => handleChangeCtaLink(ctaLink, index)
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
          label: "Open link in new tab?",
          checked: link.external,
          onChange: () => handleChangeExternal(index)
        })), props.attributes.linkGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null) : "", props.attributes.linkGroup.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h3", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("b", null, "Reorder this Link:")), index < num ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveUp(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"]
        }) : "", index > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button move-quote',
          onClick: () => handleMoveDown(index),
          icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__["default"]
        }) : "") : "", props.attributes.linkGroup.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("hr", null) : "", props.attributes.linkGroup.length > 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'remove-image-button remove-quote',
          onClick: () => handleRemoveLink(index)
        }, "Remove this Link")) : "");
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, {
      key: "1"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading level of the Header",
      value: props.attributes.titleLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: titleLevel => {
        props.setAttributes({
          titleLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add margin below?",
      checked: props.attributes.addMargin,
      onChange: () => props.setAttributes({
        addMargin: !props.attributes.addMargin
      })
    }))), sidebarFields, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, props.attributes.linkGroup.length === 0 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: "remove-image-button add-quote",
      onClick: handleAddLink.bind(undefined)
    }, __('Add A CTA Link')) : "", props.attributes.linkGroup.length > 0 && props.attributes.linkGroup.length < 5 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
      className: "remove-image-button add-quote",
      onClick: handleAddLink.bind(undefined)
    }, __('Add Another CTA Link')) : "")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      key: "2",
      className: `purdue-block-sidebar-box-editor purdue-block-sidebar-box${props.attributes.addMargin ? " purdue-block-sidebar-box--margin" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagname: props.setAttributes.titleLevel,
      value: props.attributes.title,
      className: 'sidebar-box__title',
      onChange: text => {
        props.setAttributes({
          title: text
        });
      },
      placeholder: "Add Title",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `sidebar-box__content`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    })), props.attributes.linkGroup.length > 0 ? props.attributes.linkGroup.map((link, index) => {
      return link.ctaLink !== "" || link.ctaText !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        key: index,
        className: "sidebar-box__link components-disabled",
        href: link.ctaLink,
        target: `${link.external ? "_blank" : "_self"}`,
        rel: "noopener noreferrer"
      }, link.ctaText) : "";
    }) : "")];
  },
  save: props => {
    const blockProps = useBlockProps.save();
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `purdue-block-sidebar-box${props.attributes.addMargin ? " purdue-block-sidebar-box--margin" : ""}`
    }), props.attributes.title ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'sidebar-box__title',
      tagName: props.attributes.titleLevel,
      value: props.attributes.title
    }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'sidebar-box__content'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null)), props.attributes.linkGroup.length > 0 ? props.attributes.linkGroup.map((link, index) => {
      return link.ctaLink !== "" || link.ctaText !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        key: index,
        className: "sidebar-box__link",
        href: link.ctaLink,
        target: `${link.external ? "_blank" : "_self"}`,
        rel: "noopener noreferrer"
      }, link.ctaText) : "";
    }) : "");
  }
});

/***/ }),

/***/ "./src/sidebar-cta/block.js":
/*!**********************************!*\
  !*** ./src/sidebar-cta/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import "./editor.scss";
// import "./style.scss";
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextControl,
  Button,
  CheckboxControl,
  RadioControl,
  ToolbarGroup
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  BlockControls,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/sidebar-cta", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Right Column - Sidebar CTA"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 97.47"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Arrow-right",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M47.47,2.84a5.34,5.34,0,0,1,7.57,0L98.43,46.21a5.34,5.34,0,0,1,0,7.56L55,97.16a5.34,5.34,0,0,1-7.57,0l-4.95-5a5.35,5.35,0,0,1,.09-7.65L69.5,58.93H5.36A5.35,5.35,0,0,1,0,53.57V46.43a5.35,5.35,0,0,1,5.36-5.36H69.5L42.61,15.45a5.31,5.31,0,0,1-.09-7.65Z",
    transform: "translate(0 -1.27)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    backgroundColor: {
      type: "string",
      default: "white"
    },
    header: {
      type: 'string',
      source: 'html',
      selector: 'p.header'
    },
    content: {
      type: 'string',
      source: 'html',
      selector: 'p.content'
    },
    ctaText: {
      type: 'string',
      source: 'html',
      selector: 'a.cta-button'
    },
    ctaUrl: {
      type: "string",
      default: ""
    },
    external: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Use this block to add a CTA card on the sidebar."),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Background Color",
      help: "Choose to background color of the proofpoint.",
      selected: props.attributes.backgroundColor,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Black',
        value: 'black'
      }, {
        label: 'Gray',
        value: 'gray'
      }],
      onChange: option => {
        props.setAttributes({
          backgroundColor: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", null, "Button Link settings"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link URL",
      value: props.attributes.ctaUrl,
      onChange: ctaUrl => props.setAttributes({
        ctaUrl
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `purdue-blocks-sidebar-cta${props.attributes.backgroundColor === "black" ? ' purdue-blocks-sidebar-cta-black' : ''}
      ${props.attributes.backgroundColor === "gray" ? ' purdue-blocks-sidebar-cta-gray' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagname: "p",
      value: props.attributes.header,
      className: 'header',
      onChange: text => {
        props.setAttributes({
          header: text
        });
      },
      placeholder: "Add Header Text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagname: "p",
      value: props.attributes.content,
      className: 'content',
      onChange: text => {
        props.setAttributes({
          content: text
        });
      },
      placeholder: "Add Content Text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagname: "a",
      value: props.attributes.ctaText,
      className: 'cta-button',
      onChange: text => {
        props.setAttributes({
          ctaText: text
        });
      },
      placeholder: "Add Button Text",
      keepPlaceholderOnFocus: true,
      allowedFormats: []
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `purdue-blocks-sidebar-cta${props.attributes.backgroundColor === "black" ? ' purdue-blocks-sidebar-cta-black' : ''}
      ${props.attributes.backgroundColor === "gray" ? ' purdue-blocks-sidebar-cta-gray' : ''}`
    }), props.attributes.header ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'header',
      tagName: "p",
      value: props.attributes.header
    }) : '', props.attributes.content ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: 'content',
      tagName: "p",
      value: props.attributes.content
    }) : '', props.attributes.ctaUrl || props.attributes.ctaText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.ctaUrl,
      className: "cta-button",
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText) : "");
    return returned;
  }
});

/***/ }),

/***/ "./src/site-hero/block.js":
/*!********************************!*\
  !*** ./src/site-hero/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/**
 * WordPress dependencies
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  Button,
  ToggleControl,
  Disabled
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  dispatch,
  select
} = wp.data;
const category = {
  slug: 'purdue-blocks',
  title: __('Purdue Blocks')
};
const currentCategories = select('core/blocks').getCategories().filter(item => item.slug !== category.slug);
dispatch('core/blocks').setCategories([category, ...currentCategories]); // Array of social media share options.

const socials = [{
  faSlug: 'facebook-f',
  name: 'Facebook',
  share: 'https://www.facebook.com/sharer/sharer.php?u='
}, {
  faSlug: 'twitter',
  name: 'Twitter',
  share: 'https://twitter.com/intent/tweet?url='
}, {
  faSlug: 'linkedin-in',
  name: 'LinkedIn',
  share: 'https://www.linkedin.com/shareArticle?mini=true&url='
}];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/site-hero', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Site Hero'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "color-d9ab28",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    pageTitle: {
      type: 'string',
      default: ''
    },
    subText: {
      type: 'string'
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    includeSocial: {
      type: 'boolean'
    },
    includeButton: {
      type: 'boolean'
    },
    anchor: {
      type: 'string',
      default: ''
    },
    styleToggle: {
      type: 'boolean',
      default: false
    },
    checkedSocials: {
      type: 'object',
      default: {}
    },
    currUrl: {
      type: 'string',
      default: ''
    },
    align: {
      type: 'string',
      default: 'left'
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    ctaText1: {
      type: 'string',
      default: ''
    },
    ctaUrl1: {
      type: 'string',
      default: ''
    },
    external1: {
      type: 'boolean',
      default: false
    },
    ctaText2: {
      type: 'string',
      default: ''
    },
    ctaUrl2: {
      type: 'string',
      default: ''
    },
    external2: {
      type: 'boolean',
      default: false
    },
    mediaType: {
      type: 'string',
      default: 'image'
    },
    mediaTitle: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false
  },
  // Block description in side panel
  description: __('This block should be used at the top of the page. Choose a page title, intro copy, an image, and whether to include social media share buttons.'),
  edit: props => {
    const titleField = document.querySelector('#siteHeroTitleInput');
    const titleFieldIsFocused = document.activeElement === titleField;

    if (props.attributes.currUrl === '') {
      props.setAttributes({
        currUrl: select('core/editor').getPermalink()
      });
    }

    if (props.attributes.pageTitle === '' && !titleFieldIsFocused) {
      props.setAttributes({
        pageTitle: select('core/editor').getCurrentPost().title
      });
    }

    const checkedSocials = props.attributes.checkedSocials;

    const setChecked = () => {
      if (props.attributes.includeSocial) {
        props.setAttributes({
          includeSocial: false
        });
      } else {
        props.setAttributes({
          includeSocial: true
        });
      }
    };

    const setButtonChecked = () => {
      if (props.attributes.includeButton) {
        props.setAttributes({
          includeButton: false
        });
      } else {
        props.setAttributes({
          includeButton: true
        });
      }
    };

    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Hero Style",
      selected: props.attributes.styleToggle ? '4060' : '5050',
      options: [{
        label: '50/50',
        value: '5050'
      }, {
        label: '40/60',
        value: '4060'
      }],
      onChange: option => {
        props.setAttributes({
          styleToggle: option === '4060'
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Text Position",
      selected: props.attributes.align,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: align => {
        props.setAttributes({
          align
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add CTA links?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Call to action text for first button",
      value: props.attributes.ctaText1,
      onChange: ctaText1 => props.setAttributes({
        ctaText1
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "First button link address",
      value: props.attributes.ctaUrl1,
      onChange: ctaUrl1 => props.setAttributes({
        ctaUrl1
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Open link of the first button in new tab?",
      checked: props.attributes.external1,
      onChange: () => props.setAttributes({
        external1: !props.attributes.external1
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Call to action text for second button",
      value: props.attributes.ctaText2,
      onChange: ctaText2 => props.setAttributes({
        ctaText2
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Second button link address",
      value: props.attributes.ctaUrl2,
      onChange: ctaUrl2 => props.setAttributes({
        ctaUrl2
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Open link of the second button in new tab?",
      checked: props.attributes.external2,
      onChange: () => props.setAttributes({
        external2: !props.attributes.external2
      })
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Include Social Share Links",
      help: "Would you like to include links to share this site on social media?",
      checked: props.attributes.includeSocial,
      onChange: setChecked
    })), props.attributes.includeSocial ? socials.map(_ref => {
      let {
        faSlug,
        name
      } = _ref;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
        label: name,
        checked: checkedSocials[faSlug],
        onChange: check => {
          if (check) {
            checkedSocials[faSlug] = true;
          } else {
            delete checkedSocials[faSlug];
          }

          props.setAttributes({
            includeSocial: true,
            checkedSocials: { ...checkedSocials
            }
          });
        }
      });
    }) : ''), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Include a Jump to Article button",
      help: "Would you like to include a Jump to Article button?",
      checked: props.attributes.includeButton,
      onChange: setButtonChecked
    })), props.attributes.includeButton ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "ID of the element the button will jump to",
      value: props.attributes.anchor,
      onChange: anchor => props.setAttributes({
        anchor
      })
    })) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'bulma-blocks-editor-site-hero'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, "Add Page Title"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("input", {
      value: props.attributes.pageTitle,
      className: "input",
      id: "siteHeroTitleInput",
      type: "text",
      placeholder: "Page Title...",
      onChange: e => {
        props.setAttributes({
          pageTitle: e.target.value
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, "Add Intro Copy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("textarea", {
      value: props.attributes.subText !== '' ? props.attributes.subText : '',
      className: "textarea",
      placeholder: "Add intro copy here...",
      onChange: e => {
        props.setAttributes({
          subText: e.target.value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, "Choose a Hero Image or Video"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      onSelect: img => {
        console.log(img);
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt,
          mediaType: img.type,
          mediaTitle: img.title
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return props.attributes.imgUrl !== '' ? props.attributes.mediaType === "image" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Select a New image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove image")) : props.attributes.mediaType === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("video", {
          muted: true,
          playsinline: "",
          src: props.attributes.imgUrl
        }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Select a New Video"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeMedia
        }, "Remove Video")) : "" : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
          className: 'bulma-blocks-editor-site-hero__description'
        }, "Pick an image or video from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Open Media Library"));
      }
    }))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const returned = !props.attributes.styleToggle ? // 50/50 Hero
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `bulma-blocks-50-50-hero${props.attributes.align === "right" ? " reversed-alignment" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "hero is-medium"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h1", null, props.attributes.pageTitle || select('core/editor').getCurrentPost().title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, props.attributes.subText), props.attributes.hasLink && (props.attributes.ctaText1 || props.attributes.ctaText2) ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "cta-button-container"
    }, props.attributes.ctaText1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "purdue-blocks__button purdue-blocks__button--gold-dark",
      href: props.attributes.ctaUrl1,
      target: props.attributes.external1 ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText1) : "", props.attributes.ctaText2 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "purdue-blocks__button purdue-blocks__button--gold-dark purdue-blocks__button--outline",
      href: props.attributes.ctaUrl2,
      target: props.attributes.external2 ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText2) : "") : "", props.attributes.includeSocial ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "level is-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "level-left"
    }, Object.keys(props.attributes.checkedSocials).map(faSlug => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "level-item"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        target: "_blank",
        rel: "noopener noreferrer",
        href: `${socials.find(item => item.faSlug === faSlug).share}${props.attributes.currUrl || select('core/editor').getPermalink()}`,
        className: "icon"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("i", {
        className: `fab fa-lg fa-${faSlug}`
      })));
    }))) : '', props.attributes.includeButton && props.attributes.anchor ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      href: `#${props.attributes.anchor}`,
      className: "jump-button"
    }, "jump to articles ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("i", {
      className: "fas fa-arrow-down",
      "aria-hidden": "true"
    })) : ''))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "hero-image"
    }, props.attributes.mediaType === "image" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "background-image",
      role: `${props.attributes.altText ? "img" : ""}`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }) : "", props.attributes.mediaType === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("video", {
      muted: "",
      title: props.attributes.mediaTitle,
      loop: "",
      autoplay: "",
      playsinline: "",
      src: props.attributes.imgUrl
    }) : ""))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `bulma-blocks-40-60-hero${props.attributes.align === "right" ? " reversed-alignment" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "hero is-medium"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h1", null, props.attributes.pageTitle || select('core/editor').getCurrentPost().title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, props.attributes.subText), props.attributes.hasLink && (props.attributes.ctaText1 || props.attributes.ctaText2) ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "cta-button-container"
    }, props.attributes.ctaText1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "purdue-blocks__button purdue-blocks__button--gold-light",
      href: props.attributes.ctaUrl1,
      target: props.attributes.external1 ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText1) : "", props.attributes.ctaText2 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "purdue-blocks__button purdue-blocks__button--gold-light purdue-blocks__button--outline",
      href: props.attributes.ctaUrl2,
      target: props.attributes.external2 ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText2) : "") : "", props.attributes.includeSocial ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "level is-mobile"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "level-left"
    }, Object.keys(props.attributes.checkedSocials).map(faSlug => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "level-item"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        target: "_blank",
        rel: "noopener noreferrer",
        href: `${socials.find(item => item.faSlug === faSlug).share}${props.attributes.currUrl || select('core/editor').getPermalink()}`,
        className: "icon"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("i", {
        className: `fab fa-lg fa-${faSlug}`
      })));
    }))) : '', props.attributes.includeButton && props.attributes.anchor ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      href: `#${props.attributes.anchor}`,
      className: "jump-button"
    }, "jump to articles ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("i", {
      className: "fas fa-arrow-down",
      "aria-hidden": "true"
    })) : ''))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "shadow"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "hero-image"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "background-image",
      role: `${props.attributes.altText ? "img" : ""}`,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.altText
    }))));
    return returned;
  }
});

/***/ }),

/***/ "./src/story-line/block.js":
/*!*********************************!*\
  !*** ./src/story-line/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextareaControl,
  TextControl,
  Button,
  RadioControl,
  CheckboxControl,
  SelectControl,
  Disabled
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks
} = wp.blockEditor;
const {
  RawHTML
} = wp.element;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Body content copy'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/story-line', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Storyline'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 68.75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "lightbulb",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "cls-2",
    d: "M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z",
    transform: "translate(-15.62)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    storyTitle: {
      type: 'string',
      source: 'html',
      selector: '.story-title'
    },
    backgroundColor: {
      type: 'string',
      default: 'white'
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    imageAlign: {
      type: 'string',
      default: 'left'
    },
    contentAlign: {
      type: 'string',
      default: 'bottom'
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    ctaUrl: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    headerLevel: {
      type: 'string',
      default: 'h2'
    },
    addPaddingTop: {
      type: 'boolean',
      default: false
    },
    addPaddingBottom: {
      type: 'boolean',
      default: false
    },
    backgroundImageUrl: {
      type: 'string',
      default: ''
    },
    addExtraLineTop: {
      type: 'boolean',
      default: false
    },
    id: {
      type: 'string',
      default: ''
    },
    type: {
      type: 'string',
      default: 'image'
    },
    youtubeTitle: {
      type: 'string',
      default: ''
    },
    youtubeURL: {
      type: 'string',
      default: ''
    },
    uploadURL: {
      type: 'string',
      default: ''
    },
    uploadTitle: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false
  },
  // Block description in side panel
  description: __('This block adds a storyline row on the page.'),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: '',
        altText: '',
        uploadURL: '',
        uploadTitle: ''
      });
    };

    if (props.attributes.backgroundColor === 'dark') {
      props.setAttributes({
        backgroundImageUrl: file_data.concreteDark_url
      });
    } else {
      props.setAttributes({
        backgroundImageUrl: ''
      });
    }

    const videoId = getVideoId(props.attributes.youtubeURL);
    const iframeMarkup = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("iframe", {
      id: videoId,
      class: "storyline-youtube",
      title: props.attributes.youtubeTitle,
      src: `https://www.youtube.com/embed/${videoId}`,
      frameborder: "0",
      allowfullscreen: true
    }); // const youtubeurl=`https://www.youtube.com/embed/${videoId}`;
    // const iframeMarkup = `[iframe id=${videoId} title={props.attributes.youtubeTitle } src=${youtubeurl} frameborder="0" allow="fullscreen"]`;

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "HTML Anchor",
      help: "Enter a word without spaces to make a unique web address just for this block, called an \u201Canchor.\u201D It must be unique from any other anchors on the page. Then, you\u2019ll be able to link directly to this section of your page.",
      value: props.attributes.id,
      onChange: id => props.setAttributes({
        id
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Background Color",
      help: "Choose the background color.",
      selected: props.attributes.backgroundColor,
      options: [{
        label: 'White',
        value: 'white'
      }, {
        label: 'Light Gray',
        value: 'gray'
      }, {
        label: 'Dark',
        value: 'dark'
      }, {
        label: 'Transparent on Dark Background',
        value: 'tDark'
      }, {
        label: 'Transparent on Lignt Background',
        value: 'tLight'
      }],
      onChange: option => {
        props.setAttributes({
          backgroundColor: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Media Type",
      help: "Choose between image, upload video, or Youtube video.",
      selected: props.attributes.type,
      options: [{
        label: 'Image',
        value: 'image'
      }, {
        label: 'Upload Video',
        value: 'upload'
      }, {
        label: 'Youtube Video',
        value: 'youtube'
      }],
      onChange: type => {
        props.setAttributes({
          type
        });
      }
    })), props.attributes.type === "youtube" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Youtube video URL",
      value: props.attributes.youtubeURL,
      onChange: youtubeURL => props.setAttributes({
        youtubeURL
      })
    })) : "", props.attributes.type === "youtube" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Youtube Video Title",
      value: props.attributes.youtubeTitle,
      onChange: youtubeTitle => {
        props.setAttributes({
          youtubeTitle
        });
      }
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Media Alignment",
      help: "Choose to place the media to the left or right.",
      selected: props.attributes.imageAlign,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: option => {
        props.setAttributes({
          imageAlign: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RadioControl, {
      label: "Content Alignment",
      help: "Choose to align the content to the bottom of the image when it's short or the center of the image when it's tall.",
      selected: props.attributes.contentAlign,
      options: [{
        label: 'Bottom',
        value: 'bottom'
      }, {
        label: 'Center',
        value: 'center'
      }],
      onChange: option => {
        props.setAttributes({
          contentAlign: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      label: "Heading Level of the Header",
      help: "This only changes the HTML tag. The styles will stay the same.",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add a CTA link?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.ctaText,
      onChange: ctaText => props.setAttributes({
        ctaText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.ctaUrl,
      onChange: ctaUrl => props.setAttributes({
        ctaUrl
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(TextareaControl, {
      label: "Featured Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add padding above guide line?",
      checked: props.attributes.addPaddingTop,
      onChange: checked => props.setAttributes({
        addPaddingTop: checked
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add padding below top guide line on mobile?",
      checked: props.attributes.addExtraLineTop,
      onChange: checked => props.setAttributes({
        addExtraLineTop: checked
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Add padding below guide line?",
      checked: props.attributes.addPaddingBottom,
      onChange: checked => props.setAttributes({
        addPaddingBottom: checked
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `purdue-blocks-storyline purdue-blocks-editor-storyline
        ${props.attributes.addExtraLineTop && !props.attributes.addPaddingTop ? ` purdue-blocks-storyline-top-line` : ''}
        ${props.attributes.addPaddingTop ? ` purdue-blocks-storyline-top-space` : ''}
        ${props.attributes.addPaddingBottom ? ` purdue-blocks-storyline-bottom-space` : ''}
        ${props.attributes.backgroundColor === "gray" ? ` purdue-blocks-storyline-gray` : ''}
        ${props.attributes.backgroundColor === "dark" ? ` purdue-blocks-storyline-dark` : ''}
        ${props.attributes.backgroundColor === "white" ? ` purdue-blocks-storyline-white` : ''}
        ${props.attributes.backgroundColor === "tDark" ? ` purdue-blocks-storyline-tDark` : ''}
        `,
      style: {
        backgroundImage: `url(${props.attributes.backgroundColor === "dark" ? props.attributes.backgroundImageUrl : ""})`
      },
      "aria-label": ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `container`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `columns is-multiline${props.attributes.imageAlign === 'left' ? '' : ' columns-reversed'}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `column is-half-desktop is-half-tablet is-full-mobile`
    }, props.attributes.type === "youtube" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, iframeMarkup) : props.attributes.type === "image" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: `image-container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
          className: 'image',
          src: props.attributes.imgUrl,
          alt: props.attributes.altText
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "image-buttons"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button',
          onClick: open
        }, props.attributes.imgUrl !== '' ? 'Select a new image' : 'Select an image'), props.attributes.imgUrl ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button',
          onClick: removeMedia
        }, "Remove image") : ""));
      }
    })) : props.attributes.type === "upload" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MediaUpload, {
      onSelect: video => {
        props.setAttributes({
          uploadURL: video.url,
          uploadTitle: video.title
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: `image-container`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("video", {
          muted: true,
          playsinline: "",
          title: props.attributes.uploadTitle,
          src: props.attributes.uploadURL
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "image-buttons"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button',
          onClick: open
        }, props.attributes.uploadURL !== '' ? 'Select a new Video' : 'Select an Video'), props.attributes.uploadURL ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Button, {
          className: 'remove-image-button',
          onClick: removeMedia
        }, "Remove Video") : ""));
      }
    })) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `column is-half-desktop is-half-tablet is-full-mobile${props.attributes.contentAlign === 'bottom' ? ' column-align-bottom' : ''}${props.attributes.contentAlign === 'center' ? ' column-align-center' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "content-container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
      tagName: props.attributes.headerLevel,
      value: props.attributes.storyTitle,
      className: 'story-title',
      onChange: storyTitle => {
        props.setAttributes({
          storyTitle
        });
      },
      placeholder: "Add header",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    }), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", null, props.attributes.ctaText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "read-more-button-icon"
    })) : '')))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const videoId = getVideoId(props.attributes.youtubeURL); // const iframeMarkup = <iframe id={videoId} class="storyline-youtube" title={props.attributes.youtubeTitle } src={`https://www.youtube.com/embed/${videoId}`} frameborder="0" allowfullscreen></iframe>;

    const youtubeurl = `https://www.youtube.com/embed/${videoId}`;
    const iframeMarkup = `[iframe id=${videoId} title=${props.attributes.youtubeTitle} src=${youtubeurl} frameborder="0" allow="fullscreen"]`;
    const url = `url(${props.attributes.backgroundImageUrl})`;
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      id: props.attributes.id ? props.attributes.id : null,
      className: `purdue-blocks-storyline
        ${props.attributes.addExtraLineTop ? ` purdue-blocks-storyline-top-line` : ''}
        ${props.attributes.addPaddingTop ? ` purdue-blocks-storyline-top-space` : ''}
        ${props.attributes.addPaddingBottom ? ` purdue-blocks-storyline-bottom-space` : ''}
        ${props.attributes.backgroundColor === "gray" ? ` purdue-blocks-storyline-gray` : ''}
        ${props.attributes.backgroundColor === "dark" ? ` purdue-blocks-storyline-dark` : ''}
        ${props.attributes.backgroundColor === "white" ? ` purdue-blocks-storyline-white` : ''}
        ${props.attributes.backgroundColor === "tDark" ? ` purdue-blocks-storyline-tDark` : ''}
        `,
      style: {
        backgroundImage: `${props.attributes.backgroundColor === "dark" ? url : "none"}`
      },
      "aria-label": ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `container`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `columns is-multiline${props.attributes.imageAlign === 'left' ? '' : ' columns-reversed'}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `column is-half-desktop is-half-tablet is-full-mobile`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `image-container`
    }, props.attributes.imgUrl && props.attributes.type === "image" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
      className: 'image',
      src: props.attributes.imgUrl,
      alt: props.attributes.altText
    }) : "", props.attributes.youtubeURL && props.attributes.type === "youtube" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      class: "iframe-container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, iframeMarkup)) : "", props.attributes.uploadURL && props.attributes.type === "upload" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("video", {
      controls: true,
      playsinline: "",
      src: props.attributes.uploadURL,
      title: props.attributes.uploadTitle
    }) : "")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `column is-half-desktop is-half-tablet is-full-mobile${props.attributes.contentAlign === 'bottom' ? ' column-align-bottom' : ''}${props.attributes.contentAlign === 'center' ? ' column-align-center' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `content-container`
    }, props.attributes.storyTitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText.Content, {
      tagName: props.attributes.headerLevel,
      value: props.attributes.storyTitle,
      className: 'story-title'
    }) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerBlocks.Content, null), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      className: "read-more-button",
      href: props.attributes.ctaUrl,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, props.attributes.ctaText, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "read-more-button-icon"
    })) : "")))));
    return returned;
  }
});

function getVideoId(url) {
  const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
  const match = url === null || url === void 0 ? void 0 : url.match(regExp);
  return match && match[2].length === 11 ? match[2] : null;
}

/***/ }),

/***/ "./src/testimonial/block.js":
/*!**********************************!*\
  !*** ./src/testimonial/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  SelectControl
} = wp.components;
const {
  InspectorControls
} = wp.blockEditor;
const {
  withSelect
} = wp.data; // Array of social media share options.

/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/testimonial', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Testimonial'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 68.75 100"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    id: "lightbulb",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    class: "color-d9ab28",
    d: "M84.38,34.38A34.21,34.21,0,0,1,75.87,57c-3.25,3.71-8.35,11.49-10.24,18H56.26v0a11,11,0,0,1,.43-2.79A61.73,61.73,0,0,1,68.82,50.81a25,25,0,1,0-37.64,0A61.7,61.7,0,0,1,43.33,72.23,9.49,9.49,0,0,1,43.74,75v0H34.37c-1.89-6.51-7-14.29-10.24-18A34.37,34.37,0,1,1,84.38,34.38ZM53.12,18.75A3.12,3.12,0,0,1,50,21.88a12.51,12.51,0,0,0-12.5,12.5,3.13,3.13,0,0,1-6.25,0A18.77,18.77,0,0,1,50,15.63,3.11,3.11,0,0,1,53.12,18.75ZM34.38,81.25H65.62v8.43a3.11,3.11,0,0,1-.52,1.73L60.3,98.6a3.1,3.1,0,0,1-2.6,1.4H42.3a3.1,3.1,0,0,1-2.6-1.4l-4.79-7.19a3.11,3.11,0,0,1-.52-1.73Z",
    transform: "translate(-15.62)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    posts: {
      type: 'array',
      default: []
    },
    selectedPosts: {
      type: 'array',
      default: []
    }
  },
  // Block description in side panel
  description: __('This block adds a row of one or two testimonials to your page. It pulls from testimonial posts from this site and requires the installation of acf-to-rest-api to work.'),
  edit: withSelect(select => {
    const posts = wp.data.select('core').getEntityRecords('postType', 'test_post', {
      per_page: -1,
      _embed: true
    });
    return {
      posts
    };
  })(props => {
    const {
      posts
    } = props;

    if (!posts) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "pu-blocks-editor-testimonial"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        className: "error-message"
      }, "loading.."));
    }

    if (posts.length === 0) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "pu-blocks-editor-testimonial"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
        className: "error-message"
      }, "No testimonial posts"));
    }

    posts.map(post => {
      post.img = post._embedded['wp:featuredmedia'][0];
    });
    props.setAttributes({
      posts: posts
    });
    const options = [];

    for (let i = 0; i < posts.length; i++) {
      const option = {
        value: posts[i].id,
        label: posts[i].title.rendered
      };
      options.push(option);
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SelectControl, {
      multiple: true,
      label: __('Select one or two testimonials:'),
      value: props.attributes.selectedPosts // e.g: value = [ 'a', 'c' ]
      ,
      onChange: selectedPosts => {
        if (selectedPosts.length <= 2) {
          props.setAttributes({
            selectedPosts
          });
        } else {
          props.setAttributes({
            selectedPosts: selectedPosts.slice(0, 2)
          });
        }
      },
      options: options
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "pu-blocks-editor-testimonial"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "testimonial__section container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h2", null, "Testimonials"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "testimonial__list columns"
    }, props.attributes.posts.map(post => {
      if (props.attributes.selectedPosts && props.attributes.selectedPosts.length > 0) {
        return props.attributes.selectedPosts.map(selectedPost => {
          if (post.id == selectedPost) {
            return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "column"
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "testimonial__item"
            }, props.attributes.selectedPosts.length === 2 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "testimonial__body testimonial__body--small"
            }, post.img ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
              src: post.img.source_url,
              alt: post.img.alt_text
            }) : '', !post.excerpt.raw ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__content"
            }, "\"", post.content.raw.replace(/<!--(?!>)[\S\s]*?-->/g, '').replace(/(<([^>]+)>)/ig, ''), "\"") : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__content"
            }, "\"", post.excerpt.raw, "\""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__name"
            }, post.acf.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__info"
            }, post.acf.persons_information)) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "testimonial__body testimonial__body--big"
            }, post.img ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
              src: post.img.source_url,
              alt: post.img.alt_text
            }) : '', !post.excerpt.raw ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__content"
            }, "\"", post.content.raw.replace(/<!--(?!>)[\S\s]*?-->/g, '').replace(/(<([^>]+)>)/ig, ''), "\"") : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__content"
            }, "\"", post.excerpt.raw, "\""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__name"
            }, post.acf.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__info"
            }, post.acf.persons_information)))); // } )
          }
        });
      }
    }))))];
  }),

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const posts = props.attributes.posts;
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "pu-blocks-testimonial"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "testimonial__section container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("h2", null, "Testimonials"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "testimonial__list columns is-multiline"
    }, posts.map(post => {
      if (props.attributes.selectedPosts && props.attributes.selectedPosts.length > 0) {
        return props.attributes.selectedPosts.map(selectedPost => {
          if (post.id == selectedPost) {
            if (props.attributes.selectedPosts.length === 2) {
              return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
                className: "column is-full-mobile is-full-tablet is-half-desktop"
              }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
                className: "testimonial__item"
              }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
                className: "testimonial__body testimonial__body--small"
              }, post.img ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
                src: post.img.source_url,
                alt: post.img.alt_text
              }) : '', !post.excerpt.raw ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
                className: "testimonial__content"
              }, post.content.raw.replace(/<!--(?!>)[\S\s]*?-->/g, '').replace(/(<([^>]+)>)/ig, '')) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
                className: "testimonial__content"
              }, post.excerpt.raw), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
                className: "testimonial__name"
              }, post.acf.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
                className: "testimonial__info"
              }, post.acf.persons_information))));
            }

            return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "column"
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "testimonial__item testimonial--big"
            }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
              className: "testimonial__body testimonial__body--big"
            }, post.img ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
              src: post.img.source_url,
              alt: post.img.alt_text
            }) : '', !post.excerpt.raw ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__content"
            }, post.content.raw.replace(/<!--(?!>)[\S\s]*?-->/g, '').replace(/(<([^>]+)>)/ig, '')) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__content"
            }, post.excerpt.raw), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__name"
            }, post.acf.name), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
              className: "testimonial__info"
            }, post.acf.persons_information))));
          }
        });
      }
    }))));
  }
});

/***/ }),

/***/ "./src/text-hero/block.js":
/*!********************************!*\
  !*** ./src/text-hero/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  SelectControl,
  TextControl,
  RadioControl,
  Button,
  Disabled
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
const BLOCKS_TEMPLATE = [['core/paragraph', {
  placeholder: 'Optional subtext'
}]];
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

const ALLOWED_MEDIA_TYPES_2 = ['video'];
registerBlockType("purdue-blocks/text-hero", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Text Block Hero"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "color-9c9795",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    storyTitle: {
      type: 'string',
      source: 'html',
      selector: '.story-title'
    },
    ctaOptionalSub: {
      type: "string",
      default: ""
    },
    hasLink: {
      type: 'boolean',
      default: false
    },
    ctaUrl: {
      type: 'string',
      default: ''
    },
    ctaText: {
      type: 'string',
      default: ''
    },
    external: {
      type: 'boolean',
      default: false
    },
    headerLevel: {
      type: 'string',
      default: 'h1'
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    altText: {
      type: "string",
      default: ""
    },
    position: {
      type: "string",
      default: "left"
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Adds a large image featured story."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Text Box Position",
      selected: props.attributes.position,
      options: [{
        label: 'Left',
        value: 'left'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: position => {
        props.setAttributes({
          position
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(SelectControl, {
      label: "Heading Level of the Header",
      help: "This only changes the HTML tag. The styles will stay the same.",
      value: props.attributes.headerLevel,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }],
      onChange: headerLevel => {
        props.setAttributes({
          headerLevel
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a CTA link?",
      checked: props.attributes.hasLink,
      onChange: () => props.setAttributes({
        hasLink: !props.attributes.hasLink
      })
    })), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Call to action text",
      value: props.attributes.ctaText,
      onChange: ctaText => props.setAttributes({
        ctaText
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Link address",
      value: props.attributes.ctaUrl,
      onChange: ctaUrl => props.setAttributes({
        ctaUrl
      })
    })) : '', props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `pu-cta-hero pu-text-hero pu-text-hero-editor${props.attributes.position === "right" ? " pu-text-hero--right" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-medium"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          altText: props.attributes.altText !== "" ? props.attributes.altText : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "background-image",
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: open
        }, props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image"), props.attributes.imgUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          className: "remove-image-button",
          onClick: removeMedia
        }, "Remove image") : ""));
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: props.attributes.headerLevel,
      value: props.attributes.storyTitle,
      className: 'story-title',
      onChange: storyTitle => {
        props.setAttributes({
          storyTitle
        });
      },
      placeholder: "Add header",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      template: BLOCKS_TEMPLATE,
      templateLock: false
    }), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "read-more-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-text"
    }, props.attributes.ctaText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-icon"
    })) : '')))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `pu-cta-hero pu-text-hero${props.attributes.position === "right" ? " pu-text-hero--right" : ""}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-medium"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero-body"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      role: `${props.attributes.altText ? "img" : ""}`,
      className: "background-image",
      "aria-label": props.attributes.altText,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.storyTitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      tagName: props.attributes.headerLevel,
      value: props.attributes.storyTitle,
      className: 'story-title'
    }) : '', (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null), props.attributes.hasLink ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "read-more-button",
      href: props.attributes.ctaUrl,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-text"
    }, props.attributes.ctaText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "read-more-button-icon"
    })) : "")))));
    return returned;
  }
});

/***/ }),

/***/ "./src/title-hero/block.js":
/*!*********************************!*\
  !*** ./src/title-hero/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  TextControl,
  TextareaControl,
  Button,
  CheckboxControl,
  RadioControl,
  Disabled
} = wp.components;
const {
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  useBlockProps
} = wp.blockEditor;
const {
  select
} = wp.data;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

const ALLOWED_MEDIA_TYPES_1 = ['image'];
const ALLOWED_MEDIA_TYPES_2 = ['video'];
registerBlockType('purdue-blocks/title-hero', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Title Hero'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    pageTitle: {
      type: 'string',
      default: ''
    },
    blockStyle: {
      type: 'string',
      default: 'united'
    },
    addSubtitle: {
      type: 'boolean',
      default: false
    },
    subTitle: {
      type: 'string',
      default: ''
    },
    subText: {
      type: 'string',
      default: ''
    },
    addBorder: {
      type: 'boolean',
      default: false
    },
    backgroundType: {
      type: 'string',
      default: 'image'
    },
    imgUrl: {
      type: 'string',
      default: ''
    },
    imgMoUrl: {
      type: 'string',
      default: ''
    },
    altText: {
      type: 'string',
      default: ''
    },
    videoUrl: {
      type: 'string',
      default: ''
    },
    videoId: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('This block should be used at the top of the page.'),
  edit: props => {
    if (props.attributes.pageTitle === '') {
      props.setAttributes({
        pageTitle: select('core/editor').getCurrentPost().title
      });
    }

    if (props.attributes.addSubtitle) {
      props.setAttributes({
        blockStyle: "acumin"
      });
    } else {
      props.setAttributes({
        blockStyle: "united"
      });
    }

    const setBorderChecked = () => {
      if (props.attributes.addBorder) {
        props.setAttributes({
          addBorder: false
        });
      } else {
        props.setAttributes({
          addBorder: true
        });
      }
    };

    const removeVideo = () => {
      props.setAttributes({
        videoUrl: ''
      });
    };

    const removeImage = () => {
      props.setAttributes({
        imgUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Hero Style",
      help: "Choose between two design styles using different font families.",
      selected: props.attributes.blockStyle,
      options: [{
        label: 'Acumin Pro',
        value: "acumin"
      }, {
        label: 'United Sans',
        value: "united"
      }],
      onChange: option => {
        props.setAttributes({
          blockStyle: option
        });
        option === "united" ? props.setAttributes({
          addSubtitle: false
        }) : props.setAttributes({
          addSubtitle: true
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add A border?",
      help: "Would you like to add a gold border around the hero image?",
      checked: props.attributes.addBorder,
      onChange: setBorderChecked
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Hero Media Type",
      help: "Choose to use a video or an image as the hero background. Note on mobile devices an image you select on the editor will be displayed for the 'Video' option.",
      selected: props.attributes.backgroundType,
      options: [{
        label: 'Image',
        value: 'image'
      }, {
        label: 'Video',
        value: 'video'
      }],
      onChange: option => {
        props.setAttributes({
          backgroundType: option
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      help: "When video is selected as hero media type, this is the Alt text of the image displaying on mobile devices.",
      value: props.attributes.altText,
      onChange: altText => props.setAttributes({
        altText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: 'purdue-blocks-editor-title-hero'
    }, props.attributes.addSubtitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add lead-in text") : "", props.attributes.addSubtitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.subTitle,
      className: "input",
      type: "text",
      placeholder: "Lead-in text...",
      onChange: e => {
        props.setAttributes({
          subTitle: e.target.value
        });
      }
    }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add Page Title"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("input", {
      value: props.attributes.pageTitle !== '' ? props.attributes.pageTitle : '',
      className: "input",
      type: "text",
      placeholder: "Page Title...",
      onChange: e => {
        props.setAttributes({
          pageTitle: e.target.value
        });
      }
    }))), props.attributes.addSubtitle ? "" : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Add the intro copy here."), props.attributes.addSubtitle ? "" : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "field"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("textarea", {
      value: props.attributes.subText !== '' ? props.attributes.subText : '',
      className: "textarea",
      placeholder: "Add intro copy here...",
      onChange: e => {
        props.setAttributes({
          subText: e.target.value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-container"
    }, props.attributes.backgroundType === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose a Hero Video (Recommended size: less than 10 MB)"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      accept: "video",
      allowedTypes: ALLOWED_MEDIA_TYPES_2,
      onSelect: video => {
        props.setAttributes({
          videoUrl: video.url,
          videoId: video.id
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return props.attributes.videoUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Disabled, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("video", {
          muted: true,
          playsinline: "",
          src: props.attributes.videoUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Select a New Video"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeVideo
        }, "Remove video")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-site-hero__description'
        }, "Pick a video from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Open Media Library"));
      }
    }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "media-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, "Choose a Hero Image"), props.attributes.backgroundType === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, " (To display on mobile devices)") : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      allowedTypes: ALLOWED_MEDIA_TYPES_1,
      onSelect: img => {
        props.setAttributes({
          imgUrl: img.url,
          imgMoUrl: img.sizes ? img.sizes.hero_mobile ? img.sizes.hero_mobile.url : img.url : img.url,
          altText: props.attributes.altText !== '' ? props.attributes.altText : img.alt
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return props.attributes.imgUrl !== '' ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__preview'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("figure", {
          className: 'image'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          alt: props.attributes.altText,
          src: props.attributes.imgUrl
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Select a New Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: removeImage
        }, "Remove image")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: 'bulma-blocks-editor-site-hero__container'
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
          className: 'bulma-blocks-editor-site-hero__description'
        }, "Pick a hero image from the media library."), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Button, {
          className: 'bulma-blocks-editor-site-hero__button',
          onClick: open
        }, "Open Media Library"));
      }
    })))))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "pu-title-hero"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "hero is-large"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `hero-body${props.attributes.addSubtitle ? " with-lead-in" : ""}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `background-image${props.attributes.addBorder ? " has-border" : ""}`,
      "aria-label": props.attributes.altText,
      style: {
        backgroundImage: `url(${props.attributes.imgUrl})`
      }
    }, props.attributes.backgroundType === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "hero-video-container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("video", {
      muted: "",
      loop: "",
      autoplay: "",
      playsinline: "",
      src: props.attributes.videoUrl
    })) : "", props.attributes.backgroundType === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "hero-video-control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "video-pause-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "sr-only"
    }, "Pause"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-pause-circle",
      "aria-hidden": "true"
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "video-play-button hide"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "sr-only"
    }, "Play"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-play-circle",
      "aria-hidden": "true"
    })))) : ""), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "container"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "content"
    }, props.attributes.addSubtitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h1", {
      className: "has-lead-in"
    }, props.attributes.subTitle ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "lead-in"
    }, props.attributes.subTitle) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "main-title"
    }, props.attributes.pageTitle || select('core/editor').getCurrentPost().title)) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("h1", null, props.attributes.pageTitle || select('core/editor').getCurrentPost().title), props.attributes.addSubtitle ? "" : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, props.attributes.subText))))));
    return returned;
  }
});

/***/ }),

/***/ "./src/title-nav/block.js":
/*!********************************!*\
  !*** ./src/title-nav/block.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';

const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  RangeControl,
  CheckboxControl,
  TextControl
} = wp.components;
const {
  InnerBlocks,
  InspectorControls,
  RichText,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/title-nav', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Titled Navigation'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-ellipsis-h fa-w-12",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"
  })),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    hasOutline: {
      type: 'boolean',
      default: false
    },
    addButton: {
      type: 'boolean',
      default: false
    },
    numLinks: {
      type: 'number',
      default: 1
    },
    titleText: {
      source: 'html',
      selector: 'h2'
    },
    buttonText: {
      type: 'string',
      default: ''
    },
    buttonLink: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add this block and select navigation items to build a menu that will show above the title of the page.'),
  edit: props => {
    if (props.attributes.numLinks === 1) {
      updateInner(props, 1, 1);
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RangeControl, {
      className: 'bulma-columns-range-control',
      label: "Number of Navigation Items",
      value: props.attributes.numLinks,
      min: 1,
      max: 15,
      onChange: numLinks => {
        updateInner(props, props.attributes.numLinks, numLinks);
        props.setAttributes({
          numLinks
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Give Menu Items an Outline?",
      checked: props.attributes.hasOutline,
      onChange: checked => props.setAttributes({
        hasOutline: checked
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Add a CTA Button?",
      checked: props.attributes.addButton,
      onChange: checked => props.setAttributes({
        addButton: checked
      })
    })), props.attributes.addButton ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, {
      title: 'Button Controls'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Button Text",
      value: props.attributes.buttonText,
      onChange: buttonText => props.setAttributes({
        buttonText
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "Button Link",
      value: props.attributes.buttonLink,
      onChange: buttonLink => props.setAttributes({
        buttonLink
      })
    }))) : '')), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `editor-title-nav  ${props.attributes.hasOutline ? 'outline-on' : ''}`
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
      tagName: "h2",
      value: props.attributes.titleText,
      className: 'editor-title-nav__title',
      onChange: text => {
        props.setAttributes({
          titleText: text
        });
      },
      placeholder: "Nav Title (Optional)",
      keepPlaceholderOnFocus: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks, {
      templateLock: "all"
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    return !props.attributes.addButton ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("section", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `section pu-title-nav ${props.attributes.hasOutline ? 'has-outline' : ''}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "pu-title-nav__title",
      tagName: "h2",
      value: props.attributes.titleText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("ul", {
      className: "pu-title-nav__menu"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null))) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("section", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `section pu-title-nav ${props.attributes.hasOutline ? 'has-outline' : ''}`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "columns"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-8 pu-title-nav__left"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "pu-title-nav__title",
      tagName: "h2",
      value: props.attributes.titleText
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("ul", {
      className: "pu-title-nav__menu"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerBlocks.Content, null))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "column is-3 is-offset-1 pu-title-nav__right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "pu-title-nav__cta",
      href: props.attributes.buttonLink
    }, " ", props.attributes.buttonText, " "))));
  }
});

const updateInner = (props, oldNum, newNum) => {
  const select = wp.data.select('core/block-editor');
  let innerBlocks = select.getBlock(props.clientId).innerBlocks;
  const adding = newNum > oldNum;
  const triedZero = newNum === 0;

  if (oldNum === 1 && oldNum === newNum) {
    const firstBlock = (0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.createBlock)('purdue-blocks/title-nav-link');
    innerBlocks = [firstBlock];
    wp.data.dispatch('core/block-editor').replaceInnerBlocks(props.clientId, innerBlocks, false);
  } else if (adding && !triedZero) {
    const newToAdd = newNum - oldNum;

    for (let i = 0; i < newToAdd; i++) {
      const newLinkToAdd = (0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.createBlock)('purdue-blocks/title-nav-link');
      innerBlocks.push(newLinkToAdd);
    }

    wp.data.dispatch('core/block-editor').replaceInnerBlocks(props.clientId, innerBlocks, false);
  } else if (!adding && !triedZero) {
    const removingNum = oldNum - newNum;

    for (let i = 0; i < removingNum; i++) {
      innerBlocks.pop();
    }

    wp.data.dispatch('core/block-editor').replaceInnerBlocks(props.clientId, innerBlocks, false);
  }
};

/***/ }),

/***/ "./src/title-nav/title-nav-link/block.js":
/*!***********************************************!*\
  !*** ./src/title-nav/title-nav-link/block.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);


/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl
} = wp.components;
const {
  RichText,
  InspectorControls
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/title-nav-link', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Titled Navigation Link'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "link",
    className: "svg-inline--fa fa-link fa-w-16",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"
  })),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],
  parent: ['purdue-blocks/title-nav'],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    linkText: {
      source: 'html',
      selector: 'li'
    },
    isCurrent: {
      type: 'boolean',
      default: false
    }
  },
  supports: {
    className: false
  },
  // Block description in side panel
  description: __('Add this block and select navigation items to build a menu that will show above the title of the page.'),
  edit: props => {
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CheckboxControl, {
      label: "Is this the current page?",
      checked: props.attributes.isCurrent,
      onChange: checked => props.setAttributes({
        isCurrent: checked
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'editor-title-nav-link'
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText, {
      tagName: "li",
      value: props.attributes.linkText,
      className: `editor-title-nav-link__input ${props.attributes.isCurrent ? 'isCurrent' : ''}`,
      onChange: text => {
        props.setAttributes({
          linkText: text
        });
      }
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RichText.Content, {
      className: `${props.attributes.isCurrent ? 'isCurrent' : ''}`,
      tagName: "li",
      value: props.attributes.linkText
    });
  }
});

/***/ }),

/***/ "./src/video-embed/block.js":
/*!**********************************!*\
  !*** ./src/video-embed/block.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);



/* eslint-disable react/jsx-key */

/**
 * BLOCK: Bulma Container
 *
 * Bulma container block: https://bulma.io/documentation/layout/container/.
 */
//  Import CSS.
// import './editor.scss';
// import './style.scss';

const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  RangeControl,
  CheckboxControl,
  TextControl
} = wp.components;
const {
  InnerBlocks,
  InspectorControls,
  RichText,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType('purdue-blocks/video-embed', {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __('Video Embed'),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    "aria-hidden": "true",
    focusable: "false",
    "data-prefix": "far",
    "data-icon": "ellipsis-h",
    className: "svg-inline--fa fa-ellipsis-h fa-w-12",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 576 512"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    fill: "#8E6F3E",
    d: "M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"
  })),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: 'purdue-blocks',
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    urlText: {
      type: 'string',
      default: ''
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __('Add this block and paste the YouTube video link to embed it.'),
  edit: props => {
    const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
    const match = props.attributes.urlText.match(regExp);
    const video_id = match && match[7].length == 11 ? match[7] : false;
    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      className: "purdue_video_url",
      placeholder: "YouTube URL",
      value: props.attributes.urlText,
      onChange: urlText => props.setAttributes({
        urlText
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("iframe", {
      title: "",
      src: `https://www.youtube.com/embed/${video_id}`,
      frameborder: "0",
      allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
      rel: "0",
      allowfullscreen: true
    }))];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
    const match = props.attributes.urlText.match(regExp);
    const video_id = match && match[7].length == 11 ? match[7] : false;
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: "purdue_video"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("iframe", {
      id: "player",
      type: "text/html",
      src: `https://www.youtube.com/embed/${video_id}?modestbranding=1&rel=0&theme=light&controls=0&enablejsapi=1`,
      frameborder: "0",
      allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
      rel: "0",
      allowfullscreen: true
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_pause"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_pause_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      className: "purdue_video_controls_pause_share_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-share video-embed__share"
    }), " Share"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      id: "play",
      className: "purdue_video_controls_pause_share_play"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "purdue_video_controls_pause_share_play_border"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      className: "fas fa-play"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-pause hidden"
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_pause_button"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_black"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_black_elapsed"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_black_timeline"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "time_elapsed"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_black_total"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_black_volume"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-volume-up"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-volume-mute hidden"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "purdue_video_controls_black_fullscreen"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-expand"
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal-background"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "modal-content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "top_article_data"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "top_article_data_share"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      id: "share_text",
      class: "top_article_data_share_text ",
      target: "_blank",
      "aria-label": `Share link https://youtu.be/${video_id}`,
      href: `https://youtu.be/${video_id}`,
      title: "Share link",
      rel: "noopener noreferrer"
    }, `https://youtu.be/${video_id}`), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `https://www.facebook.com/sharer/sharer.php?u=https://youtu.be/${video_id}`,
      title: "Share on Facebook",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-facebook-f"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `https://www.linkedin.com/sharing/share-offsite/?url=https://youtu.be/${video_id}`,
      title: "Share on Linkedin",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-linkedin-in"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `https://twitter.com/intent/tweet?text=https://youtu.be/${video_id}`,
      title: "Share on Twitter",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fab fa-twitter"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      class: "top_article_data_share_button",
      href: `mailto:?subject=&body=https://youtu.be/${video_id}`,
      title: "{{ Drupal.t('Share via Email') }}",
      target: "_blank",
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-envelope"
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "modal-close is-large",
      "aria-label": "close"
    })));
  }
});

/***/ }),

/***/ "./src/video-hero/block.js":
/*!*********************************!*\
  !*** ./src/video-hero/block.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);



/* eslint-disable react/jsx-key */

/* eslint-disable no-nested-ternary */
//  Import CSS.
// import './editor.scss';
// import './style.scss';
const {
  __
} = wp.i18n; // Import __() from wp.i18n

const {
  registerBlockType
} = wp.blocks; // Import registerBlockType() from wp.blocks

const {
  PanelBody,
  PanelRow,
  CheckboxControl,
  TextareaControl,
  TextControl,
  RadioControl,
  SelectControl
} = wp.components;
const {
  RichText,
  InspectorControls,
  MediaUploadCheck,
  MediaUpload,
  InnerBlocks,
  useBlockProps
} = wp.blockEditor;
/**
 * Register: aa Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("purdue-blocks/video-hero", {
  // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
  title: __("Video Hero"),
  // Block title.
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 87.5"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("defs", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    id: "Window-maximize",
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g", {
    class: "cls-1"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
    class: "cls-2",
    d: "M100,16.62V85.37a9.38,9.38,0,0,1-9.37,9.37H9.37A9.38,9.38,0,0,1,0,85.37V16.62A9.38,9.38,0,0,1,9.37,7.24H90.63A9.38,9.38,0,0,1,100,16.62ZM90.63,38.49H9.37v45.7a1.18,1.18,0,0,0,1.18,1.18h78.9a1.18,1.18,0,0,0,1.18-1.18Z",
    transform: "translate(0 -7.24)"
  })))),
  // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
  category: "purdue-blocks",
  // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
  keywords: [],

  /**
   * The edit function describes the structure of your block in the context of the editor.
   * This represents what the editor will render when the block is used.
   *
   * The "edit" property must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Component.
   */
  attributes: {
    title: {
      type: "string",
      source: "html",
      selector: ".title"
    },
    buttonText: {
      type: 'string',
      source: 'html',
      selector: ".cta-button"
    },
    buttonURL: {
      type: 'string',
      default: ""
    },
    external: {
      type: 'boolean',
      default: false
    },
    videoUrl: {
      type: "string",
      default: ""
    },
    posterUrl: {
      type: "string",
      default: ""
    },
    type: {
      type: "string",
      default: "video"
    },
    imgUrl: {
      type: "string",
      default: ""
    },
    altTexti: {
      type: "string",
      default: ""
    },
    altTextv: {
      type: "string",
      default: ""
    },
    images: {
      type: 'array',
      default: []
    },
    currentImage: {
      type: 'number',
      default: 1
    }
  },
  supports: {
    className: false,
    anchor: true
  },
  // Block description in side panel
  description: __("Create a hero banner that will display a background image, video or carousel."),
  edit: props => {
    const removeMedia = () => {
      props.setAttributes({
        videoUrl: ''
      });
    };

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(InspectorControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RadioControl, {
      label: "Type of the background",
      help: "If you want to use one single image as the background of this block, select Image; if you want to use carousel as the background, select Carousel; otherwise, select Video.",
      selected: props.attributes.type,
      options: [{
        label: 'Video',
        value: 'video'
      }, {
        label: 'Image',
        value: 'image'
      }, {
        label: 'Carousel',
        value: 'carousel'
      }],
      onChange: option => {
        props.setAttributes({
          type: option
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelBody, null, props.attributes.type === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("strong", null, "Select an image to replace the video as the hero on mobile devices."))) : "", props.attributes.type === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      allowedTypes: ['image'],
      onSelect: media => {
        props.setAttributes({
          posterUrl: media.url,
          altTextv: props.attributes.altTextv !== '' ? props.attributes.altTextv : img.alt
        });
      },
      render: _ref => {
        let {
          open
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: open
        }, props.attributes.posterUrl !== "" ? "Select a new image" : "Select an image")), props.attributes.posterUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
          src: props.attributes.posterUrl
        }) : '');
      }
    }))) : "", props.attributes.type !== "carousel" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextareaControl, {
      label: "Hero Image Alt Text",
      help: "When video is selected as hero media type, this is the Alt text of the image displaying on mobile devices.",
      value: props.attributes.type === "image" ? props.attributes.altTexti : props.attributes.altTextv,
      onChange: altText => props.attributes.type === "image" ? props.setAttributes({
        altTexti: altText
      }) : props.setAttributes({
        altTextv: altText
      })
    })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(TextControl, {
      label: "CTA Link URL",
      value: props.attributes.buttonURL,
      onChange: buttonURL => props.setAttributes({
        buttonURL
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CheckboxControl, {
      label: "Open link in new tab?",
      checked: props.attributes.external,
      onChange: () => props.setAttributes({
        external: !props.attributes.external
      })
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `video-hero-editor`
    }, props.attributes.type === "carousel" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      addToGallery: true,
      multiple: true,
      gallery: true,
      onSelect: imgs => {
        props.setAttributes({
          images: imgs
        });
      },
      render: _ref2 => {
        let {
          open
        } = _ref2;
        let images = [...props.attributes.images];
        let current = parseInt(props.attributes.currentImage);
        let url = images.length > 0 ? images[current - 1].url : "";
        let alt = images.length > 0 ? images[current - 1].alt : "";
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "video-hero--background-image",
          role: "img",
          style: {
            backgroundImage: `url(${url})`
          },
          "aria-label": alt
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: open
        }, props.attributes.images.length === 0 ? "Select images" : "Select new images")), props.attributes.images.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "video-hero__carousel__arrow-wrapper"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "video-hero--carousel__arrow video-hero--carousel__arrow-left",
          onClick: () => {
            if (props.attributes.currentImage > 1) {
              props.setAttributes({
                currentImage: props.attributes.currentImage - 1
              });
            } else {
              props.setAttributes({
                currentImage: props.attributes.images.length
              });
            }
          }
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
          class: "fas fa-chevron-left"
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "video-hero--carousel__current"
        }, props.attributes.currentImage), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "video-hero--carousel__total"
        }, "/", props.attributes.images.length), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "video-hero--carousel__arrow video-hero--carousel__arrow-right",
          onClick: () => {
            if (props.attributes.currentImage < props.attributes.images.length) {
              props.setAttributes({
                currentImage: props.attributes.currentImage + 1
              });
            } else {
              props.setAttributes({
                currentImage: 1
              });
            }
          }
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
          class: "fas fa-chevron-right"
        }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "video-hero-editor--overlay"
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `video-hero-editor--content`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "h1",
          value: props.attributes.title,
          className: "title",
          onChange: text => {
            props.setAttributes({
              title: text
            });
          },
          placeholder: "Add Title",
          keepPlaceholderOnFocus: true
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "span",
          value: props.attributes.buttonText,
          className: 'cta-button',
          onChange: text => {
            props.setAttributes({
              buttonText: text
            });
          },
          placeholder: "Button Text",
          keepPlaceholderOnFocus: true,
          allowedFormats: []
        })));
      }
    })) : "", props.attributes.type === "image" || props.attributes.type === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MediaUpload, {
      multiple: false,
      gallery: false,
      onSelect: media => {
        if (props.attributes.type === "video") {
          props.setAttributes({
            videoUrl: ""
          });
          props.setAttributes({
            videoUrl: media.url
          });
        } else {
          props.setAttributes({
            imgUrl: media.url,
            altTexti: props.attributes.altTexti !== '' ? props.attributes.altTexti : media.alt
          });
        }
      },
      render: _ref3 => {
        let {
          open
        } = _ref3;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "video-hero--background-image",
          role: "img",
          style: {
            backgroundImage: `url(${props.attributes.imgUrl})`
          },
          "aria-label": props.attributes.altText
        }, props.attributes.type === "video" && props.attributes.videoUrl !== "" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("video", {
          className: "video-hero-editor--video",
          muted: ""
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("source", {
          src: props.attributes.videoUrl,
          type: "video/mp4"
        })) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          class: "buttons-container"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          onClick: open
        }, props.attributes.type === "video" ? props.attributes.videoUrl !== "" ? "Select a new video" : "Select a video" : props.attributes.imgUrl !== "" ? "Select a new image" : "Select an image")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "video-hero-editor--overlay"
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: `video-hero-editor--content`
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "h1",
          value: props.attributes.title,
          className: "title",
          onChange: text => {
            props.setAttributes({
              title: text
            });
          },
          placeholder: "Add Title",
          keepPlaceholderOnFocus: true
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText, {
          tagname: "span",
          value: props.attributes.buttonText,
          className: 'cta-button',
          onChange: text => {
            props.setAttributes({
              buttonText: text
            });
          },
          placeholder: "Button Text",
          keepPlaceholderOnFocus: true,
          allowedFormats: []
        })));
      }
    })) : "")];
  },

  /**
   * The save function defines the way in which the different attributes should be combined
   * into the final markup, which is then serialized by Gutenberg into post_content.
   *
   * The "save" property must be specified and must be a valid function.
   *
   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
   *
   * @param {Object} props Props.
   * @returns {Mixed} JSX Frontend HTML.
   */
  save: props => {
    const blockProps = useBlockProps.save();
    const returned = props.attributes.type === "carousel" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `video-hero video-hero--carousel`
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: `video-hero--carousel__wrapper`
    }, props.attributes.images.length > 0 ? props.attributes.images.map(img => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: `video-hero--carousel__image`,
        style: {
          backgroundImage: `url(${img.url})`
        },
        "aria-label": img.alt
      });
    }) : ""), props.attributes.images.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "video-hero--control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "video-hero--pause-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "sr-only"
    }, "Pause"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-pause-circle",
      "aria-hidden": "true"
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "video-hero--play-button hide"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "sr-only"
    }, "Play"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-play-circle",
      "aria-hidden": "true"
    })))) : "", props.attributes.images.length > 1 ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "video-hero--carousel__arrow-wrapper"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "video-hero--carousel__arrow video-hero--carousel__arrow-left"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-chevron-left"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "video-hero--carousel__current"
    }, "1"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "video-hero--carousel__total"
    }, "/", props.attributes.images.length), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "video-hero--carousel__arrow video-hero--carousel__arrow-right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-chevron-right"
    }))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "video-hero--content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "title",
      tagName: "h1",
      value: props.attributes.title
    }), props.attributes.buttonURL || props.attributes.buttonText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.buttonURL,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "cta-button",
      tagName: "span",
      value: props.attributes.buttonText
    })) : "")) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockProps, {
      className: `video-hero video-hero--background-image`,
      style: {
        backgroundImage: `url(${props.attributes.type === "video" ? props.attributes.posterUrl : props.attributes.imgUrl})`
      },
      "aria-label": props.attributes.type === "video" ? props.attributes.altTextv : props.attributes.altTexti
    }), props.attributes.type === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("video", {
      autobuffer: "",
      autoplay: "",
      className: "video-hero--video",
      loop: "",
      muted: "",
      playsinline: "",
      poster: props.attributes.posterUrl || '',
      src: props.attributes.videoUrl
    }) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "video-hero--overlay"
    }), props.attributes.type === "video" ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      class: "video-hero--control"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "video-hero--pause-button"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "sr-only"
    }, "Pause"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-pause-circle",
      "aria-hidden": "true"
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
      class: "video-hero--play-button hide"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      class: "sr-only"
    }, "Play"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("i", {
      class: "fas fa-play-circle",
      "aria-hidden": "true"
    })))) : "", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "video-hero--content"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "title",
      tagName: "h1",
      value: props.attributes.title
    }), props.attributes.buttonURL || props.attributes.buttonText ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      href: props.attributes.buttonURL,
      target: props.attributes.external ? '_blank' : '_self',
      rel: "noopener noreferrer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RichText.Content, {
      className: "cta-button",
      tagName: "span",
      value: props.attributes.buttonText
    })) : ""));
    return returned;
  }
});

/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ "./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isMasked = __webpack_require__(/*! ./_isMasked */ "./node_modules/lodash/_isMasked.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ "./node_modules/lodash/_nativeKeys.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/***/ (function(module) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

module.exports = freeGlobal;


/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ "./node_modules/lodash/_baseIsNative.js"),
    getValue = __webpack_require__(/*! ./_getValue */ "./node_modules/lodash/_getValue.js");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ "./node_modules/lodash/_DataView.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    Promise = __webpack_require__(/*! ./_Promise */ "./node_modules/lodash/_Promise.js"),
    Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ "./node_modules/lodash/_WeakMap.js"),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/***/ (function(module) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ "./node_modules/lodash/_coreJsData.js");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/***/ (function(module) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;


/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/***/ (function(module) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/***/ (function(module) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/***/ (function(module) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ "./node_modules/lodash/_baseIsArguments.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/***/ (function(module) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js"),
    stubFalse = __webpack_require__(/*! ./stubFalse */ "./node_modules/lodash/stubFalse.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;


/***/ }),

/***/ "./node_modules/lodash/isEmpty.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isEmpty.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseKeys = __webpack_require__(/*! ./_baseKeys */ "./node_modules/lodash/_baseKeys.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;


/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/***/ (function(module) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/***/ (function(module) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/***/ (function(module) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ "./node_modules/lodash/_baseIsTypedArray.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/***/ (function(module) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "./node_modules/react-sortablejs/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-sortablejs/dist/index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var $8zHUo$sortablejs = __webpack_require__(/*! sortablejs */ "./node_modules/sortablejs/modular/sortable.esm.js");
var $8zHUo$classnames = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
var $8zHUo$react = __webpack_require__(/*! react */ "react");
var $8zHUo$tinyinvariant = __webpack_require__(/*! tiny-invariant */ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js");

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$exportWildcard(dest, source) {
  Object.keys(source).forEach(function(key) {
    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {
      return;
    }

    Object.defineProperty(dest, key, {
      enumerable: true,
      get: function get() {
        return source[key];
      }
    });
  });

  return dest;
}

$parcel$export(module.exports, "Sortable", () => $882b6d93070905b3$re_export$Sortable);
$parcel$export(module.exports, "Direction", () => $882b6d93070905b3$re_export$Direction);
$parcel$export(module.exports, "DOMRect", () => $882b6d93070905b3$re_export$DOMRect);
$parcel$export(module.exports, "GroupOptions", () => $882b6d93070905b3$re_export$GroupOptions);
$parcel$export(module.exports, "MoveEvent", () => $882b6d93070905b3$re_export$MoveEvent);
$parcel$export(module.exports, "Options", () => $882b6d93070905b3$re_export$Options);
$parcel$export(module.exports, "PullResult", () => $882b6d93070905b3$re_export$PullResult);
$parcel$export(module.exports, "PutResult", () => $882b6d93070905b3$re_export$PutResult);
$parcel$export(module.exports, "SortableEvent", () => $882b6d93070905b3$re_export$SortableEvent);
$parcel$export(module.exports, "SortableOptions", () => $882b6d93070905b3$re_export$SortableOptions);
$parcel$export(module.exports, "Utils", () => $882b6d93070905b3$re_export$Utils);
$parcel$export(module.exports, "ReactSortable", () => $7fe8e3ea572bda7a$export$11bbed9ee0012c13);





function $eb03e74f8f7db1f3$export$1d0aa160432dfea5(node) {
    if (node.parentElement !== null) node.parentElement.removeChild(node);
}
function $eb03e74f8f7db1f3$export$6d240faa51aa562f(parent, newChild, index) {
    const refChild = parent.children[index] || null;
    parent.insertBefore(newChild, refChild);
}
function $eb03e74f8f7db1f3$export$d7d742816c28cf91(customs) {
    $eb03e74f8f7db1f3$export$77f49a256021c8de(customs);
    $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs);
}
function $eb03e74f8f7db1f3$export$77f49a256021c8de(customs) {
    customs.forEach((curr)=>$eb03e74f8f7db1f3$export$1d0aa160432dfea5(curr.element));
}
function $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs) {
    customs.forEach((curr)=>{
        $eb03e74f8f7db1f3$export$6d240faa51aa562f(curr.parentElement, curr.element, curr.oldIndex);
    });
}
function $eb03e74f8f7db1f3$export$4655efe700f887a(evt, list) {
    const mode = $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt);
    const parentElement = {
        parentElement: evt.from
    };
    let custom = [];
    switch(mode){
        case "normal":
            /* eslint-disable */ const item = {
                element: evt.item,
                newIndex: evt.newIndex,
                oldIndex: evt.oldIndex,
                parentElement: evt.from
            };
            custom = [
                item
            ];
            break;
        case "swap":
            const drag = {
                element: evt.item,
                oldIndex: evt.oldIndex,
                newIndex: evt.newIndex,
                ...parentElement
            };
            const swap = {
                element: evt.swapItem,
                oldIndex: evt.newIndex,
                newIndex: evt.oldIndex,
                ...parentElement
            };
            custom = [
                drag,
                swap
            ];
            break;
        case "multidrag":
            custom = evt.oldIndicies.map((curr, index)=>({
                    element: curr.multiDragElement,
                    oldIndex: curr.index,
                    newIndex: evt.newIndicies[index].index,
                    ...parentElement
                }));
            break;
    }
    /* eslint-enable */ const customs = $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(custom, list);
    return customs;
}
function $eb03e74f8f7db1f3$export$c25cf8080bd305ec(normalized, list) {
    const a = $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list);
    const b = $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, a);
    return b;
}
function $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list) {
    const newList = [
        ...list
    ];
    normalized.concat().reverse().forEach((curr)=>newList.splice(curr.oldIndex, 1));
    return newList;
}
function $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, list, evt, clone) {
    const newList = [
        ...list
    ];
    normalized.forEach((curr)=>{
        const newItem = clone && evt && clone(curr.item, evt);
        newList.splice(curr.newIndex, 0, newItem || curr.item);
    });
    return newList;
}
function $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt) {
    if (evt.oldIndicies && evt.oldIndicies.length > 0) return "multidrag";
    if (evt.swapItem) return "swap";
    return "normal";
}
function $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(inputs, list) {
    const normalized = inputs.map((curr)=>({
            ...curr,
            item: list[curr.oldIndex]
        })).sort((a, b)=>a.oldIndex - b.oldIndex);
    return normalized;
}
function $eb03e74f8f7db1f3$export$7553c81e62e31b7e(props) {
    /* eslint-disable */ const { list: // react sortable props
    list , setList: setList , children: children , tag: tag , style: style , className: className , clone: clone , onAdd: // sortable options that have methods we want to overwrite
    onAdd , onChange: onChange , onChoose: onChoose , onClone: onClone , onEnd: onEnd , onFilter: onFilter , onRemove: onRemove , onSort: onSort , onStart: onStart , onUnchoose: onUnchoose , onUpdate: onUpdate , onMove: onMove , onSpill: onSpill , onSelect: onSelect , onDeselect: onDeselect , ...options } = props;
    /* eslint-enable */ return options;
}


/** Holds a global reference for which react element is being dragged */ // @todo - use context to manage this. How does one use 2 different providers?
const $7fe8e3ea572bda7a$var$store = {
    dragging: null
};
class $7fe8e3ea572bda7a$export$11bbed9ee0012c13 extends (0, $8zHUo$react.Component) {
    /* eslint-disable-next-line */ static defaultProps = {
        clone: (item)=>item
    };
    constructor(props){
        super(props);
        // @todo forward ref this component
        this.ref = /*#__PURE__*/ (0, $8zHUo$react.createRef)();
        // make all state false because we can't change sortable unless a mouse gesture is made.
        const newList = [
            ...props.list
        ].map((item)=>Object.assign(item, {
                chosen: false,
                selected: false
            }));
        props.setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
        (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(//@ts-expect-error: Doesn't exist. Will deprecate soon.
        !props.plugins, `
Plugins prop is no longer supported.
Instead, mount it with "Sortable.mount(new MultiDrag())"
Please read the updated README.md at https://github.com/SortableJS/react-sortablejs.
      `);
    }
    componentDidMount() {
        if (this.ref.current === null) return;
        const newOptions = this.makeOptions();
        (0, ($parcel$interopDefault($8zHUo$sortablejs))).create(this.ref.current, newOptions);
    }
    componentDidUpdate(prevProps) {
        if (prevProps.disabled !== this.props.disabled && this.sortable) this.sortable.option("disabled", this.props.disabled);
    }
    render() {
        const { tag: tag , style: style , className: className , id: id  } = this.props;
        const classicProps = {
            style: style,
            className: className,
            id: id
        };
        // if no tag, default to a `div` element.
        const newTag = !tag || tag === null ? "div" : tag;
        return /*#__PURE__*/ (0, $8zHUo$react.createElement)(newTag, {
            // @todo - find a way (perhaps with the callback) to allow AntD components to work
            ref: this.ref,
            ...classicProps
        }, this.getChildren());
    }
    getChildren() {
        const { children: children , dataIdAttr: dataIdAttr , selectedClass: selectedClass = "sortable-selected" , chosenClass: chosenClass = "sortable-chosen" , dragClass: /* eslint-disable */ dragClass = "sortable-drag" , fallbackClass: fallbackClass = "sortable-falback" , ghostClass: ghostClass = "sortable-ghost" , swapClass: swapClass = "sortable-swap-highlight" , filter: /* eslint-enable */ filter = "sortable-filter" , list: list ,  } = this.props;
        // if no children, don't do anything.
        if (!children || children == null) return null;
        const dataid = dataIdAttr || "data-id";
        /* eslint-disable-next-line */ return (0, $8zHUo$react.Children).map(children, (child, index)=>{
            if (child === undefined) return undefined;
            const item = list[index] || {};
            const { className: prevClassName  } = child.props;
            // @todo - handle the function if avalable. I don't think anyone will be doing this soon.
            const filtered = typeof filter === "string" && {
                [filter.replace(".", "")]: !!item.filtered
            };
            const className = (0, ($parcel$interopDefault($8zHUo$classnames)))(prevClassName, {
                [selectedClass]: item.selected,
                [chosenClass]: item.chosen,
                ...filtered
            });
            return /*#__PURE__*/ (0, $8zHUo$react.cloneElement)(child, {
                [dataid]: child.key,
                className: className
            });
        });
    }
    /** Appends the `sortable` property to this component */ get sortable() {
        const el = this.ref.current;
        if (el === null) return null;
        const key = Object.keys(el).find((k)=>k.includes("Sortable"));
        if (!key) return null;
        //@ts-expect-error: fix me.
        return el[key];
    }
    /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */ makeOptions() {
        const DOMHandlers = [
            "onAdd",
            "onChoose",
            "onDeselect",
            "onEnd",
            "onRemove",
            "onSelect",
            "onSpill",
            "onStart",
            "onUnchoose",
            "onUpdate", 
        ];
        const NonDOMHandlers = [
            "onChange",
            "onClone",
            "onFilter",
            "onSort", 
        ];
        const newOptions = (0, $eb03e74f8f7db1f3$export$7553c81e62e31b7e)(this.props);
        DOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerPropAndDOM(name));
        NonDOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerProp(name));
        /** onMove has 2 arguments and needs to be handled seperately. */ const onMove1 = (evt, originalEvt)=>{
            const { onMove: onMove  } = this.props;
            const defaultValue = evt.willInsertAfter || -1;
            if (!onMove) return defaultValue;
            const result = onMove(evt, originalEvt, this.sortable, $7fe8e3ea572bda7a$var$store);
            if (typeof result === "undefined") return false;
            return result;
        };
        return {
            ...newOptions,
            onMove: onMove1
        };
    }
    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */ prepareOnHandlerPropAndDOM(evtName) {
        return (evt)=>{
            // call the component prop
            this.callOnHandlerProp(evt, evtName);
            // calls state change
            //@ts-expect-error: until @types multidrag item is in
            this[evtName](evt);
        };
    }
    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */ prepareOnHandlerProp(evtName) {
        return (evt)=>{
            // call the component prop
            this.callOnHandlerProp(evt, evtName);
        };
    }
    /** Calls the `props.on[Handler]` function */ callOnHandlerProp(evt, evtName) {
        const propEvent = this.props[evtName];
        if (propEvent) propEvent(evt, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    // SORTABLE DOM HANDLING
    onAdd(evt) {
        const { list: list , setList: setList , clone: clone  } = this.props;
        /* eslint-disable-next-line */ const otherList = [
            ...$7fe8e3ea572bda7a$var$store.dragging.props.list
        ];
        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, otherList);
        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);
        const newList = (0, $eb03e74f8f7db1f3$export$eca851ee65ae17e4)(customs, list, evt, clone).map((item)=>Object.assign(item, {
                selected: false
            }));
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onRemove(evt) {
        const { list: list , setList: setList  } = this.props;
        const mode = (0, $eb03e74f8f7db1f3$export$1fc0f6205829e19c)(evt);
        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);
        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);
        let newList = [
            ...list
        ];
        // remove state if not in clone mode. otherwise, keep.
        if (evt.pullMode !== "clone") newList = (0, $eb03e74f8f7db1f3$export$be2da95e6167b0bd)(customs, newList);
        else {
            // switch used to get the clone
            let customClones = customs;
            switch(mode){
                case "multidrag":
                    customClones = customs.map((item, index)=>({
                            ...item,
                            element: evt.clones[index]
                        }));
                    break;
                case "normal":
                    customClones = customs.map((item)=>({
                            ...item,
                            element: evt.clone
                        }));
                    break;
                case "swap":
                default:
                    (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(true, `mode "${mode}" cannot clone. Please remove "props.clone" from <ReactSortable/> when using the "${mode}" plugin`);
            }
            (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customClones);
            // replace selected items with cloned items
            customs.forEach((curr)=>{
                const index = curr.oldIndex;
                /* eslint-disable-next-line */ const newItem = this.props.clone(curr.item, evt);
                newList.splice(index, 1, newItem);
            });
        }
        // remove item.selected from list
        newList = newList.map((item)=>Object.assign(item, {
                selected: false
            }));
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onUpdate(evt) {
        const { list: list , setList: setList  } = this.props;
        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);
        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);
        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);
        const newList = (0, $eb03e74f8f7db1f3$export$c25cf8080bd305ec)(customs, list);
        return setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onStart() {
        $7fe8e3ea572bda7a$var$store.dragging = this;
    }
    onEnd() {
        $7fe8e3ea572bda7a$var$store.dragging = null;
    }
    onChoose(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item, index)=>{
            let newItem = item;
            if (index === evt.oldIndex) newItem = Object.assign(item, {
                chosen: true
            });
            return newItem;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onUnchoose(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item, index)=>{
            let newItem = item;
            if (index === evt.oldIndex) newItem = Object.assign(newItem, {
                chosen: false
            });
            return newItem;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onSpill(evt) {
        const { removeOnSpill: removeOnSpill , revertOnSpill: revertOnSpill  } = this.props;
        if (removeOnSpill && !revertOnSpill) (0, $eb03e74f8f7db1f3$export$1d0aa160432dfea5)(evt.item);
    }
    onSelect(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item)=>Object.assign(item, {
                selected: false
            }));
        evt.newIndicies.forEach((curr)=>{
            const index = curr.index;
            if (index === -1) {
                console.log(`"${evt.type}" had indice of "${curr.index}", which is probably -1 and doesn't usually happen here.`);
                console.log(evt);
                return;
            }
            newList[index].selected = true;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onDeselect(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item)=>Object.assign(item, {
                selected: false
            }));
        evt.newIndicies.forEach((curr)=>{
            const index = curr.index;
            if (index === -1) return;
            newList[index].selected = true;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
}


var $faefaad95e5fcca0$exports = {};


$parcel$exportWildcard(module.exports, $faefaad95e5fcca0$exports);


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/sortablejs/modular/sortable.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/sortablejs/modular/sortable.esm.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiDrag": function() { return /* binding */ MultiDragPlugin; },
/* harmony export */   "Sortable": function() { return /* binding */ Sortable; },
/* harmony export */   "Swap": function() { return /* binding */ SwapPlugin; }
/* harmony export */ });
/**!
 * Sortable 1.15.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var version = "1.15.0";

function userAgent(pattern) {
  if (typeof window !== 'undefined' && window.navigator) {
    return !! /*@__PURE__*/navigator.userAgent.match(pattern);
  }
}

var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);

var captureMode = {
  capture: false,
  passive: false
};

function on(el, event, fn) {
  el.addEventListener(event, fn, !IE11OrLess && captureMode);
}

function off(el, event, fn) {
  el.removeEventListener(event, fn, !IE11OrLess && captureMode);
}

function matches(
/**HTMLElement*/
el,
/**String*/
selector) {
  if (!selector) return;
  selector[0] === '>' && (selector = selector.substring(1));

  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }

  return false;
}

function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}

function closest(
/**HTMLElement*/
el,
/**String*/
selector,
/**HTMLElement*/
ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;

    do {
      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }

      if (el === ctx) break;
      /* jshint boss:true */
    } while (el = getParentOrHost(el));
  }

  return null;
}

var R_SPACE = /\s+/g;

function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? 'add' : 'remove'](name);
    } else {
      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
    }
  }
}

function css(el, prop, val) {
  var style = el && el.style;

  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, '');
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }

      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf('webkit') === -1) {
        prop = '-webkit-' + prop;
      }

      style[prop] = val + (typeof val === 'string' ? '' : 'px');
    }
  }
}

function matrix(el, selfOnly) {
  var appliedTransforms = '';

  if (typeof el === 'string') {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, 'transform');

      if (transform && transform !== 'none') {
        appliedTransforms = transform + ' ' + appliedTransforms;
      }
      /* jshint boss:true */

    } while (!selfOnly && (el = el.parentNode));
  }

  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  /*jshint -W056 */

  return matrixFn && new matrixFn(appliedTransforms);
}

function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName),
        i = 0,
        n = list.length;

    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }

    return list;
  }

  return [];
}

function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;

  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
/**
 * Returns the "bounding client rect" of given element
 * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted
 * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container
 * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr
 * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone
 * @param  {[HTMLElement]} container              The parent the element will be placed in
 * @return {Object}                               The boundingClientRect of el, with specified adjustments
 */


function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {
  if (!el.getBoundingClientRect && el !== window) return;
  var elRect, top, left, bottom, right, height, width;

  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top = elRect.top;
    left = elRect.left;
    bottom = elRect.bottom;
    right = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top = 0;
    left = 0;
    bottom = window.innerHeight;
    right = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }

  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    // Adjust for translate()
    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
    // Not needed on <= IE11

    if (!IE11OrLess) {
      do {
        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {
          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container

          top -= containerRect.top + parseInt(css(container, 'border-top-width'));
          left -= containerRect.left + parseInt(css(container, 'border-left-width'));
          bottom = top + elRect.height;
          right = left + elRect.width;
          break;
        }
        /* jshint boss:true */

      } while (container = container.parentNode);
    }
  }

  if (undoScale && el !== window) {
    // Adjust for scale()
    var elMatrix = matrix(container || el),
        scaleX = elMatrix && elMatrix.a,
        scaleY = elMatrix && elMatrix.d;

    if (elMatrix) {
      top /= scaleY;
      left /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom = top + height;
      right = left + width;
    }
  }

  return {
    top: top,
    left: left,
    bottom: bottom,
    right: right,
    width: width,
    height: height
  };
}
/**
 * Checks if a side of an element is scrolled past a side of its parents
 * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question
 * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')
 * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')
 * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element
 */


function isScrolledPast(el, elSide, parentSide) {
  var parent = getParentAutoScrollElement(el, true),
      elSideVal = getRect(el)[elSide];
  /* jshint boss:true */

  while (parent) {
    var parentSideVal = getRect(parent)[parentSide],
        visible = void 0;

    if (parentSide === 'top' || parentSide === 'left') {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }

    if (!visible) return parent;
    if (parent === getWindowScrollingElement()) break;
    parent = getParentAutoScrollElement(parent, false);
  }

  return false;
}
/**
 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
 * and non-draggable elements
 * @param  {HTMLElement} el       The parent element
 * @param  {Number} childNum      The index of the child
 * @param  {Object} options       Parent Sortable's options
 * @return {HTMLElement}          The child at index childNum, or null if not found
 */


function getChild(el, childNum, options, includeDragEl) {
  var currentChild = 0,
      i = 0,
      children = el.children;

  while (i < children.length) {
    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children[i];
      }

      currentChild++;
    }

    i++;
  }

  return null;
}
/**
 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
 * @param  {HTMLElement} el       Parent element
 * @param  {selector} selector    Any other elements that should be ignored
 * @return {HTMLElement}          The last child, ignoring ghostEl
 */


function lastChild(el, selector) {
  var last = el.lastElementChild;

  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {
    last = last.previousElementSibling;
  }

  return last || null;
}
/**
 * Returns the index of an element within its parent for a selected set of
 * elements
 * @param  {HTMLElement} el
 * @param  {selector} selector
 * @return {number}
 */


function index(el, selector) {
  var index = 0;

  if (!el || !el.parentNode) {
    return -1;
  }
  /* jshint boss:true */


  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index++;
    }
  }

  return index;
}
/**
 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
 * The value is returned in real pixels.
 * @param  {HTMLElement} el
 * @return {Array}             Offsets in the format of [left, top]
 */


function getRelativeScrollOffset(el) {
  var offsetLeft = 0,
      offsetTop = 0,
      winScroller = getWindowScrollingElement();

  if (el) {
    do {
      var elMatrix = matrix(el),
          scaleX = elMatrix.a,
          scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }

  return [offsetLeft, offsetTop];
}
/**
 * Returns the index of the object within the given array
 * @param  {Array} arr   Array that may or may not hold the object
 * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find
 * @return {Number}      The index of the object in the array, or -1
 */


function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i)) continue;

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);
    }
  }

  return -1;
}

function getParentAutoScrollElement(el, includeSelf) {
  // skip to window
  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;

  do {
    // we don't need to get elem css if it isn't even overflowing in the first place (performance)
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);

      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {
        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();
        if (gotSelf || includeSelf) return elem;
        gotSelf = true;
      }
    }
    /* jshint boss:true */

  } while (elem = elem.parentNode);

  return getWindowScrollingElement();
}

function extend(dst, src) {
  if (dst && src) {
    for (var key in src) {
      if (src.hasOwnProperty(key)) {
        dst[key] = src[key];
      }
    }
  }

  return dst;
}

function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}

var _throttleTimeout;

function throttle(callback, ms) {
  return function () {
    if (!_throttleTimeout) {
      var args = arguments,
          _this = this;

      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }

      _throttleTimeout = setTimeout(function () {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}

function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}

function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}

function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;

  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}

function setRect(el, rect) {
  css(el, 'position', 'absolute');
  css(el, 'top', rect.top);
  css(el, 'left', rect.left);
  css(el, 'width', rect.width);
  css(el, 'height', rect.height);
}

function unsetRect(el) {
  css(el, 'position', '');
  css(el, 'top', '');
  css(el, 'left', '');
  css(el, 'width', '');
  css(el, 'height', '');
}

var expando = 'Sortable' + new Date().getTime();

function AnimationStateManager() {
  var animationStates = [],
      animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation) return;
      var children = [].slice.call(this.el.children);
      children.forEach(function (child) {
        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });

        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation


        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);

          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }

        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target: target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;

      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === 'function') callback();
        return;
      }

      var animating = false,
          animationTime = 0;
      animationStates.forEach(function (state) {
        var time = 0,
            target = state.target,
            fromRect = target.fromRect,
            toRect = getRect(target),
            prevFromRect = target.prevFromRect,
            prevToRect = target.prevToRect,
            animatingRect = state.rect,
            targetMatrix = matrix(target, true);

        if (targetMatrix) {
          // Compensate for current animation
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }

        target.toRect = toRect;

        if (target.thisAnimationDuration) {
          // Could also check if animatingRect is between fromRect and toRect
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect
          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            // If returning to same place as started from animation and on same axis
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        } // if fromRect != toRect: animate


        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;

          if (!time) {
            time = _this.options.animation;
          }

          _this.animate(target, animatingRect, toRect, time);
        }

        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function () {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);

      if (!animating) {
        if (typeof callback === 'function') callback();
      } else {
        animationCallbackId = setTimeout(function () {
          if (typeof callback === 'function') callback();
        }, animationTime);
      }

      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, 'transition', '');
        css(target, 'transform', '');
        var elMatrix = matrix(this.el),
            scaleX = elMatrix && elMatrix.a,
            scaleY = elMatrix && elMatrix.d,
            translateX = (currentRect.left - toRect.left) / (scaleX || 1),
            translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');
        this.forRepaintDummy = repaint(target); // repaint

        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
        css(target, 'transform', 'translate3d(0,0,0)');
        typeof target.animated === 'number' && clearTimeout(target.animated);
        target.animated = setTimeout(function () {
          css(target, 'transition', '');
          css(target, 'transform', '');
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}

function repaint(target) {
  return target.offsetWidth;
}

function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}

var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    // Set default static properties
    for (var option in defaults) {
      if (defaults.hasOwnProperty(option) && !(option in plugin)) {
        plugin[option] = defaults[option];
      }
    }

    plugins.forEach(function (p) {
      if (p.pluginName === plugin.pluginName) {
        throw "Sortable: Cannot mount plugin ".concat(plugin.pluginName, " more than once");
      }
    });
    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;

    this.eventCanceled = false;

    evt.cancel = function () {
      _this.eventCanceled = true;
    };

    var eventNameGlobal = eventName + 'Global';
    plugins.forEach(function (plugin) {
      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable

      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({
          sortable: sortable
        }, evt));
      } // Only fire plugin event if plugin is enabled in this sortable,
      // and plugin has event defined


      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread2({
          sortable: sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults, options) {
    plugins.forEach(function (plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized; // Add default options from plugin

      _extends(defaults, initialized.defaults);
    });

    for (var option in sortable.options) {
      if (!sortable.options.hasOwnProperty(option)) continue;
      var modified = this.modifyOption(sortable, option, sortable.options[option]);

      if (typeof modified !== 'undefined') {
        sortable.options[option] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function (plugin) {
      if (typeof plugin.eventProperties !== 'function') return;

      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function (plugin) {
      // Plugin must exist on the Sortable
      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin

      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};

function dispatchEvent(_ref) {
  var sortable = _ref.sortable,
      rootEl = _ref.rootEl,
      name = _ref.name,
      targetEl = _ref.targetEl,
      cloneEl = _ref.cloneEl,
      toEl = _ref.toEl,
      fromEl = _ref.fromEl,
      oldIndex = _ref.oldIndex,
      newIndex = _ref.newIndex,
      oldDraggableIndex = _ref.oldDraggableIndex,
      newDraggableIndex = _ref.newDraggableIndex,
      originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl && rootEl[expando];
  if (!sortable) return;
  var evt,
      options = sortable.options,
      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent(name, true, true);
  }

  evt.to = toEl || rootEl;
  evt.from = fromEl || rootEl;
  evt.item = targetEl || rootEl;
  evt.clone = cloneEl;
  evt.oldIndex = oldIndex;
  evt.newIndex = newIndex;
  evt.oldDraggableIndex = oldDraggableIndex;
  evt.newDraggableIndex = newDraggableIndex;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));

  for (var option in allEventProperties) {
    evt[option] = allEventProperties[option];
  }

  if (rootEl) {
    rootEl.dispatchEvent(evt);
  }

  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}

var _excluded = ["evt"];

var pluginEvent = function pluginEvent(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      originalEvent = _ref.evt,
      data = _objectWithoutProperties(_ref, _excluded);

  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({
    dragEl: dragEl,
    parentEl: parentEl,
    ghostEl: ghostEl,
    rootEl: rootEl,
    nextEl: nextEl,
    lastDownEl: lastDownEl,
    cloneEl: cloneEl,
    cloneHidden: cloneHidden,
    dragStarted: moved,
    putSortable: putSortable,
    activeSortable: Sortable.active,
    originalEvent: originalEvent,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable: sortable,
        name: name,
        originalEvent: originalEvent
      });
    }
  }, data));
};

function _dispatchEvent(info) {
  dispatchEvent(_objectSpread2({
    putSortable: putSortable,
    cloneEl: cloneEl,
    targetEl: dragEl,
    rootEl: rootEl,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex
  }, info));
}

var dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    oldIndex,
    newIndex,
    oldDraggableIndex,
    newDraggableIndex,
    activeGroup,
    putSortable,
    awaitingDragStarted = false,
    ignoreNextClick = false,
    sortables = [],
    tapEvt,
    touchEvt,
    lastDx,
    lastDy,
    tapDistanceLeft,
    tapDistanceTop,
    moved,
    lastTarget,
    lastDirection,
    pastFirstInvertThresh = false,
    isCircumstantialInvert = false,
    targetMoveDistance,
    // For positioning ghost absolutely
ghostRelativeParent,
    ghostRelativeParentInitialScroll = [],
    // (left, top)
_silent = false,
    savedInputChecked = [];
/** @const */

var documentExists = typeof document !== 'undefined',
    PositionGhostAbsolutely = IOS,
    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',
    // This will not pass for IE9, because IE9 DnD only works on anchors
supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),
    supportCssPointerEvents = function () {
  if (!documentExists) return; // false when <= IE11

  if (IE11OrLess) {
    return false;
  }

  var el = document.createElement('x');
  el.style.cssText = 'pointer-events:auto';
  return el.style.pointerEvents === 'auto';
}(),
    _detectDirection = function _detectDirection(el, options) {
  var elCSS = css(el),
      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),
      child1 = getChild(el, 0, options),
      child2 = getChild(el, 1, options),
      firstChildCSS = child1 && css(child1),
      secondChildCSS = child2 && css(child2),
      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,
      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;

  if (elCSS.display === 'flex') {
    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';
  }

  if (elCSS.display === 'grid') {
    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
  }

  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== 'none') {
    var touchingSideChild2 = firstChildCSS["float"] === 'left' ? 'left' : 'right';
    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';
  }

  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';
},
    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,
      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,
      dragElOppLength = vertical ? dragRect.width : dragRect.height,
      targetS1Opp = vertical ? targetRect.left : targetRect.top,
      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,
      targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
},

/**
 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
 * @param  {Number} x      X position
 * @param  {Number} y      Y position
 * @return {HTMLElement}   Element of the first found nearest Sortable
 */
_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {
  var ret;
  sortables.some(function (sortable) {
    var threshold = sortable[expando].options.emptyInsertThreshold;
    if (!threshold || lastChild(sortable)) return;
    var rect = getRect(sortable),
        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,
        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;

    if (insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
},
    _prepareGroup = function _prepareGroup(options) {
  function toFn(value, pull) {
    return function (to, from, dragEl, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;

      if (value == null && (pull || sameGroup)) {
        // Default pull value
        // Default pull and put value if same group
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === 'clone') {
        return value;
      } else if (typeof value === 'function') {
        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }

  var group = {};
  var originalGroup = options.group;

  if (!originalGroup || _typeof(originalGroup) != 'object') {
    originalGroup = {
      name: originalGroup
    };
  }

  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
},
    _hideGhostForTarget = function _hideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', 'none');
  }
},
    _unhideGhostForTarget = function _unhideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', '');
  }
}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position


if (documentExists && !ChromeForAndroid) {
  document.addEventListener('click', function (evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}

var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;

    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

    if (nearest) {
      // Create imitation event
      var event = {};

      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }

      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;

      nearest[expando]._onDragOver(event);
    }
  }
};

var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
/**
 * @class  Sortable
 * @param  {HTMLElement}  el
 * @param  {Object}       [options]
 */


function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }

  this.el = el; // root element

  this.options = options = _extends({}, options); // Export instance

  el[expando] = this;
  var defaults = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: false,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: 'sortable-ghost',
    chosenClass: 'sortable-chosen',
    dragClass: 'sortable-drag',
    ignore: 'a, img',
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl) {
      dataTransfer.setData('Text', dragEl.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: 'data-id',
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: 'sortable-fallback',
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults); // Set default options

  for (var name in defaults) {
    !(name in options) && (options[name] = defaults[name]);
  }

  _prepareGroup(options); // Bind all private methods


  for (var fn in this) {
    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
      this[fn] = this[fn].bind(this);
    }
  } // Setup drag mode


  this.nativeDraggable = options.forceFallback ? false : supportDraggable;

  if (this.nativeDraggable) {
    // Touch start threshold cannot be greater than the native dragstart threshold
    this.options.touchStartThreshold = 1;
  } // Bind events


  if (options.supportPointer) {
    on(el, 'pointerdown', this._onTapStart);
  } else {
    on(el, 'mousedown', this._onTapStart);
    on(el, 'touchstart', this._onTapStart);
  }

  if (this.nativeDraggable) {
    on(el, 'dragover', this);
    on(el, 'dragenter', this);
  }

  sortables.push(this.el); // Restore sorting

  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager

  _extends(this, AnimationStateManager());
}

Sortable.prototype =
/** @lends Sortable.prototype */
{
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(
  /** Event|TouchEvent */
  evt) {
    if (!evt.cancelable) return;

    var _this = this,
        el = this.el,
        options = this.options,
        preventOnFilter = options.preventOnFilter,
        type = evt.type,
        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,
        target = (touch || evt).target,
        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,
        filter = options.filter;

    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.


    if (dragEl) {
      return;
    }

    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return; // only left button and enabled
    } // cancel dnd if original target is content editable


    if (originalTarget.isContentEditable) {
      return;
    } // Safari ignores further event handling after mousedown


    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {
      return;
    }

    target = closest(target, options.draggable, el, false);

    if (target && target.animated) {
      return;
    }

    if (lastDownEl === target) {
      // Ignoring duplicate `down`
      return;
    } // Get the index of the dragged element within its parent


    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable); // Check filter

    if (typeof filter === 'function') {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: 'filter',
          targetEl: target,
          toEl: el,
          fromEl: el
        });

        pluginEvent('filter', _this, {
          evt: evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    } else if (filter) {
      filter = filter.split(',').some(function (criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);

        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: 'filter',
            targetEl: target,
            fromEl: el,
            toEl: el
          });

          pluginEvent('filter', _this, {
            evt: evt
          });
          return true;
        }
      });

      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    }

    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    } // Prepare `dragstart`


    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(
  /** Event */
  evt,
  /** Touch */
  touch,
  /** HTMLElement */
  target) {
    var _this = this,
        el = _this.el,
        options = _this.options,
        ownerDocument = el.ownerDocument,
        dragStartFn;

    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style['will-change'] = 'all';

      dragStartFn = function dragStartFn() {
        pluginEvent('delayEnded', _this, {
          evt: evt
        });

        if (Sortable.eventCanceled) {
          _this._onDrop();

          return;
        } // Delayed drag has been triggered
        // we can re-enable the events: touchmove/mousemove


        _this._disableDelayedDragEvents();

        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        } // Bind the events: dragstart/dragend


        _this._triggerDragStart(evt, touch); // Drag start event


        _dispatchEvent({
          sortable: _this,
          name: 'choose',
          originalEvent: evt
        }); // Chosen item


        toggleClass(dragEl, options.chosenClass, true);
      }; // Disable "draggable"


      options.ignore.split(',').forEach(function (criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mouseup', _this._onDrop);
      on(ownerDocument, 'touchend', _this._onDrop);
      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)

      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }

      pluginEvent('delayStart', this, {
        evt: evt
      }); // Delay is impossible for native DnD in Edge or IE

      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();

          return;
        } // If the user moves the pointer or let go the click or touch
        // before the delay has been reached:
        // disable the delayed drag


        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
        on(ownerDocument, 'touchend', _this._disableDelayedDrag);
        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(
  /** TouchEvent|PointerEvent **/
  e) {
    var touch = e.touches ? e.touches[0] : e;

    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);

    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._disableDelayedDrag);
    off(ownerDocument, 'touchend', this._disableDelayedDrag);
    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(
  /** Event */
  evt,
  /** Touch */
  touch) {
    touch = touch || evt.pointerType == 'touch' && evt;

    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on(document, 'pointermove', this._onTouchMove);
      } else if (touch) {
        on(document, 'touchmove', this._onTouchMove);
      } else {
        on(document, 'mousemove', this._onTouchMove);
      }
    } else {
      on(dragEl, 'dragend', this);
      on(rootEl, 'dragstart', this._onDragStart);
    }

    try {
      if (document.selection) {
        // Timeout neccessary for IE9
        _nextTick(function () {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {}
  },
  _dragStarted: function _dragStarted(fallback, evt) {

    awaitingDragStarted = false;

    if (rootEl && dragEl) {
      pluginEvent('dragStarted', this, {
        evt: evt
      });

      if (this.nativeDraggable) {
        on(document, 'dragover', _checkOutsideTargetEl);
      }

      var options = this.options; // Apply effect

      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost(); // Drag start event

      _dispatchEvent({
        sortable: this,
        name: 'start',
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;

      _hideGhostForTarget();

      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent = target;

      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent) break;
        parent = target;
      }

      dragEl.parentNode[expando]._isOutsideThisEl(target);

      if (parent) {
        do {
          if (parent[expando]) {
            var inserted = void 0;
            inserted = parent[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target: target,
              rootEl: parent
            });

            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }

          target = parent; // store last element
        }
        /* jshint boss:true */
        while (parent = parent.parentNode);
      }

      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(
  /**TouchEvent*/
  evt) {
    if (tapEvt) {
      var options = this.options,
          fallbackTolerance = options.fallbackTolerance,
          fallbackOffset = options.fallbackOffset,
          touch = evt.touches ? evt.touches[0] : evt,
          ghostMatrix = ghostEl && matrix(ghostEl, true),
          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,
          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,
          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),
          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),
          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging

      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }

        this._onDragStart(evt, true);
      }

      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }

        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, 'webkitTransform', cssMatrix);
        css(ghostEl, 'mozTransform', cssMatrix);
        css(ghostEl, 'msTransform', cssMatrix);
        css(ghostEl, 'transform', cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }

      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    // Bug if using scale(): https://stackoverflow.com/questions/2637058
    // Not being adjusted for
    if (!ghostEl) {
      var container = this.options.fallbackOnBody ? document.body : rootEl,
          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),
          options = this.options; // Position absolutely

      if (PositionGhostAbsolutely) {
        // Get relatively positioned parent
        ghostRelativeParent = container;

        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }

        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }

        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }

      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, 'transition', '');
      css(ghostEl, 'transform', '');
      css(ghostEl, 'box-sizing', 'border-box');
      css(ghostEl, 'margin', 0);
      css(ghostEl, 'top', rect.top);
      css(ghostEl, 'left', rect.left);
      css(ghostEl, 'width', rect.width);
      css(ghostEl, 'height', rect.height);
      css(ghostEl, 'opacity', '0.8');
      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');
      css(ghostEl, 'zIndex', '100000');
      css(ghostEl, 'pointerEvents', 'none');
      Sortable.ghost = ghostEl;
      container.appendChild(ghostEl); // Set transform-origin

      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');
    }
  },
  _onDragStart: function _onDragStart(
  /**Event*/
  evt,
  /**boolean*/
  fallback) {
    var _this = this;

    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent('dragStart', this, {
      evt: evt
    });

    if (Sortable.eventCanceled) {
      this._onDrop();

      return;
    }

    pluginEvent('setupClone', this);

    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.removeAttribute("id");
      cloneEl.draggable = false;
      cloneEl.style['will-change'] = '';

      this._hideClone();

      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    } // #1143: IFrame support workaround


    _this.cloneId = _nextTick(function () {
      pluginEvent('clone', _this);
      if (Sortable.eventCanceled) return;

      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }

      _this._hideClone();

      _dispatchEvent({
        sortable: _this,
        name: 'clone'
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events

    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      // Undo what was set in _prepareDragStart before drag started
      off(document, 'mouseup', _this._onDrop);
      off(document, 'touchend', _this._onDrop);
      off(document, 'touchcancel', _this._onDrop);

      if (dataTransfer) {
        dataTransfer.effectAllowed = 'move';
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }

      on(document, 'drop', _this); // #1276 fix:

      css(dragEl, 'transform', 'translateZ(0)');
    }

    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on(document, 'selectstart', _this);
    moved = true;

    if (Safari) {
      css(document.body, 'user-select', 'none');
    }
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function _onDragOver(
  /**Event*/
  evt) {
    var el = this.el,
        target = evt.target,
        dragRect,
        targetRect,
        revert,
        options = this.options,
        group = options.group,
        activeSortable = Sortable.active,
        isOwner = activeGroup === group,
        canSort = options.sort,
        fromSortable = putSortable || activeSortable,
        vertical,
        _this = this,
        completedFired = false;

    if (_silent) return;

    function dragOverEvent(name, extra) {
      pluginEvent(name, _this, _objectSpread2({
        evt: evt,
        isOwner: isOwner,
        axis: vertical ? 'vertical' : 'horizontal',
        revert: revert,
        dragRect: dragRect,
        targetRect: targetRect,
        canSort: canSort,
        fromSortable: fromSortable,
        target: target,
        completed: completed,
        onMove: function onMove(target, after) {
          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);
        },
        changed: changed
      }, extra));
    } // Capture animation state


    function capture() {
      dragOverEvent('dragOverAnimationCapture');

      _this.captureAnimationState();

      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    } // Return invocation when dragEl is inserted (or completed)


    function completed(insertion) {
      dragOverEvent('dragOverCompleted', {
        insertion: insertion
      });

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }

        if (_this !== fromSortable) {
          // Set ghost class to new sortable's ghost class
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }

        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        } // Animation


        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }

        _this.animateAll(function () {
          dragOverEvent('dragOverAnimationComplete');
          _this._ignoreWhileAnimating = null;
        });

        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      } // Null lastTarget if it is not inside a previously swapped element


      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      } // no bubbling and not fallback


      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted


        !insertion && nearestEmptyInsertDetectEvent(evt);
      }

      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    } // Call when dragEl has been inserted


    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);

      _dispatchEvent({
        sortable: _this,
        name: 'change',
        toEl: el,
        newIndex: newIndex,
        newDraggableIndex: newDraggableIndex,
        originalEvent: evt
      });
    }

    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }

    target = closest(target, options.draggable, el, true);
    dragOverEvent('dragOver');
    if (Sortable.eventCanceled) return completedFired;

    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }

    ignoreNextClick = false;

    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list
    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === 'vertical';
      dragRect = getRect(dragEl);
      dragOverEvent('dragOverValid');
      if (Sortable.eventCanceled) return completedFired;

      if (revert) {
        parentEl = rootEl; // actualization

        capture();

        this._hideClone();

        dragOverEvent('revert');

        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }

        return completed(true);
      }

      var elLastChild = lastChild(el, options.draggable);

      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        // Insert to end of list
        // If already at end of list: Do not insert
        if (elLastChild === dragEl) {
          return completed(false);
        } // if there is a last element, it is the target


        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }

        if (target) {
          targetRect = getRect(target);
        }

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();

          if (elLastChild && elLastChild.nextSibling) {
            // the last draggable element is not the last node
            el.insertBefore(dragEl, elLastChild.nextSibling);
          } else {
            el.appendChild(dragEl);
          }

          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {
        // Insert to start of list
        var firstChild = getChild(el, 0, options, true);

        if (firstChild === dragEl) {
          return completed(false);
        }

        target = firstChild;
        targetRect = getRect(target);

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {
          capture();
          el.insertBefore(dragEl, firstChild);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0,
            targetBeforeFirstSwap,
            differentLevel = dragEl.parentNode !== el,
            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),
            side1 = vertical ? 'top' : 'left',
            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),
            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;

        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }

        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;

        if (direction !== 0) {
          // Check if target is beside dragEl in respective direction (ignoring hidden elements)
          var dragIndex = index(dragEl);

          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));
        } // If dragEl is already beside target: Do not insert


        if (direction === 0 || sibling === target) {
          return completed(false);
        }

        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling,
            after = false;
        after = direction === 1;

        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }

          _silent = true;
          setTimeout(_unsilent, 30);
          capture();

          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          } // Undo chrome's scroll adjustment (has no effect on other browsers)


          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }

          parentEl = dragEl.parentNode; // actualization
          // must be done before animation

          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }

          changed();
          return completed(true);
        }
      }

      if (el.contains(dragEl)) {
        return completed(false);
      }
    }

    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off(document, 'mousemove', this._onTouchMove);
    off(document, 'touchmove', this._onTouchMove);
    off(document, 'pointermove', this._onTouchMove);
    off(document, 'dragover', nearestEmptyInsertDetectEvent);
    off(document, 'mousemove', nearestEmptyInsertDetectEvent);
    off(document, 'touchmove', nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._onDrop);
    off(ownerDocument, 'touchend', this._onDrop);
    off(ownerDocument, 'pointerup', this._onDrop);
    off(ownerDocument, 'touchcancel', this._onDrop);
    off(document, 'selectstart', this);
  },
  _onDrop: function _onDrop(
  /**Event*/
  evt) {
    var el = this.el,
        options = this.options; // Get the index of the dragged element within its parent

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent('drop', this, {
      evt: evt
    });
    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);

    if (Sortable.eventCanceled) {
      this._nulling();

      return;
    }

    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);

    _cancelNextTick(this.cloneId);

    _cancelNextTick(this._dragStartId); // Unbind events


    if (this.nativeDraggable) {
      off(document, 'drop', this);
      off(el, 'dragstart', this._onDragStart);
    }

    this._offMoveEvents();

    this._offUpEvents();

    if (Safari) {
      css(document.body, 'user-select', '');
    }

    css(dragEl, 'transform', '');

    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }

      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        // Remove clone(s)
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }

      if (dragEl) {
        if (this.nativeDraggable) {
          off(dragEl, 'dragend', this);
        }

        _disableDraggable(dragEl);

        dragEl.style['will-change'] = ''; // Remove classes
        // ghostClass is added in dragStarted

        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }

        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event

        _dispatchEvent({
          sortable: this,
          name: 'unchoose',
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });

        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            // Add event
            _dispatchEvent({
              rootEl: parentEl,
              name: 'add',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            }); // Remove event


            _dispatchEvent({
              sortable: this,
              name: 'remove',
              toEl: parentEl,
              originalEvent: evt
            }); // drag from one list and drop into another


            _dispatchEvent({
              rootEl: parentEl,
              name: 'sort',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });

            _dispatchEvent({
              sortable: this,
              name: 'sort',
              toEl: parentEl,
              originalEvent: evt
            });
          }

          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              // drag & drop within the same list
              _dispatchEvent({
                sortable: this,
                name: 'update',
                toEl: parentEl,
                originalEvent: evt
              });

              _dispatchEvent({
                sortable: this,
                name: 'sort',
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }

        if (Sortable.active) {
          /* jshint eqnull:true */
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }

          _dispatchEvent({
            sortable: this,
            name: 'end',
            toEl: parentEl,
            originalEvent: evt
          }); // Save sorting


          this.save();
        }
      }
    }

    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent('nulling', this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function (el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(
  /**Event*/
  evt) {
    switch (evt.type) {
      case 'drop':
      case 'dragend':
        this._onDrop(evt);

        break;

      case 'dragenter':
      case 'dragover':
        if (dragEl) {
          this._onDragOver(evt);

          _globalDragOver(evt);
        }

        break;

      case 'selectstart':
        evt.preventDefault();
        break;
    }
  },

  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function toArray() {
    var order = [],
        el,
        children = this.el.children,
        i = 0,
        n = children.length,
        options = this.options;

    for (; i < n; i++) {
      el = children[i];

      if (closest(el, options.draggable, this.el, false)) {
        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }

    return order;
  },

  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function sort(order, useAnimation) {
    var items = {},
        rootEl = this.el;
    this.toArray().forEach(function (id, i) {
      var el = rootEl.children[i];

      if (closest(el, this.options.draggable, rootEl, false)) {
        items[id] = el;
      }
    }, this);
    useAnimation && this.captureAnimationState();
    order.forEach(function (id) {
      if (items[id]) {
        rootEl.removeChild(items[id]);
        rootEl.appendChild(items[id]);
      }
    });
    useAnimation && this.animateAll();
  },

  /**
   * Save the current sorting
   */
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },

  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },

  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function option(name, value) {
    var options = this.options;

    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);

      if (typeof modifiedValue !== 'undefined') {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }

      if (name === 'group') {
        _prepareGroup(options);
      }
    }
  },

  /**
   * Destroy
   */
  destroy: function destroy() {
    pluginEvent('destroy', this);
    var el = this.el;
    el[expando] = null;
    off(el, 'mousedown', this._onTapStart);
    off(el, 'touchstart', this._onTapStart);
    off(el, 'pointerdown', this._onTapStart);

    if (this.nativeDraggable) {
      off(el, 'dragover', this);
      off(el, 'dragenter', this);
    } // Remove draggable attributes


    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
      el.removeAttribute('draggable');
    });

    this._onDrop();

    this._disableDelayedDragEvents();

    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent('hideClone', this);
      if (Sortable.eventCanceled) return;
      css(cloneEl, 'display', 'none');

      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }

      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable) {
    if (putSortable.lastPutMode !== 'clone') {
      this._hideClone();

      return;
    }

    if (cloneHidden) {
      pluginEvent('showClone', this);
      if (Sortable.eventCanceled) return; // show clone at dragEl or original position

      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }

      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }

      css(cloneEl, 'display', '');
      cloneHidden = false;
    }
  }
};

function _globalDragOver(
/**Event*/
evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = 'move';
  }

  evt.cancelable && evt.preventDefault();
}

function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt,
      sortable = fromEl[expando],
      onMoveFn = sortable.options.onMove,
      retVal; // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent('move', {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent('move', true, true);
  }

  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);

  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }

  return retVal;
}

function _disableDraggable(el) {
  el.draggable = false;
}

function _unsilent() {
  _silent = false;
}

function _ghostIsFirst(evt, vertical, sortable) {
  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));
  var spacer = 10;
  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;
}

function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}

function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,
      targetLength = vertical ? targetRect.height : targetRect.width,
      targetS1 = vertical ? targetRect.top : targetRect.left,
      targetS2 = vertical ? targetRect.bottom : targetRect.right,
      invert = false;

  if (!invertSwap) {
    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
      // check if past first invert threshold on side opposite of lastDirection
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        // past first invert threshold, do not restrict inverted threshold to dragEl shadow
        pastFirstInvertThresh = true;
      }

      if (!pastFirstInvertThresh) {
        // dragEl shadow (target move distance shadow)
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
        : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      // Regular
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }

  invert = invert || invertSwap;

  if (invert) {
    // Invert of regular
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }

  return 0;
}
/**
 * Gets the direction dragEl must be swapped relative to target in order to make it
 * seem that dragEl has been "inserted" into that element's position
 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
 * @return {Number}                   Direction dragEl must be swapped
 */


function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
/**
 * Generate id
 * @param   {HTMLElement} el
 * @returns {String}
 * @private
 */


function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent,
      i = str.length,
      sum = 0;

  while (i--) {
    sum += str.charCodeAt(i);
  }

  return sum.toString(36);
}

function _saveInputCheckedState(root) {
  savedInputChecked.length = 0;
  var inputs = root.getElementsByTagName('input');
  var idx = inputs.length;

  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}

function _nextTick(fn) {
  return setTimeout(fn, 0);
}

function _cancelNextTick(id) {
  return clearTimeout(id);
} // Fixed #973:


if (documentExists) {
  on(document, 'touchmove', function (evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
} // Export utils


Sortable.utils = {
  on: on,
  off: off,
  css: css,
  find: find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend: extend,
  throttle: throttle,
  closest: closest,
  toggleClass: toggleClass,
  clone: clone,
  index: index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild: getChild
};
/**
 * Get the Sortable instance of an element
 * @param  {HTMLElement} element The element
 * @return {Sortable|undefined}         The instance of Sortable
 */

Sortable.get = function (element) {
  return element[expando];
};
/**
 * Mount a plugin to Sortable
 * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted
 */


Sortable.mount = function () {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins[0].constructor === Array) plugins = plugins[0];
  plugins.forEach(function (plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }

    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);
    PluginManager.mount(plugin);
  });
};
/**
 * Create sortable instance
 * @param {HTMLElement}  el
 * @param {Object}      [options]
 */


Sortable.create = function (el, options) {
  return new Sortable(el, options);
}; // Export


Sortable.version = version;

var autoScrolls = [],
    scrollEl,
    scrollRootEl,
    scrolling = false,
    lastAutoScrollX,
    lastAutoScrollY,
    touchEvt$1,
    pointerElemChangedInterval;

function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      forceAutoScrollFallback: false,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    }; // Bind all private methods

    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }
  }

  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;

      if (this.sortable.nativeDraggable) {
        on(document, 'dragover', this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on(document, 'pointermove', this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on(document, 'touchmove', this._handleFallbackAutoScroll);
        } else {
          on(document, 'mousemove', this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;

      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop() {
      if (this.sortable.nativeDraggable) {
        off(document, 'dragover', this._handleAutoScroll);
      } else {
        off(document, 'pointermove', this._handleFallbackAutoScroll);
        off(document, 'touchmove', this._handleFallbackAutoScroll);
        off(document, 'mousemove', this._handleFallbackAutoScroll);
      }

      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;

      var x = (evt.touches ? evt.touches[0] : evt).clientX,
          y = (evt.touches ? evt.touches[0] : evt).clientY,
          elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt; // IE does not seem to have native autoscroll,
      // Edge's autoscroll seems too conditional,
      // MACOS Safari does not have autoscroll,
      // Firefox and Chrome are good

      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change

        var ogElemScroller = getParentAutoScrollElement(elem, true);

        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour

          pointerElemChangedInterval = setInterval(function () {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);

            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }

            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }

        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends(AutoScroll, {
    pluginName: 'scroll',
    initializeByDefault: true
  });
}

function clearAutoScrolls() {
  autoScrolls.forEach(function (autoScroll) {
    clearInterval(autoScroll.pid);
  });
  autoScrolls = [];
}

function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}

var autoScroll = throttle(function (evt, options, rootEl, isFallback) {
  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
  if (!options.scroll) return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX,
      y = (evt.touches ? evt.touches[0] : evt).clientY,
      sens = options.scrollSensitivity,
      speed = options.scrollSpeed,
      winScroller = getWindowScrollingElement();
  var scrollThisInstance = false,
      scrollCustomFn; // New scroll root, set scrollEl

  if (scrollRootEl !== rootEl) {
    scrollRootEl = rootEl;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;

    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl, true);
    }
  }

  var layersOut = 0;
  var currentParent = scrollEl;

  do {
    var el = currentParent,
        rect = getRect(el),
        top = rect.top,
        bottom = rect.bottom,
        left = rect.left,
        right = rect.right,
        width = rect.width,
        height = rect.height,
        canScrollX = void 0,
        canScrollY = void 0,
        scrollWidth = el.scrollWidth,
        scrollHeight = el.scrollHeight,
        elCSS = css(el),
        scrollPosX = el.scrollLeft,
        scrollPosY = el.scrollTop;

    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');
    }

    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);

    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }

    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);

      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        /* jshint loopfunc:true */

        autoScrolls[layersOut].pid = setInterval(function () {
          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely

          }

          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

          if (typeof scrollCustomFn === 'function') {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {
              return;
            }
          }

          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }

    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));

  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
}, 30);

var drop = function drop(_ref) {
  var originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      dragEl = _ref.dragEl,
      activeSortable = _ref.activeSortable,
      dispatchSortableEvent = _ref.dispatchSortableEvent,
      hideGhostForTarget = _ref.hideGhostForTarget,
      unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent) return;
  var toSortable = putSortable || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();

  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent('spill');
    this.onSpill({
      dragEl: dragEl,
      putSortable: putSortable
    });
  }
};

function Revert() {}

Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl = _ref3.dragEl,
        putSortable = _ref3.putSortable;
    this.sortable.captureAnimationState();

    if (putSortable) {
      putSortable.captureAnimationState();
    }

    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);

    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl);
    }

    this.sortable.animateAll();

    if (putSortable) {
      putSortable.animateAll();
    }
  },
  drop: drop
};

_extends(Revert, {
  pluginName: 'revertOnSpill'
});

function Remove() {}

Remove.prototype = {
  onSpill: function onSpill(_ref4) {
    var dragEl = _ref4.dragEl,
        putSortable = _ref4.putSortable;
    var parentSortable = putSortable || this.sortable;
    parentSortable.captureAnimationState();
    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);
    parentSortable.animateAll();
  },
  drop: drop
};

_extends(Remove, {
  pluginName: 'removeOnSpill'
});

var lastSwapEl;

function SwapPlugin() {
  function Swap() {
    this.defaults = {
      swapClass: 'sortable-swap-highlight'
    };
  }

  Swap.prototype = {
    dragStart: function dragStart(_ref) {
      var dragEl = _ref.dragEl;
      lastSwapEl = dragEl;
    },
    dragOverValid: function dragOverValid(_ref2) {
      var completed = _ref2.completed,
          target = _ref2.target,
          onMove = _ref2.onMove,
          activeSortable = _ref2.activeSortable,
          changed = _ref2.changed,
          cancel = _ref2.cancel;
      if (!activeSortable.options.swap) return;
      var el = this.sortable.el,
          options = this.options;

      if (target && target !== el) {
        var prevSwapEl = lastSwapEl;

        if (onMove(target) !== false) {
          toggleClass(target, options.swapClass, true);
          lastSwapEl = target;
        } else {
          lastSwapEl = null;
        }

        if (prevSwapEl && prevSwapEl !== lastSwapEl) {
          toggleClass(prevSwapEl, options.swapClass, false);
        }
      }

      changed();
      completed(true);
      cancel();
    },
    drop: function drop(_ref3) {
      var activeSortable = _ref3.activeSortable,
          putSortable = _ref3.putSortable,
          dragEl = _ref3.dragEl;
      var toSortable = putSortable || this.sortable;
      var options = this.options;
      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);

      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {
        if (dragEl !== lastSwapEl) {
          toSortable.captureAnimationState();
          if (toSortable !== activeSortable) activeSortable.captureAnimationState();
          swapNodes(dragEl, lastSwapEl);
          toSortable.animateAll();
          if (toSortable !== activeSortable) activeSortable.animateAll();
        }
      }
    },
    nulling: function nulling() {
      lastSwapEl = null;
    }
  };
  return _extends(Swap, {
    pluginName: 'swap',
    eventProperties: function eventProperties() {
      return {
        swapItem: lastSwapEl
      };
    }
  });
}

function swapNodes(n1, n2) {
  var p1 = n1.parentNode,
      p2 = n2.parentNode,
      i1,
      i2;
  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;
  i1 = index(n1);
  i2 = index(n2);

  if (p1.isEqualNode(p2) && i1 < i2) {
    i2++;
  }

  p1.insertBefore(n2, p1.children[i1]);
  p2.insertBefore(n1, p2.children[i2]);
}

var multiDragElements = [],
    multiDragClones = [],
    lastMultiDragSelect,
    // for selection with modifier key down (SHIFT)
multiDragSortable,
    initialFolding = false,
    // Initial multi-drag fold when drag started
folding = false,
    // Folding any other time
dragStarted = false,
    dragEl$1,
    clonesFromRect,
    clonesHidden;

function MultiDragPlugin() {
  function MultiDrag(sortable) {
    // Bind all private methods
    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }

    if (!sortable.options.avoidImplicitDeselect) {
      if (sortable.options.supportPointer) {
        on(document, 'pointerup', this._deselectMultiDrag);
      } else {
        on(document, 'mouseup', this._deselectMultiDrag);
        on(document, 'touchend', this._deselectMultiDrag);
      }
    }

    on(document, 'keydown', this._checkKeyDown);
    on(document, 'keyup', this._checkKeyUp);
    this.defaults = {
      selectedClass: 'sortable-selected',
      multiDragKey: null,
      avoidImplicitDeselect: false,
      setData: function setData(dataTransfer, dragEl) {
        var data = '';

        if (multiDragElements.length && multiDragSortable === sortable) {
          multiDragElements.forEach(function (multiDragElement, i) {
            data += (!i ? '' : ', ') + multiDragElement.textContent;
          });
        } else {
          data = dragEl.textContent;
        }

        dataTransfer.setData('Text', data);
      }
    };
  }

  MultiDrag.prototype = {
    multiDragKeyDown: false,
    isMultiDrag: false,
    delayStartGlobal: function delayStartGlobal(_ref) {
      var dragged = _ref.dragEl;
      dragEl$1 = dragged;
    },
    delayEnded: function delayEnded() {
      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);
    },
    setupClone: function setupClone(_ref2) {
      var sortable = _ref2.sortable,
          cancel = _ref2.cancel;
      if (!this.isMultiDrag) return;

      for (var i = 0; i < multiDragElements.length; i++) {
        multiDragClones.push(clone(multiDragElements[i]));
        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;
        multiDragClones[i].draggable = false;
        multiDragClones[i].style['will-change'] = '';
        toggleClass(multiDragClones[i], this.options.selectedClass, false);
        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);
      }

      sortable._hideClone();

      cancel();
    },
    clone: function clone(_ref3) {
      var sortable = _ref3.sortable,
          rootEl = _ref3.rootEl,
          dispatchSortableEvent = _ref3.dispatchSortableEvent,
          cancel = _ref3.cancel;
      if (!this.isMultiDrag) return;

      if (!this.options.removeCloneOnHide) {
        if (multiDragElements.length && multiDragSortable === sortable) {
          insertMultiDragClones(true, rootEl);
          dispatchSortableEvent('clone');
          cancel();
        }
      }
    },
    showClone: function showClone(_ref4) {
      var cloneNowShown = _ref4.cloneNowShown,
          rootEl = _ref4.rootEl,
          cancel = _ref4.cancel;
      if (!this.isMultiDrag) return;
      insertMultiDragClones(false, rootEl);
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', '');
      });
      cloneNowShown();
      clonesHidden = false;
      cancel();
    },
    hideClone: function hideClone(_ref5) {
      var _this = this;

      var sortable = _ref5.sortable,
          cloneNowHidden = _ref5.cloneNowHidden,
          cancel = _ref5.cancel;
      if (!this.isMultiDrag) return;
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', 'none');

        if (_this.options.removeCloneOnHide && clone.parentNode) {
          clone.parentNode.removeChild(clone);
        }
      });
      cloneNowHidden();
      clonesHidden = true;
      cancel();
    },
    dragStartGlobal: function dragStartGlobal(_ref6) {
      var sortable = _ref6.sortable;

      if (!this.isMultiDrag && multiDragSortable) {
        multiDragSortable.multiDrag._deselectMultiDrag();
      }

      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.sortableIndex = index(multiDragElement);
      }); // Sort multi-drag elements

      multiDragElements = multiDragElements.sort(function (a, b) {
        return a.sortableIndex - b.sortableIndex;
      });
      dragStarted = true;
    },
    dragStarted: function dragStarted(_ref7) {
      var _this2 = this;

      var sortable = _ref7.sortable;
      if (!this.isMultiDrag) return;

      if (this.options.sort) {
        // Capture rects,
        // hide multi drag elements (by positioning them absolute),
        // set multi drag elements rects to dragRect,
        // show multi drag elements,
        // animate to rects,
        // unset rects & remove from DOM
        sortable.captureAnimationState();

        if (this.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            css(multiDragElement, 'position', 'absolute');
          });
          var dragRect = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRect);
          });
          folding = true;
          initialFolding = true;
        }
      }

      sortable.animateAll(function () {
        folding = false;
        initialFolding = false;

        if (_this2.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
        } // Remove all auxiliary multidrag items from el, if sorting enabled


        if (_this2.options.sort) {
          removeMultiDragElements();
        }
      });
    },
    dragOver: function dragOver(_ref8) {
      var target = _ref8.target,
          completed = _ref8.completed,
          cancel = _ref8.cancel;

      if (folding && ~multiDragElements.indexOf(target)) {
        completed(false);
        cancel();
      }
    },
    revert: function revert(_ref9) {
      var fromSortable = _ref9.fromSortable,
          rootEl = _ref9.rootEl,
          sortable = _ref9.sortable,
          dragRect = _ref9.dragRect;

      if (multiDragElements.length > 1) {
        // Setup unfold animation
        multiDragElements.forEach(function (multiDragElement) {
          sortable.addAnimationState({
            target: multiDragElement,
            rect: folding ? getRect(multiDragElement) : dragRect
          });
          unsetRect(multiDragElement);
          multiDragElement.fromRect = dragRect;
          fromSortable.removeAnimationState(multiDragElement);
        });
        folding = false;
        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref10) {
      var sortable = _ref10.sortable,
          isOwner = _ref10.isOwner,
          insertion = _ref10.insertion,
          activeSortable = _ref10.activeSortable,
          parentEl = _ref10.parentEl,
          putSortable = _ref10.putSortable;
      var options = this.options;

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        }

        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location

        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {
          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible
          var dragRectAbsolute = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted
            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable

            parentEl.appendChild(multiDragElement);
          });
          folding = true;
        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out


        if (!isOwner) {
          // Only remove if not folding (folding will remove them anyways)
          if (!folding) {
            removeMultiDragElements();
          }

          if (multiDragElements.length > 1) {
            var clonesHiddenBefore = clonesHidden;

            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden


            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {
              multiDragClones.forEach(function (clone) {
                activeSortable.addAnimationState({
                  target: clone,
                  rect: clonesFromRect
                });
                clone.fromRect = clonesFromRect;
                clone.thisAnimationDuration = null;
              });
            }
          } else {
            activeSortable._showClone(sortable);
          }
        }
      }
    },
    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {
      var dragRect = _ref11.dragRect,
          isOwner = _ref11.isOwner,
          activeSortable = _ref11.activeSortable;
      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.thisAnimationDuration = null;
      });

      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {
        clonesFromRect = _extends({}, dragRect);
        var dragMatrix = matrix(dragEl$1, true);
        clonesFromRect.top -= dragMatrix.f;
        clonesFromRect.left -= dragMatrix.e;
      }
    },
    dragOverAnimationComplete: function dragOverAnimationComplete() {
      if (folding) {
        folding = false;
        removeMultiDragElements();
      }
    },
    drop: function drop(_ref12) {
      var evt = _ref12.originalEvent,
          rootEl = _ref12.rootEl,
          parentEl = _ref12.parentEl,
          sortable = _ref12.sortable,
          dispatchSortableEvent = _ref12.dispatchSortableEvent,
          oldIndex = _ref12.oldIndex,
          putSortable = _ref12.putSortable;
      var toSortable = putSortable || this.sortable;
      if (!evt) return;
      var options = this.options,
          children = parentEl.children; // Multi-drag selection

      if (!dragStarted) {
        if (options.multiDragKey && !this.multiDragKeyDown) {
          this._deselectMultiDrag();
        }

        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));

        if (!~multiDragElements.indexOf(dragEl$1)) {
          multiDragElements.push(dragEl$1);
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'select',
            targetEl: dragEl$1,
            originalEvent: evt
          }); // Modifier activated, select from last to dragEl

          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {
            var lastIndex = index(lastMultiDragSelect),
                currentIndex = index(dragEl$1);

            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {
              // Must include lastMultiDragSelect (select it), in case modified selection from no selection
              // (but previous selection existed)
              var n, i;

              if (currentIndex > lastIndex) {
                i = lastIndex;
                n = currentIndex;
              } else {
                i = currentIndex;
                n = lastIndex + 1;
              }

              for (; i < n; i++) {
                if (~multiDragElements.indexOf(children[i])) continue;
                toggleClass(children[i], options.selectedClass, true);
                multiDragElements.push(children[i]);
                dispatchEvent({
                  sortable: sortable,
                  rootEl: rootEl,
                  name: 'select',
                  targetEl: children[i],
                  originalEvent: evt
                });
              }
            }
          } else {
            lastMultiDragSelect = dragEl$1;
          }

          multiDragSortable = toSortable;
        } else {
          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);
          lastMultiDragSelect = null;
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'deselect',
            targetEl: dragEl$1,
            originalEvent: evt
          });
        }
      } // Multi-drag drop


      if (dragStarted && this.isMultiDrag) {
        folding = false; // Do not "unfold" after around dragEl if reverted

        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {
          var dragRect = getRect(dragEl$1),
              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');
          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;
          toSortable.captureAnimationState();

          if (!initialFolding) {
            if (options.animation) {
              dragEl$1.fromRect = dragRect;
              multiDragElements.forEach(function (multiDragElement) {
                multiDragElement.thisAnimationDuration = null;

                if (multiDragElement !== dragEl$1) {
                  var rect = folding ? getRect(multiDragElement) : dragRect;
                  multiDragElement.fromRect = rect; // Prepare unfold animation

                  toSortable.addAnimationState({
                    target: multiDragElement,
                    rect: rect
                  });
                }
              });
            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert
            // properly they must all be removed


            removeMultiDragElements();
            multiDragElements.forEach(function (multiDragElement) {
              if (children[multiDragIndex]) {
                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);
              } else {
                parentEl.appendChild(multiDragElement);
              }

              multiDragIndex++;
            }); // If initial folding is done, the elements may have changed position because they are now
            // unfolding around dragEl, even though dragEl may not have his index changed, so update event
            // must be fired here as Sortable will not.

            if (oldIndex === index(dragEl$1)) {
              var update = false;
              multiDragElements.forEach(function (multiDragElement) {
                if (multiDragElement.sortableIndex !== index(multiDragElement)) {
                  update = true;
                  return;
                }
              });

              if (update) {
                dispatchSortableEvent('update');
              }
            }
          } // Must be done after capturing individual rects (scroll bar)


          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
          toSortable.animateAll();
        }

        multiDragSortable = toSortable;
      } // Remove clones if necessary


      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        multiDragClones.forEach(function (clone) {
          clone.parentNode && clone.parentNode.removeChild(clone);
        });
      }
    },
    nullingGlobal: function nullingGlobal() {
      this.isMultiDrag = dragStarted = false;
      multiDragClones.length = 0;
    },
    destroyGlobal: function destroyGlobal() {
      this._deselectMultiDrag();

      off(document, 'pointerup', this._deselectMultiDrag);
      off(document, 'mouseup', this._deselectMultiDrag);
      off(document, 'touchend', this._deselectMultiDrag);
      off(document, 'keydown', this._checkKeyDown);
      off(document, 'keyup', this._checkKeyUp);
    },
    _deselectMultiDrag: function _deselectMultiDrag(evt) {
      if (typeof dragStarted !== "undefined" && dragStarted) return; // Only deselect if selection is in this sortable

      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable

      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click

      if (evt && evt.button !== 0) return;

      while (multiDragElements.length) {
        var el = multiDragElements[0];
        toggleClass(el, this.options.selectedClass, false);
        multiDragElements.shift();
        dispatchEvent({
          sortable: this.sortable,
          rootEl: this.sortable.el,
          name: 'deselect',
          targetEl: el,
          originalEvent: evt
        });
      }
    },
    _checkKeyDown: function _checkKeyDown(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = true;
      }
    },
    _checkKeyUp: function _checkKeyUp(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = false;
      }
    }
  };
  return _extends(MultiDrag, {
    // Static methods & properties
    pluginName: 'multiDrag',
    utils: {
      /**
       * Selects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be selected
       */
      select: function select(el) {
        var sortable = el.parentNode[expando];
        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;

        if (multiDragSortable && multiDragSortable !== sortable) {
          multiDragSortable.multiDrag._deselectMultiDrag();

          multiDragSortable = sortable;
        }

        toggleClass(el, sortable.options.selectedClass, true);
        multiDragElements.push(el);
      },

      /**
       * Deselects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be deselected
       */
      deselect: function deselect(el) {
        var sortable = el.parentNode[expando],
            index = multiDragElements.indexOf(el);
        if (!sortable || !sortable.options.multiDrag || !~index) return;
        toggleClass(el, sortable.options.selectedClass, false);
        multiDragElements.splice(index, 1);
      }
    },
    eventProperties: function eventProperties() {
      var _this3 = this;

      var oldIndicies = [],
          newIndicies = [];
      multiDragElements.forEach(function (multiDragElement) {
        oldIndicies.push({
          multiDragElement: multiDragElement,
          index: multiDragElement.sortableIndex
        }); // multiDragElements will already be sorted if folding

        var newIndex;

        if (folding && multiDragElement !== dragEl$1) {
          newIndex = -1;
        } else if (folding) {
          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');
        } else {
          newIndex = index(multiDragElement);
        }

        newIndicies.push({
          multiDragElement: multiDragElement,
          index: newIndex
        });
      });
      return {
        items: _toConsumableArray(multiDragElements),
        clones: [].concat(multiDragClones),
        oldIndicies: oldIndicies,
        newIndicies: newIndicies
      };
    },
    optionListeners: {
      multiDragKey: function multiDragKey(key) {
        key = key.toLowerCase();

        if (key === 'ctrl') {
          key = 'Control';
        } else if (key.length > 1) {
          key = key.charAt(0).toUpperCase() + key.substr(1);
        }

        return key;
      }
    }
  });
}

function insertMultiDragElements(clonesInserted, rootEl) {
  multiDragElements.forEach(function (multiDragElement, i) {
    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(multiDragElement, target);
    } else {
      rootEl.appendChild(multiDragElement);
    }
  });
}
/**
 * Insert multi-drag clones
 * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted
 * @param  {HTMLElement} rootEl
 */


function insertMultiDragClones(elementsInserted, rootEl) {
  multiDragClones.forEach(function (clone, i) {
    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(clone, target);
    } else {
      rootEl.appendChild(clone);
    }
  });
}

function removeMultiDragElements() {
  multiDragElements.forEach(function (multiDragElement) {
    if (multiDragElement === dragEl$1) return;
    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);
  });
}

Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);

/* harmony default export */ __webpack_exports__["default"] = (Sortable);



/***/ }),

/***/ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ invariant; }
/* harmony export */ });
var isProduction = "development" === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? prefix + ": " + provided : prefix;
    throw new Error(value);
}




/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ (function(module) {

"use strict";
module.exports = window["React"];

/***/ }),

/***/ "@wordpress/blocks":
/*!********************************!*\
  !*** external ["wp","blocks"] ***!
  \********************************/
/***/ (function(module) {

"use strict";
module.exports = window["wp"]["blocks"];

/***/ }),

/***/ "@wordpress/element":
/*!*********************************!*\
  !*** external ["wp","element"] ***!
  \*********************************/
/***/ (function(module) {

"use strict";
module.exports = window["wp"]["element"];

/***/ }),

/***/ "@wordpress/primitives":
/*!************************************!*\
  !*** external ["wp","primitives"] ***!
  \************************************/
/***/ (function(module) {

"use strict";
module.exports = window["wp"]["primitives"];

/***/ }),

/***/ "@wordpress/server-side-render":
/*!******************************************!*\
  !*** external ["wp","serverSideRender"] ***!
  \******************************************/
/***/ (function(module) {

"use strict";
module.exports = window["wp"]["serverSideRender"];

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
/*!**********************!*\
  !*** ./src/block.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _site_hero_block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./site-hero/block.js */ "./src/site-hero/block.js");
/* harmony import */ var _cta_hero_block_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cta-hero/block.js */ "./src/cta-hero/block.js");
/* harmony import */ var _title_hero_block_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./title-hero/block.js */ "./src/title-hero/block.js");
/* harmony import */ var _info_box_hero_block_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./info-box-hero/block.js */ "./src/info-box-hero/block.js");
/* harmony import */ var _list_block_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list/block.js */ "./src/list/block.js");
/* harmony import */ var _cta_banner_block_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cta-banner/block.js */ "./src/cta-banner/block.js");
/* harmony import */ var _cta_button_block_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cta-button/block.js */ "./src/cta-button/block.js");
/* harmony import */ var _faculty_profile_card_block_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./faculty-profile-card/block.js */ "./src/faculty-profile-card/block.js");
/* harmony import */ var _feature_story_block_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./feature-story/block.js */ "./src/feature-story/block.js");
/* harmony import */ var _proofpoint_block_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./proofpoint/block.js */ "./src/proofpoint/block.js");
/* harmony import */ var _testimonial_block_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./testimonial/block.js */ "./src/testimonial/block.js");
/* harmony import */ var _image_showcase_block_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./image-showcase/block.js */ "./src/image-showcase/block.js");
/* harmony import */ var _title_nav_block_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./title-nav/block.js */ "./src/title-nav/block.js");
/* harmony import */ var _title_nav_title_nav_link_block_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./title-nav/title-nav-link/block.js */ "./src/title-nav/title-nav-link/block.js");
/* harmony import */ var _card_block_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./card/block.js */ "./src/card/block.js");
/* harmony import */ var _accordion_block_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./accordion/block.js */ "./src/accordion/block.js");
/* harmony import */ var _cta_card_block_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./cta-card/block.js */ "./src/cta-card/block.js");
/* harmony import */ var _purdue_rss_block_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./purdue-rss/block.js */ "./src/purdue-rss/block.js");
/* harmony import */ var _anchor_link_navigation_block_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./anchor-link-navigation/block.js */ "./src/anchor-link-navigation/block.js");
/* harmony import */ var _image_toggle_card_block_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./image-toggle-card/block.js */ "./src/image-toggle-card/block.js");
/* harmony import */ var _content_page_layout_block_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./content-page-layout/block.js */ "./src/content-page-layout/block.js");
/* harmony import */ var _sidebar_cta_block_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sidebar-cta/block.js */ "./src/sidebar-cta/block.js");
/* harmony import */ var _purdue_news_block_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./purdue-news/block.js */ "./src/purdue-news/block.js");
/* harmony import */ var _custom_side_menu_block_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./custom-side-menu/block.js */ "./src/custom-side-menu/block.js");
/* harmony import */ var _purdue_button_block_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./purdue-button/block.js */ "./src/purdue-button/block.js");
/* harmony import */ var _columns_row_block_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./columns-row/block.js */ "./src/columns-row/block.js");
/* harmony import */ var _purdue_quote_block_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./purdue-quote/block.js */ "./src/purdue-quote/block.js");
/* harmony import */ var _alert_banner_block_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./alert-banner/block.js */ "./src/alert-banner/block.js");
/* harmony import */ var _mini_hero_block_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./mini-hero/block.js */ "./src/mini-hero/block.js");
/* harmony import */ var _profile_gallery_block_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./profile-gallery/block.js */ "./src/profile-gallery/block.js");
/* harmony import */ var _purdue_tabs_block_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./purdue-tabs/block.js */ "./src/purdue-tabs/block.js");
/* harmony import */ var _purdue_tabs_purdue_tab_block_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./purdue-tabs/purdue-tab/block.js */ "./src/purdue-tabs/purdue-tab/block.js");
/* harmony import */ var _shape_separator_block_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./shape-separator/block.js */ "./src/shape-separator/block.js");
/* harmony import */ var _video_hero_block_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./video-hero/block.js */ "./src/video-hero/block.js");
/* harmony import */ var _story_line_block_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./story-line/block.js */ "./src/story-line/block.js");
/* harmony import */ var _large_featured_story_block_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./large-featured-story/block.js */ "./src/large-featured-story/block.js");
/* harmony import */ var _large_text_block_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./large-text/block.js */ "./src/large-text/block.js");
/* harmony import */ var _sidebar_box_block_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sidebar-box/block.js */ "./src/sidebar-box/block.js");
/* harmony import */ var _contact_card_block_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./contact-card/block.js */ "./src/contact-card/block.js");
/* harmony import */ var _text_hero_block_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./text-hero/block.js */ "./src/text-hero/block.js");
/* harmony import */ var _purdue_slider_block_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./purdue-slider/block.js */ "./src/purdue-slider/block.js");
/* harmony import */ var _rtb_cards_block_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./rtb-cards/block.js */ "./src/rtb-cards/block.js");
/* harmony import */ var _purdue_vertical_slider_block_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./purdue-vertical-slider/block.js */ "./src/purdue-vertical-slider/block.js");
/* harmony import */ var _profile_hero_block_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./profile-hero/block.js */ "./src/profile-hero/block.js");
/* harmony import */ var _link_cards_block_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./link-cards/block.js */ "./src/link-cards/block.js");
/* harmony import */ var _image_gallery_block_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./image-gallery/block.js */ "./src/image-gallery/block.js");
/* harmony import */ var _video_embed_block_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./video-embed/block.js */ "./src/video-embed/block.js");
/* harmony import */ var _icon_group_block_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./icon-group/block.js */ "./src/icon-group/block.js");
/* harmony import */ var _podcast_block_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./podcast/block.js */ "./src/podcast/block.js");
/* harmony import */ var _ad_banner_block_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./ad-banner/block.js */ "./src/ad-banner/block.js");
/**
 * Gutenberg Blocks
 *
 * All blocks related JavaScript files should be imported here.
 * You can create a new block folder in this dir and include code
 * for that block here as well.
 *
 * All blocks should be included here since this is the file that
 * Webpack is compiling as the input file.
 */













































 //Developertown blocks





}();
/******/ })()
;